/*
 * Form layout definition
 * Contains form layout definition objects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.formdefinition.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.smartbit4all.api.value.bean.Value;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SmartMatrixModel
 */
@JsonPropertyOrder({
  SmartMatrixModel.ROWS,
  SmartMatrixModel.COLUMNS,
  SmartMatrixModel.DATA
})
@JsonTypeName("SmartMatrixModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SmartMatrixModel {
  public static final String ROWS = "rows";
  private List<Value> rows = null;

  public static final String COLUMNS = "columns";
  private List<Value> columns = null;

  public static final String DATA = "data";
  private Map<String, Object> data = null;

  public SmartMatrixModel() { 
  }

  public SmartMatrixModel rows(List<Value> rows) {
    
    this.rows = rows;
    return this;
  }

  public SmartMatrixModel addRowsItem(Value rowsItem) {
    if (this.rows == null) {
      this.rows = new ArrayList<>();
    }
    this.rows.add(rowsItem);
    return this;
  }

   /**
   * The keys
   * @return rows
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The keys")
  @JsonProperty(ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Value> getRows() {
    return rows;
  }


  @JsonProperty(ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRows(List<Value> rows) {
    this.rows = rows;
  }


  public SmartMatrixModel columns(List<Value> columns) {
    
    this.columns = columns;
    return this;
  }

  public SmartMatrixModel addColumnsItem(Value columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * The possible values
   * @return columns
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The possible values")
  @JsonProperty(COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Value> getColumns() {
    return columns;
  }


  @JsonProperty(COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColumns(List<Value> columns) {
    this.columns = columns;
  }


  public SmartMatrixModel data(Map<String, Object> data) {
    
    this.data = data;
    return this;
  }

  public SmartMatrixModel putDataItem(String key, Object dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * A map for key - values
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A map for key - values")
  @JsonProperty(DATA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getData() {
    return data;
  }


  @JsonProperty(DATA)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Map<String, Object> data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmartMatrixModel smartMatrixModel = (SmartMatrixModel) o;
    return Objects.equals(this.rows, smartMatrixModel.rows) &&
        Objects.equals(this.columns, smartMatrixModel.columns) &&
        Objects.equals(this.data, smartMatrixModel.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rows, columns, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmartMatrixModel {\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

