/*
 * Object api
 * The object api responsible for the domain object meta information including the object definitions and the relations among them. These objects are stored because the modules can contribute. The modules have their own ObjectApi that manages the storage and ensure the up-to-date view of the current data. The algorithms are running on the ObjectApi cache refreshed periodically. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.object.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.smartbit4all.api.object.bean.PropertyDefinitionData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The object property is the descriptor of a property available for a management. 
 */
@ApiModel(description = "The object property is the descriptor of a property available for a management. ")
@JsonPropertyOrder({
  ObjectPropertyDescriptor.URI,
  ObjectPropertyDescriptor.PROPERTY_DEFINITION,
  ObjectPropertyDescriptor.BUILT_IN,
  ObjectPropertyDescriptor.EXTENSION,
  ObjectPropertyDescriptor.OBJECT_QUALIFIED_NAME
})
@JsonTypeName("ObjectPropertyDescriptor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectPropertyDescriptor {
  public static final String URI = "uri";
  private URI uri;

  public static final String PROPERTY_DEFINITION = "propertyDefinition";
  private PropertyDefinitionData propertyDefinition = null;

  public static final String BUILT_IN = "builtIn";
  private Boolean builtIn = true;

  public static final String EXTENSION = "extension";
  private Boolean extension = false;

  public static final String OBJECT_QUALIFIED_NAME = "objectQualifiedName";
  private String objectQualifiedName;

  public ObjectPropertyDescriptor() { 
  }

  public ObjectPropertyDescriptor uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public ObjectPropertyDescriptor propertyDefinition(PropertyDefinitionData propertyDefinition) {
    
    this.propertyDefinition = propertyDefinition;
    return this;
  }

   /**
   * The property definition of the given property.
   * @return propertyDefinition
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The property definition of the given property.")
  @JsonProperty(PROPERTY_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PropertyDefinitionData getPropertyDefinition() {
    return propertyDefinition;
  }


  @JsonProperty(PROPERTY_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPropertyDefinition(PropertyDefinitionData propertyDefinition) {
    this.propertyDefinition = propertyDefinition;
  }


  public ObjectPropertyDescriptor builtIn(Boolean builtIn) {
    
    this.builtIn = builtIn;
    return this;
  }

   /**
   * The built in property can not be deleted (removed).
   * @return builtIn
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The built in property can not be deleted (removed).")
  @JsonProperty(BUILT_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBuiltIn() {
    return builtIn;
  }


  @JsonProperty(BUILT_IN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBuiltIn(Boolean builtIn) {
    this.builtIn = builtIn;
  }


  public ObjectPropertyDescriptor extension(Boolean extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * The extension property can be used for to construct extended object definition for the objectQualifiedName object. Like we can use the given property to create extended DocumentType. 
   * @return extension
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The extension property can be used for to construct extended object definition for the objectQualifiedName object. Like we can use the given property to create extended DocumentType. ")
  @JsonProperty(EXTENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getExtension() {
    return extension;
  }


  @JsonProperty(EXTENSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtension(Boolean extension) {
    this.extension = extension;
  }


  public ObjectPropertyDescriptor objectQualifiedName(String objectQualifiedName) {
    
    this.objectQualifiedName = objectQualifiedName;
    return this;
  }

   /**
   * The qualified name of object the property belongs to. If it not an extension then we can use it to extend the given object. Otherwise it is the object that owns the given proporty. 
   * @return objectQualifiedName
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The qualified name of object the property belongs to. If it not an extension then we can use it to extend the given object. Otherwise it is the object that owns the given proporty. ")
  @JsonProperty(OBJECT_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getObjectQualifiedName() {
    return objectQualifiedName;
  }


  @JsonProperty(OBJECT_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjectQualifiedName(String objectQualifiedName) {
    this.objectQualifiedName = objectQualifiedName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPropertyDescriptor objectPropertyDescriptor = (ObjectPropertyDescriptor) o;
    return Objects.equals(this.uri, objectPropertyDescriptor.uri) &&
        Objects.equals(this.propertyDefinition, objectPropertyDescriptor.propertyDefinition) &&
        Objects.equals(this.builtIn, objectPropertyDescriptor.builtIn) &&
        Objects.equals(this.extension, objectPropertyDescriptor.extension) &&
        Objects.equals(this.objectQualifiedName, objectPropertyDescriptor.objectQualifiedName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, propertyDefinition, builtIn, extension, objectQualifiedName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPropertyDescriptor {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    propertyDefinition: ").append(toIndentedString(propertyDefinition)).append("\n");
    sb.append("    builtIn: ").append(toIndentedString(builtIn)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    objectQualifiedName: ").append(toIndentedString(objectQualifiedName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

