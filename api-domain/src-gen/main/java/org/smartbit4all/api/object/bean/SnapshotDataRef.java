/*
 * Object api
 * The object api responsible for the domain object meta information including the object definitions and the relations among them. These objects are stored because the modules can contribute. The modules have their own ObjectApi that manages the storage and ensure the up-to-date view of the current data. The algorithms are running on the ObjectApi cache refreshed periodically. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.object.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.smartbit4all.api.object.bean.SnapshotData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * null
 */
@ApiModel(description = "null")
@JsonPropertyOrder({
  SnapshotDataRef.OBJECT_URI,
  SnapshotDataRef.IS_LOADED,
  SnapshotDataRef.DATA
})
@JsonTypeName("SnapshotDataRef")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SnapshotDataRef {
  public static final String OBJECT_URI = "objectUri";
  private URI objectUri;

  public static final String IS_LOADED = "isLoaded";
  private Boolean isLoaded;

  public static final String DATA = "data";
  private SnapshotData data;

  public SnapshotDataRef() { 
  }

  public SnapshotDataRef objectUri(URI objectUri) {
    
    this.objectUri = objectUri;
    return this;
  }

   /**
   * Get objectUri
   * @return objectUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getObjectUri() {
    return objectUri;
  }


  @JsonProperty(OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectUri(URI objectUri) {
    this.objectUri = objectUri;
  }


  public SnapshotDataRef isLoaded(Boolean isLoaded) {
    
    this.isLoaded = isLoaded;
    return this;
  }

   /**
   * Get isLoaded
   * @return isLoaded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(IS_LOADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsLoaded() {
    return isLoaded;
  }


  @JsonProperty(IS_LOADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsLoaded(Boolean isLoaded) {
    this.isLoaded = isLoaded;
  }


  public SnapshotDataRef data(SnapshotData data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SnapshotData getData() {
    return data;
  }


  @JsonProperty(DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(SnapshotData data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotDataRef snapshotDataRef = (SnapshotDataRef) o;
    return Objects.equals(this.objectUri, snapshotDataRef.objectUri) &&
        Objects.equals(this.isLoaded, snapshotDataRef.isLoaded) &&
        Objects.equals(this.data, snapshotDataRef.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectUri, isLoaded, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotDataRef {\n");
    sb.append("    objectUri: ").append(toIndentedString(objectUri)).append("\n");
    sb.append("    isLoaded: ").append(toIndentedString(isLoaded)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

