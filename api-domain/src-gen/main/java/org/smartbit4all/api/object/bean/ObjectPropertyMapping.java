/*
 * Object api
 * The object api responsible for the domain object meta information including the object definitions and the relations among them. These objects are stored because the modules can contribute. The modules have their own ObjectApi that manages the storage and ensure the up-to-date view of the current data. The algorithms are running on the ObjectApi cache refreshed periodically. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.object.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This is a mapping definition that denotes the two property. 
 */
@ApiModel(description = "This is a mapping definition that denotes the two property. ")
@JsonPropertyOrder({
  ObjectPropertyMapping.SOURCE_PATH,
  ObjectPropertyMapping.TARGET_PATH
})
@JsonTypeName("ObjectPropertyMapping")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectPropertyMapping {
  public static final String SOURCE_PATH = "sourcePath";
  private List<String> sourcePath = null;

  public static final String TARGET_PATH = "targetPath";
  private List<String> targetPath = null;

  public ObjectPropertyMapping() { 
  }

  public ObjectPropertyMapping sourcePath(List<String> sourcePath) {
    
    this.sourcePath = sourcePath;
    return this;
  }

  public ObjectPropertyMapping addSourcePathItem(String sourcePathItem) {
    if (this.sourcePath == null) {
      this.sourcePath = new ArrayList<>();
    }
    this.sourcePath.add(sourcePathItem);
    return this;
  }

   /**
   * Get sourcePath
   * @return sourcePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SOURCE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSourcePath() {
    return sourcePath;
  }


  @JsonProperty(SOURCE_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourcePath(List<String> sourcePath) {
    this.sourcePath = sourcePath;
  }


  public ObjectPropertyMapping targetPath(List<String> targetPath) {
    
    this.targetPath = targetPath;
    return this;
  }

  public ObjectPropertyMapping addTargetPathItem(String targetPathItem) {
    if (this.targetPath == null) {
      this.targetPath = new ArrayList<>();
    }
    this.targetPath.add(targetPathItem);
    return this;
  }

   /**
   * Get targetPath
   * @return targetPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTargetPath() {
    return targetPath;
  }


  @JsonProperty(TARGET_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetPath(List<String> targetPath) {
    this.targetPath = targetPath;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPropertyMapping objectPropertyMapping = (ObjectPropertyMapping) o;
    return Objects.equals(this.sourcePath, objectPropertyMapping.sourcePath) &&
        Objects.equals(this.targetPath, objectPropertyMapping.targetPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourcePath, targetPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPropertyMapping {\n");
    sb.append("    sourcePath: ").append(toIndentedString(sourcePath)).append("\n");
    sb.append("    targetPath: ").append(toIndentedString(targetPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

