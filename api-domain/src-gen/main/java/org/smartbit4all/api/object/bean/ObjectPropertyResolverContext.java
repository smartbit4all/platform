/*
 * Object api
 * The object api responsible for the domain object meta information including the object definitions and the relations among them. These objects are stored because the modules can contribute. The modules have their own ObjectApi that manages the storage and ensure the up-to-date view of the current data. The algorithms are running on the ObjectApi cache refreshed periodically. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.object.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.object.bean.ObjectPropertyResolverContextObject;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The context objects of a property value resolution. 
 */
@ApiModel(description = "The context objects of a property value resolution. ")
@JsonPropertyOrder({
  ObjectPropertyResolverContext.OBJECTS
})
@JsonTypeName("ObjectPropertyResolverContext")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectPropertyResolverContext {
  public static final String OBJECTS = "objects";
  private List<ObjectPropertyResolverContextObject> objects = new ArrayList<>();

  public ObjectPropertyResolverContext() { 
  }

  public ObjectPropertyResolverContext objects(List<ObjectPropertyResolverContextObject> objects) {
    
    this.objects = objects;
    return this;
  }

  public ObjectPropertyResolverContext addObjectsItem(ObjectPropertyResolverContextObject objectsItem) {
    this.objects.add(objectsItem);
    return this;
  }

   /**
   * Get objects
   * @return objects
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(OBJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ObjectPropertyResolverContextObject> getObjects() {
    return objects;
  }


  @JsonProperty(OBJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjects(List<ObjectPropertyResolverContextObject> objects) {
    this.objects = objects;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectPropertyResolverContext objectPropertyResolverContext = (ObjectPropertyResolverContext) o;
    return Objects.equals(this.objects, objectPropertyResolverContext.objects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objects);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectPropertyResolverContext {\n");
    sb.append("    objects: ").append(toIndentedString(objects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

