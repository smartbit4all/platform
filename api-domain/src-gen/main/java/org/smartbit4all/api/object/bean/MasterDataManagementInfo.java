/*
 * Object api
 * The object api responsible for the domain object meta information including the object definitions and the relations among them. These objects are stored because the modules can contribute. The modules have their own ObjectApi that manages the storage and ensure the up-to-date view of the current data. The algorithms are running on the ObjectApi cache refreshed periodically. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.object.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.smartbit4all.api.object.bean.MasterDataManagementEntry;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This info object is the main descriptor of the master data of a given application. Typically this is a single instance in the application instance. 
 */
@ApiModel(description = "This info object is the main descriptor of the master data of a given application. Typically this is a single instance in the application instance. ")
@JsonPropertyOrder({
  MasterDataManagementInfo.URI,
  MasterDataManagementInfo.GLOBAL_BRANCH,
  MasterDataManagementInfo.OBJECTS
})
@JsonTypeName("MasterDataManagementInfo")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MasterDataManagementInfo {
  public static final String URI = "uri";
  private URI uri;

  public static final String GLOBAL_BRANCH = "globalBranch";
  private URI globalBranch;

  public static final String OBJECTS = "objects";
  private Map<String, MasterDataManagementEntry> objects = new HashMap<>();

  public MasterDataManagementInfo() { 
  }

  public MasterDataManagementInfo uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The uri of the object.
   * @return uri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The uri of the object.")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public MasterDataManagementInfo globalBranch(URI globalBranch) {
    
    this.globalBranch = globalBranch;
    return this;
  }

   /**
   * The uri of the global branch if any.
   * @return globalBranch
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The uri of the global branch if any.")
  @JsonProperty(GLOBAL_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getGlobalBranch() {
    return globalBranch;
  }


  @JsonProperty(GLOBAL_BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalBranch(URI globalBranch) {
    this.globalBranch = globalBranch;
  }


  public MasterDataManagementInfo objects(Map<String, MasterDataManagementEntry> objects) {
    
    this.objects = objects;
    return this;
  }

  public MasterDataManagementInfo putObjectsItem(String key, MasterDataManagementEntry objectsItem) {
    this.objects.put(key, objectsItem);
    return this;
  }

   /**
   * Get objects
   * @return objects
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(OBJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, MasterDataManagementEntry> getObjects() {
    return objects;
  }


  @JsonProperty(OBJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjects(Map<String, MasterDataManagementEntry> objects) {
    this.objects = objects;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MasterDataManagementInfo masterDataManagementInfo = (MasterDataManagementInfo) o;
    return Objects.equals(this.uri, masterDataManagementInfo.uri) &&
        Objects.equals(this.globalBranch, masterDataManagementInfo.globalBranch) &&
        Objects.equals(this.objects, masterDataManagementInfo.objects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, globalBranch, objects);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MasterDataManagementInfo {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    globalBranch: ").append(toIndentedString(globalBranch)).append("\n");
    sb.append("    objects: ").append(toIndentedString(objects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

