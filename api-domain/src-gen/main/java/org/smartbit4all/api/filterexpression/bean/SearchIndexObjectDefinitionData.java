/*
 * Filter API 2
 * Filter API 2
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.filterexpression.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.filterexpression.bean.SearchIndexPropertyDefinitionData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This mapping binds the objects of the domain with the entities of the search index. By default all the properties are included in the search index. But we can have positive and negative exceptions to specify the exact attributes to include. 
 */
@ApiModel(description = "This mapping binds the objects of the domain with the entities of the search index. By default all the properties are included in the search index. But we can have positive and negative exceptions to specify the exact attributes to include. ")
@JsonPropertyOrder({
  SearchIndexObjectDefinitionData.OBJECT_CLASS_NAME,
  SearchIndexObjectDefinitionData.PROPERTY_DEFINITIONS
})
@JsonTypeName("SearchIndexObjectDefinitionData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchIndexObjectDefinitionData {
  public static final String OBJECT_CLASS_NAME = "objectClassName";
  private String objectClassName;

  public static final String PROPERTY_DEFINITIONS = "propertyDefinitions";
  private List<SearchIndexPropertyDefinitionData> propertyDefinitions = null;

  public SearchIndexObjectDefinitionData() { 
  }

  public SearchIndexObjectDefinitionData objectClassName(String objectClassName) {
    
    this.objectClassName = objectClassName;
    return this;
  }

   /**
   * Get objectClassName
   * @return objectClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(OBJECT_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getObjectClassName() {
    return objectClassName;
  }


  @JsonProperty(OBJECT_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectClassName(String objectClassName) {
    this.objectClassName = objectClassName;
  }


  public SearchIndexObjectDefinitionData propertyDefinitions(List<SearchIndexPropertyDefinitionData> propertyDefinitions) {
    
    this.propertyDefinitions = propertyDefinitions;
    return this;
  }

  public SearchIndexObjectDefinitionData addPropertyDefinitionsItem(SearchIndexPropertyDefinitionData propertyDefinitionsItem) {
    if (this.propertyDefinitions == null) {
      this.propertyDefinitions = new ArrayList<>();
    }
    this.propertyDefinitions.add(propertyDefinitionsItem);
    return this;
  }

   /**
   * Get propertyDefinitions
   * @return propertyDefinitions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(PROPERTY_DEFINITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SearchIndexPropertyDefinitionData> getPropertyDefinitions() {
    return propertyDefinitions;
  }


  @JsonProperty(PROPERTY_DEFINITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyDefinitions(List<SearchIndexPropertyDefinitionData> propertyDefinitions) {
    this.propertyDefinitions = propertyDefinitions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchIndexObjectDefinitionData searchIndexObjectDefinitionData = (SearchIndexObjectDefinitionData) o;
    return Objects.equals(this.objectClassName, searchIndexObjectDefinitionData.objectClassName) &&
        Objects.equals(this.propertyDefinitions, searchIndexObjectDefinitionData.propertyDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectClassName, propertyDefinitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchIndexObjectDefinitionData {\n");
    sb.append("    objectClassName: ").append(toIndentedString(objectClassName)).append("\n");
    sb.append("    propertyDefinitions: ").append(toIndentedString(propertyDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

