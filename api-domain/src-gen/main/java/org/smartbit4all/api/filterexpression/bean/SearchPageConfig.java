/*
 * Filter API 2
 * Filter API 2
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.filterexpression.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.collection.bean.StoredCollectionDescriptor;
import org.smartbit4all.api.filterexpression.bean.FilterExpressionBuilderModel;
import org.smartbit4all.api.grid.bean.GridView;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This object has every configuration data that is necessary to open a SearchIndexResult page. It contains the possible filter expressions in a FilterExpresisonBuilderModel and also the parameterization of the result grid in a GridViewDescriptor object. 
 */
@ApiModel(description = "This object has every configuration data that is necessary to open a SearchIndexResult page. It contains the possible filter expressions in a FilterExpresisonBuilderModel and also the parameterization of the result grid in a GridViewDescriptor object. ")
@JsonPropertyOrder({
  SearchPageConfig.URI,
  SearchPageConfig.FILTER_MODEL,
  SearchPageConfig.SEARCH_INDEX_SCHEMA,
  SearchPageConfig.SEARCH_INDEX_NAME,
  SearchPageConfig.CONTAINER,
  SearchPageConfig.HISTORY_OBJECT_URI,
  SearchPageConfig.HISTORY_LOWER_BOUND,
  SearchPageConfig.HISTORY_UPPER_BOUND,
  SearchPageConfig.HISTORY_PAGE_SIZE,
  SearchPageConfig.SKIP_INITIAL_QUERY,
  SearchPageConfig.GRID_VIEW_OPTIONS
})
@JsonTypeName("SearchPageConfig")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchPageConfig {
  public static final String URI = "uri";
  private URI uri;

  public static final String FILTER_MODEL = "filterModel";
  private FilterExpressionBuilderModel filterModel;

  public static final String SEARCH_INDEX_SCHEMA = "searchIndexSchema";
  private String searchIndexSchema;

  public static final String SEARCH_INDEX_NAME = "searchIndexName";
  private String searchIndexName;

  public static final String CONTAINER = "container";
  private StoredCollectionDescriptor container = null;

  public static final String HISTORY_OBJECT_URI = "historyObjectUri";
  private URI historyObjectUri;

  public static final String HISTORY_LOWER_BOUND = "historyLowerBound";
  private Long historyLowerBound;

  public static final String HISTORY_UPPER_BOUND = "historyUpperBound";
  private Long historyUpperBound;

  public static final String HISTORY_PAGE_SIZE = "historyPageSize";
  private Integer historyPageSize;

  public static final String SKIP_INITIAL_QUERY = "skipInitialQuery";
  private Boolean skipInitialQuery;

  public static final String GRID_VIEW_OPTIONS = "gridViewOptions";
  private List<GridView> gridViewOptions = new ArrayList<>();

  public SearchPageConfig() { 
  }

  public SearchPageConfig uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public SearchPageConfig filterModel(FilterExpressionBuilderModel filterModel) {
    
    this.filterModel = filterModel;
    return this;
  }

   /**
   * Get filterModel
   * @return filterModel
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(FILTER_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterExpressionBuilderModel getFilterModel() {
    return filterModel;
  }


  @JsonProperty(FILTER_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterModel(FilterExpressionBuilderModel filterModel) {
    this.filterModel = filterModel;
  }


  public SearchPageConfig searchIndexSchema(String searchIndexSchema) {
    
    this.searchIndexSchema = searchIndexSchema;
    return this;
  }

   /**
   * The schema name of the search index.
   * @return searchIndexSchema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The schema name of the search index.")
  @JsonProperty(SEARCH_INDEX_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchIndexSchema() {
    return searchIndexSchema;
  }


  @JsonProperty(SEARCH_INDEX_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchIndexSchema(String searchIndexSchema) {
    this.searchIndexSchema = searchIndexSchema;
  }


  public SearchPageConfig searchIndexName(String searchIndexName) {
    
    this.searchIndexName = searchIndexName;
    return this;
  }

   /**
   * The name of the search index.
   * @return searchIndexName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the search index.")
  @JsonProperty(SEARCH_INDEX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchIndexName() {
    return searchIndexName;
  }


  @JsonProperty(SEARCH_INDEX_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchIndexName(String searchIndexName) {
    this.searchIndexName = searchIndexName;
  }


  public SearchPageConfig container(StoredCollectionDescriptor container) {
    
    this.container = container;
    return this;
  }

   /**
   * The conteiner to run the query against.
   * @return container
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The conteiner to run the query against.")
  @JsonProperty(CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StoredCollectionDescriptor getContainer() {
    return container;
  }


  @JsonProperty(CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainer(StoredCollectionDescriptor container) {
    this.container = container;
  }


  public SearchPageConfig historyObjectUri(URI historyObjectUri) {
    
    this.historyObjectUri = historyObjectUri;
    return this;
  }

   /**
   * If we set this property then the given search page is iterating through the version of this object.
   * @return historyObjectUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "If we set this property then the given search page is iterating through the version of this object.")
  @JsonProperty(HISTORY_OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getHistoryObjectUri() {
    return historyObjectUri;
  }


  @JsonProperty(HISTORY_OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryObjectUri(URI historyObjectUri) {
    this.historyObjectUri = historyObjectUri;
  }


  public SearchPageConfig historyLowerBound(Long historyLowerBound) {
    
    this.historyLowerBound = historyLowerBound;
    return this;
  }

   /**
   * If we set this property then the page is loading the given version as the oldest one.
   * @return historyLowerBound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If we set this property then the page is loading the given version as the oldest one.")
  @JsonProperty(HISTORY_LOWER_BOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getHistoryLowerBound() {
    return historyLowerBound;
  }


  @JsonProperty(HISTORY_LOWER_BOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryLowerBound(Long historyLowerBound) {
    this.historyLowerBound = historyLowerBound;
  }


  public SearchPageConfig historyUpperBound(Long historyUpperBound) {
    
    this.historyUpperBound = historyUpperBound;
    return this;
  }

   /**
   * If we set this property then the page is loading the given version as the newest one.
   * @return historyUpperBound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If we set this property then the page is loading the given version as the newest one.")
  @JsonProperty(HISTORY_UPPER_BOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getHistoryUpperBound() {
    return historyUpperBound;
  }


  @JsonProperty(HISTORY_UPPER_BOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryUpperBound(Long historyUpperBound) {
    this.historyUpperBound = historyUpperBound;
  }


  public SearchPageConfig historyPageSize(Integer historyPageSize) {
    
    this.historyPageSize = historyPageSize;
    return this;
  }

   /**
   * If we set this property and skip any or all of the lower or upper bound then we load this this number of versions after the lower bound or before the upper bound or before the latest version. It will be the initial size of the pageing while iteration through the history entries. 
   * @return historyPageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If we set this property and skip any or all of the lower or upper bound then we load this this number of versions after the lower bound or before the upper bound or before the latest version. It will be the initial size of the pageing while iteration through the history entries. ")
  @JsonProperty(HISTORY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHistoryPageSize() {
    return historyPageSize;
  }


  @JsonProperty(HISTORY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryPageSize(Integer historyPageSize) {
    this.historyPageSize = historyPageSize;
  }


  public SearchPageConfig skipInitialQuery(Boolean skipInitialQuery) {
    
    this.skipInitialQuery = skipInitialQuery;
    return this;
  }

   /**
   * Execute query right after the page is opened or not.
   * @return skipInitialQuery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Execute query right after the page is opened or not.")
  @JsonProperty(SKIP_INITIAL_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipInitialQuery() {
    return skipInitialQuery;
  }


  @JsonProperty(SKIP_INITIAL_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipInitialQuery(Boolean skipInitialQuery) {
    this.skipInitialQuery = skipInitialQuery;
  }


  public SearchPageConfig gridViewOptions(List<GridView> gridViewOptions) {
    
    this.gridViewOptions = gridViewOptions;
    return this;
  }

  public SearchPageConfig addGridViewOptionsItem(GridView gridViewOptionsItem) {
    this.gridViewOptions.add(gridViewOptionsItem);
    return this;
  }

   /**
   * The appearence of the result grid can be parameterized with this object. If we pass no option then the default grid will appear. If we pass more than one then the user can select with an option selector. 
   * @return gridViewOptions
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The appearence of the result grid can be parameterized with this object. If we pass no option then the default grid will appear. If we pass more than one then the user can select with an option selector. ")
  @JsonProperty(GRID_VIEW_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GridView> getGridViewOptions() {
    return gridViewOptions;
  }


  @JsonProperty(GRID_VIEW_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGridViewOptions(List<GridView> gridViewOptions) {
    this.gridViewOptions = gridViewOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchPageConfig searchPageConfig = (SearchPageConfig) o;
    return Objects.equals(this.uri, searchPageConfig.uri) &&
        Objects.equals(this.filterModel, searchPageConfig.filterModel) &&
        Objects.equals(this.searchIndexSchema, searchPageConfig.searchIndexSchema) &&
        Objects.equals(this.searchIndexName, searchPageConfig.searchIndexName) &&
        Objects.equals(this.container, searchPageConfig.container) &&
        Objects.equals(this.historyObjectUri, searchPageConfig.historyObjectUri) &&
        Objects.equals(this.historyLowerBound, searchPageConfig.historyLowerBound) &&
        Objects.equals(this.historyUpperBound, searchPageConfig.historyUpperBound) &&
        Objects.equals(this.historyPageSize, searchPageConfig.historyPageSize) &&
        Objects.equals(this.skipInitialQuery, searchPageConfig.skipInitialQuery) &&
        Objects.equals(this.gridViewOptions, searchPageConfig.gridViewOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, filterModel, searchIndexSchema, searchIndexName, container, historyObjectUri, historyLowerBound, historyUpperBound, historyPageSize, skipInitialQuery, gridViewOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchPageConfig {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    filterModel: ").append(toIndentedString(filterModel)).append("\n");
    sb.append("    searchIndexSchema: ").append(toIndentedString(searchIndexSchema)).append("\n");
    sb.append("    searchIndexName: ").append(toIndentedString(searchIndexName)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    historyObjectUri: ").append(toIndentedString(historyObjectUri)).append("\n");
    sb.append("    historyLowerBound: ").append(toIndentedString(historyLowerBound)).append("\n");
    sb.append("    historyUpperBound: ").append(toIndentedString(historyUpperBound)).append("\n");
    sb.append("    historyPageSize: ").append(toIndentedString(historyPageSize)).append("\n");
    sb.append("    skipInitialQuery: ").append(toIndentedString(skipInitialQuery)).append("\n");
    sb.append("    gridViewOptions: ").append(toIndentedString(gridViewOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

