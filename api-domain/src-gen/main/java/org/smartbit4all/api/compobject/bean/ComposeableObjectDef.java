/*
 * Composite Object API
 * Composite Object API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.compobject.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ComposeableObjectDef
 */
@JsonPropertyOrder({
  ComposeableObjectDef.URI,
  ComposeableObjectDef.API_URI,
  ComposeableObjectDef.NAME,
  ComposeableObjectDef.VIEW_NAME,
  ComposeableObjectDef.ICON
})
@JsonTypeName("ComposeableObjectDef")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ComposeableObjectDef {
  public static final String URI = "uri";
  private URI uri;

  public static final String API_URI = "apiUri";
  private URI apiUri;

  public static final String NAME = "name";
  private String name;

  public static final String VIEW_NAME = "viewName";
  private String viewName;

  public static final String ICON = "icon";
  private String icon;


  public ComposeableObjectDef uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public ComposeableObjectDef apiUri(URI apiUri) {
    
    this.apiUri = apiUri;
    return this;
  }

   /**
   * Get apiUri
   * @return apiUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(API_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getApiUri() {
    return apiUri;
  }


  @JsonProperty(API_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiUri(URI apiUri) {
    this.apiUri = apiUri;
  }


  public ComposeableObjectDef name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * NavigationEntry name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "NavigationEntry name.")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ComposeableObjectDef viewName(String viewName) {
    
    this.viewName = viewName;
    return this;
  }

   /**
   * Get viewName
   * @return viewName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getViewName() {
    return viewName;
  }


  @JsonProperty(VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewName(String viewName) {
    this.viewName = viewName;
  }


  public ComposeableObjectDef icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComposeableObjectDef composeableObjectDef = (ComposeableObjectDef) o;
    return Objects.equals(this.uri, composeableObjectDef.uri) &&
        Objects.equals(this.apiUri, composeableObjectDef.apiUri) &&
        Objects.equals(this.name, composeableObjectDef.name) &&
        Objects.equals(this.viewName, composeableObjectDef.viewName) &&
        Objects.equals(this.icon, composeableObjectDef.icon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, apiUri, name, viewName, icon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComposeableObjectDef {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    apiUri: ").append(toIndentedString(apiUri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    viewName: ").append(toIndentedString(viewName)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

