/*
 * Composite Object API
 * Composite Object API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.compobject.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.compobject.bean.CompositeObjectAssociation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * CompositeObjectDef
 */
@JsonPropertyOrder({
  CompositeObjectDef.URI,
  CompositeObjectDef.NAME,
  CompositeObjectDef.DESCRIPTION,
  CompositeObjectDef.COMPOSEABLE_DEF_URI,
  CompositeObjectDef.ASSOCIATIONS
})
@JsonTypeName("CompositeObjectDef")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CompositeObjectDef {
  public static final String URI = "uri";
  private URI uri;

  public static final String NAME = "name";
  private String name;

  public static final String DESCRIPTION = "description";
  private String description;

  public static final String COMPOSEABLE_DEF_URI = "composeableDefUri";
  private URI composeableDefUri;

  public static final String ASSOCIATIONS = "associations";
  private List<CompositeObjectAssociation> associations = null;


  public CompositeObjectDef uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public CompositeObjectDef name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CompositeObjectDef description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CompositeObjectDef composeableDefUri(URI composeableDefUri) {
    
    this.composeableDefUri = composeableDefUri;
    return this;
  }

   /**
   * The CompositeObjects&#39;s ComposeableObjectDef uri field, which determines the view, icon etc.
   * @return composeableDefUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The CompositeObjects's ComposeableObjectDef uri field, which determines the view, icon etc.")
  @JsonProperty(COMPOSEABLE_DEF_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getComposeableDefUri() {
    return composeableDefUri;
  }


  @JsonProperty(COMPOSEABLE_DEF_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComposeableDefUri(URI composeableDefUri) {
    this.composeableDefUri = composeableDefUri;
  }


  public CompositeObjectDef associations(List<CompositeObjectAssociation> associations) {
    
    this.associations = associations;
    return this;
  }

  public CompositeObjectDef addAssociationsItem(CompositeObjectAssociation associationsItem) {
    if (this.associations == null) {
      this.associations = new ArrayList<>();
    }
    this.associations.add(associationsItem);
    return this;
  }

   /**
   * Get associations
   * @return associations
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(ASSOCIATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CompositeObjectAssociation> getAssociations() {
    return associations;
  }


  @JsonProperty(ASSOCIATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssociations(List<CompositeObjectAssociation> associations) {
    this.associations = associations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompositeObjectDef compositeObjectDef = (CompositeObjectDef) o;
    return Objects.equals(this.uri, compositeObjectDef.uri) &&
        Objects.equals(this.name, compositeObjectDef.name) &&
        Objects.equals(this.description, compositeObjectDef.description) &&
        Objects.equals(this.composeableDefUri, compositeObjectDef.composeableDefUri) &&
        Objects.equals(this.associations, compositeObjectDef.associations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, name, description, composeableDefUri, associations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompositeObjectDef {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    composeableDefUri: ").append(toIndentedString(composeableDefUri)).append("\n");
    sb.append("    associations: ").append(toIndentedString(associations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

