/*
 * UiTree domain objects
 * Tree domain objects
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.uitree.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.view.bean.UiAction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UiTreeNode
 */
@JsonPropertyOrder({
  UiTreeNode.OBJECT_URI,
  UiTreeNode.BRANCH_URI,
  UiTreeNode.IDENTIFIER,
  UiTreeNode.ICON,
  UiTreeNode.CAPTION,
  UiTreeNode.CLASSES,
  UiTreeNode.HAS_CHILDREN,
  UiTreeNode.CHILDREN,
  UiTreeNode.LEVEL,
  UiTreeNode.SHORT_DESCRIPTION,
  UiTreeNode.NODE_TYPE,
  UiTreeNode.ACTIONS
})
@JsonTypeName("UiTreeNode")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UiTreeNode {
  public static final String OBJECT_URI = "objectUri";
  private URI objectUri;

  public static final String BRANCH_URI = "branchUri";
  private URI branchUri;

  public static final String IDENTIFIER = "identifier";
  private String identifier;

  public static final String ICON = "icon";
  private String icon;

  public static final String CAPTION = "caption";
  private String caption;

  public static final String CLASSES = "classes";
  private List<String> classes = new ArrayList<>();

  public static final String HAS_CHILDREN = "hasChildren";
  private Boolean hasChildren = false;

  public static final String CHILDREN = "children";
  private List<String> children = new ArrayList<>();

  public static final String LEVEL = "level";
  private Integer level;

  public static final String SHORT_DESCRIPTION = "shortDescription";
  private String shortDescription;

  public static final String NODE_TYPE = "nodeType";
  private String nodeType;

  public static final String ACTIONS = "actions";
  private List<UiAction> actions = new ArrayList<>();

  public UiTreeNode() { 
  }

  public UiTreeNode objectUri(URI objectUri) {
    
    this.objectUri = objectUri;
    return this;
  }

   /**
   * Get objectUri
   * @return objectUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getObjectUri() {
    return objectUri;
  }


  @JsonProperty(OBJECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectUri(URI objectUri) {
    this.objectUri = objectUri;
  }


  public UiTreeNode branchUri(URI branchUri) {
    
    this.branchUri = branchUri;
    return this;
  }

   /**
   * Get branchUri
   * @return branchUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(BRANCH_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getBranchUri() {
    return branchUri;
  }


  @JsonProperty(BRANCH_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchUri(URI branchUri) {
    this.branchUri = branchUri;
  }


  public UiTreeNode identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public UiTreeNode icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public UiTreeNode caption(String caption) {
    
    this.caption = caption;
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCaption() {
    return caption;
  }


  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaption(String caption) {
    this.caption = caption;
  }


  public UiTreeNode classes(List<String> classes) {
    
    this.classes = classes;
    return this;
  }

  public UiTreeNode addClassesItem(String classesItem) {
    this.classes.add(classesItem);
    return this;
  }

   /**
   * Get classes
   * @return classes
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getClasses() {
    return classes;
  }


  @JsonProperty(CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClasses(List<String> classes) {
    this.classes = classes;
  }


  public UiTreeNode hasChildren(Boolean hasChildren) {
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * Get hasChildren
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasChildren() {
    return hasChildren;
  }


  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public UiTreeNode children(List<String> children) {
    
    this.children = children;
    return this;
  }

  public UiTreeNode addChildrenItem(String childrenItem) {
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getChildren() {
    return children;
  }


  @JsonProperty(CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildren(List<String> children) {
    this.children = children;
  }


  public UiTreeNode level(Integer level) {
    
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLevel() {
    return level;
  }


  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel(Integer level) {
    this.level = level;
  }


  public UiTreeNode shortDescription(String shortDescription) {
    
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Get shortDescription
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortDescription() {
    return shortDescription;
  }


  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public UiTreeNode nodeType(String nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeType() {
    return nodeType;
  }


  @JsonProperty(NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public UiTreeNode actions(List<UiAction> actions) {
    
    this.actions = actions;
    return this;
  }

  public UiTreeNode addActionsItem(UiAction actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UiAction> getActions() {
    return actions;
  }


  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<UiAction> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiTreeNode uiTreeNode = (UiTreeNode) o;
    return Objects.equals(this.objectUri, uiTreeNode.objectUri) &&
        Objects.equals(this.branchUri, uiTreeNode.branchUri) &&
        Objects.equals(this.identifier, uiTreeNode.identifier) &&
        Objects.equals(this.icon, uiTreeNode.icon) &&
        Objects.equals(this.caption, uiTreeNode.caption) &&
        Objects.equals(this.classes, uiTreeNode.classes) &&
        Objects.equals(this.hasChildren, uiTreeNode.hasChildren) &&
        Objects.equals(this.children, uiTreeNode.children) &&
        Objects.equals(this.level, uiTreeNode.level) &&
        Objects.equals(this.shortDescription, uiTreeNode.shortDescription) &&
        Objects.equals(this.nodeType, uiTreeNode.nodeType) &&
        Objects.equals(this.actions, uiTreeNode.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectUri, branchUri, identifier, icon, caption, classes, hasChildren, children, level, shortDescription, nodeType, actions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiTreeNode {\n");
    sb.append("    objectUri: ").append(toIndentedString(objectUri)).append("\n");
    sb.append("    branchUri: ").append(toIndentedString(branchUri)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    classes: ").append(toIndentedString(classes)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

