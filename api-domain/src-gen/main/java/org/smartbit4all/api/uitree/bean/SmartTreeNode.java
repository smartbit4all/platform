/*
 * Uitree Api
 * Tree domain objects
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.uitree.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.view.bean.UiAction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SmartTreeNode
 */
@JsonPropertyOrder({
  SmartTreeNode.IDENTIFIER,
  SmartTreeNode.ICON,
  SmartTreeNode.CAPTION,
  SmartTreeNode.CLASSES,
  SmartTreeNode.HAS_CHILDREN,
  SmartTreeNode.CHILDREN_NODES,
  SmartTreeNode.EXPANDED,
  SmartTreeNode.SELECTED,
  SmartTreeNode.LEVEL,
  SmartTreeNode.SHORT_DESCRIPTION,
  SmartTreeNode.NODE_TYPE,
  SmartTreeNode.ACTIONS
})
@JsonTypeName("SmartTreeNode")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SmartTreeNode {
  public static final String IDENTIFIER = "identifier";
  private String identifier;

  public static final String ICON = "icon";
  private String icon;

  public static final String CAPTION = "caption";
  private String caption;

  public static final String CLASSES = "classes";
  private List<String> classes = new ArrayList<>();

  public static final String HAS_CHILDREN = "hasChildren";
  private Boolean hasChildren;

  public static final String CHILDREN_NODES = "childrenNodes";
  private List<SmartTreeNode> childrenNodes = new ArrayList<>();

  public static final String EXPANDED = "expanded";
  private Boolean expanded;

  public static final String SELECTED = "selected";
  private Boolean selected;

  public static final String LEVEL = "level";
  private Integer level;

  public static final String SHORT_DESCRIPTION = "shortDescription";
  private String shortDescription;

  public static final String NODE_TYPE = "nodeType";
  private String nodeType;

  public static final String ACTIONS = "actions";
  private List<UiAction> actions = new ArrayList<>();

  public SmartTreeNode() { 
  }

  public SmartTreeNode identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public SmartTreeNode icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public SmartTreeNode caption(String caption) {
    
    this.caption = caption;
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCaption() {
    return caption;
  }


  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaption(String caption) {
    this.caption = caption;
  }


  public SmartTreeNode classes(List<String> classes) {
    
    this.classes = classes;
    return this;
  }

  public SmartTreeNode addClassesItem(String classesItem) {
    this.classes.add(classesItem);
    return this;
  }

   /**
   * Get classes
   * @return classes
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getClasses() {
    return classes;
  }


  @JsonProperty(CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setClasses(List<String> classes) {
    this.classes = classes;
  }


  public SmartTreeNode hasChildren(Boolean hasChildren) {
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * Get hasChildren
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasChildren() {
    return hasChildren;
  }


  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public SmartTreeNode childrenNodes(List<SmartTreeNode> childrenNodes) {
    
    this.childrenNodes = childrenNodes;
    return this;
  }

  public SmartTreeNode addChildrenNodesItem(SmartTreeNode childrenNodesItem) {
    this.childrenNodes.add(childrenNodesItem);
    return this;
  }

   /**
   * Get childrenNodes
   * @return childrenNodes
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CHILDREN_NODES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<SmartTreeNode> getChildrenNodes() {
    return childrenNodes;
  }


  @JsonProperty(CHILDREN_NODES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildrenNodes(List<SmartTreeNode> childrenNodes) {
    this.childrenNodes = childrenNodes;
  }


  public SmartTreeNode expanded(Boolean expanded) {
    
    this.expanded = expanded;
    return this;
  }

   /**
   * Get expanded
   * @return expanded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpanded() {
    return expanded;
  }


  @JsonProperty(EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpanded(Boolean expanded) {
    this.expanded = expanded;
  }


  public SmartTreeNode selected(Boolean selected) {
    
    this.selected = selected;
    return this;
  }

   /**
   * Get selected
   * @return selected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSelected() {
    return selected;
  }


  @JsonProperty(SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelected(Boolean selected) {
    this.selected = selected;
  }


  public SmartTreeNode level(Integer level) {
    
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLevel() {
    return level;
  }


  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel(Integer level) {
    this.level = level;
  }


  public SmartTreeNode shortDescription(String shortDescription) {
    
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Get shortDescription
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortDescription() {
    return shortDescription;
  }


  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public SmartTreeNode nodeType(String nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeType() {
    return nodeType;
  }


  @JsonProperty(NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeType(String nodeType) {
    this.nodeType = nodeType;
  }


  public SmartTreeNode actions(List<UiAction> actions) {
    
    this.actions = actions;
    return this;
  }

  public SmartTreeNode addActionsItem(UiAction actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UiAction> getActions() {
    return actions;
  }


  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<UiAction> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmartTreeNode smartTreeNode = (SmartTreeNode) o;
    return Objects.equals(this.identifier, smartTreeNode.identifier) &&
        Objects.equals(this.icon, smartTreeNode.icon) &&
        Objects.equals(this.caption, smartTreeNode.caption) &&
        Objects.equals(this.classes, smartTreeNode.classes) &&
        Objects.equals(this.hasChildren, smartTreeNode.hasChildren) &&
        Objects.equals(this.childrenNodes, smartTreeNode.childrenNodes) &&
        Objects.equals(this.expanded, smartTreeNode.expanded) &&
        Objects.equals(this.selected, smartTreeNode.selected) &&
        Objects.equals(this.level, smartTreeNode.level) &&
        Objects.equals(this.shortDescription, smartTreeNode.shortDescription) &&
        Objects.equals(this.nodeType, smartTreeNode.nodeType) &&
        Objects.equals(this.actions, smartTreeNode.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, icon, caption, classes, hasChildren, childrenNodes, expanded, selected, level, shortDescription, nodeType, actions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmartTreeNode {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    classes: ").append(toIndentedString(classes)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    childrenNodes: ").append(toIndentedString(childrenNodes)).append("\n");
    sb.append("    expanded: ").append(toIndentedString(expanded)).append("\n");
    sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

