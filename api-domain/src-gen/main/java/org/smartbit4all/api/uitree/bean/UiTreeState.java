/*
 * UiTree domain objects
 * Tree domain objects
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.uitree.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.smartbit4all.api.uitree.bean.UiTreeNodeEntry;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UiTreeState
 */
@JsonPropertyOrder({
  UiTreeState.NODES,
  UiTreeState.ROOT_NODES,
  UiTreeState.EXPANDED_NODES,
  UiTreeState.SELECTED_NODES
})
@JsonTypeName("UiTreeState")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UiTreeState {
  public static final String NODES = "nodes";
  private Map<String, UiTreeNodeEntry> nodes = null;

  public static final String ROOT_NODES = "rootNodes";
  private List<String> rootNodes = null;

  public static final String EXPANDED_NODES = "expandedNodes";
  private List<String> expandedNodes = null;

  public static final String SELECTED_NODES = "selectedNodes";
  private List<String> selectedNodes = null;

  public UiTreeState() { 
  }

  public UiTreeState nodes(Map<String, UiTreeNodeEntry> nodes) {
    
    this.nodes = nodes;
    return this;
  }

  public UiTreeState putNodesItem(String key, UiTreeNodeEntry nodesItem) {
    if (this.nodes == null) {
      this.nodes = new HashMap<>();
    }
    this.nodes.put(key, nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, UiTreeNodeEntry> getNodes() {
    return nodes;
  }


  @JsonProperty(NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodes(Map<String, UiTreeNodeEntry> nodes) {
    this.nodes = nodes;
  }


  public UiTreeState rootNodes(List<String> rootNodes) {
    
    this.rootNodes = rootNodes;
    return this;
  }

  public UiTreeState addRootNodesItem(String rootNodesItem) {
    if (this.rootNodes == null) {
      this.rootNodes = new ArrayList<>();
    }
    this.rootNodes.add(rootNodesItem);
    return this;
  }

   /**
   * Get rootNodes
   * @return rootNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ROOT_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRootNodes() {
    return rootNodes;
  }


  @JsonProperty(ROOT_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootNodes(List<String> rootNodes) {
    this.rootNodes = rootNodes;
  }


  public UiTreeState expandedNodes(List<String> expandedNodes) {
    
    this.expandedNodes = expandedNodes;
    return this;
  }

  public UiTreeState addExpandedNodesItem(String expandedNodesItem) {
    if (this.expandedNodes == null) {
      this.expandedNodes = new ArrayList<>();
    }
    this.expandedNodes.add(expandedNodesItem);
    return this;
  }

   /**
   * Get expandedNodes
   * @return expandedNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(EXPANDED_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExpandedNodes() {
    return expandedNodes;
  }


  @JsonProperty(EXPANDED_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpandedNodes(List<String> expandedNodes) {
    this.expandedNodes = expandedNodes;
  }


  public UiTreeState selectedNodes(List<String> selectedNodes) {
    
    this.selectedNodes = selectedNodes;
    return this;
  }

  public UiTreeState addSelectedNodesItem(String selectedNodesItem) {
    if (this.selectedNodes == null) {
      this.selectedNodes = new ArrayList<>();
    }
    this.selectedNodes.add(selectedNodesItem);
    return this;
  }

   /**
   * Get selectedNodes
   * @return selectedNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSelectedNodes() {
    return selectedNodes;
  }


  @JsonProperty(SELECTED_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedNodes(List<String> selectedNodes) {
    this.selectedNodes = selectedNodes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiTreeState uiTreeState = (UiTreeState) o;
    return Objects.equals(this.nodes, uiTreeState.nodes) &&
        Objects.equals(this.rootNodes, uiTreeState.rootNodes) &&
        Objects.equals(this.expandedNodes, uiTreeState.expandedNodes) &&
        Objects.equals(this.selectedNodes, uiTreeState.selectedNodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodes, rootNodes, expandedNodes, selectedNodes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiTreeState {\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    rootNodes: ").append(toIndentedString(rootNodes)).append("\n");
    sb.append("    expandedNodes: ").append(toIndentedString(expandedNodes)).append("\n");
    sb.append("    selectedNodes: ").append(toIndentedString(selectedNodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

