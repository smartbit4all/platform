/*
 * Archive api
 * File deletion program config file. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.archive.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.archive.bean.BeforeVersionData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ArchiveConfigData
 */
@JsonPropertyOrder({
  ArchiveConfigData.ROOT_DIR,
  ArchiveConfigData.DELETE_ALL,
  ArchiveConfigData.DELETE_BEFORE_VERSION
})
@JsonTypeName("ArchiveConfigData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ArchiveConfigData {
  public static final String ROOT_DIR = "rootDir";
  private String rootDir;

  public static final String DELETE_ALL = "deleteAll";
  private List<String> deleteAll = null;

  public static final String DELETE_BEFORE_VERSION = "deleteBeforeVersion";
  private List<BeforeVersionData> deleteBeforeVersion = null;

  public ArchiveConfigData() { 
  }

  public ArchiveConfigData rootDir(String rootDir) {
    
    this.rootDir = rootDir;
    return this;
  }

   /**
   * Get rootDir
   * @return rootDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ROOT_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRootDir() {
    return rootDir;
  }


  @JsonProperty(ROOT_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootDir(String rootDir) {
    this.rootDir = rootDir;
  }


  public ArchiveConfigData deleteAll(List<String> deleteAll) {
    
    this.deleteAll = deleteAll;
    return this;
  }

  public ArchiveConfigData addDeleteAllItem(String deleteAllItem) {
    if (this.deleteAll == null) {
      this.deleteAll = new ArrayList<>();
    }
    this.deleteAll.add(deleteAllItem);
    return this;
  }

   /**
   * Get deleteAll
   * @return deleteAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(DELETE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDeleteAll() {
    return deleteAll;
  }


  @JsonProperty(DELETE_ALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteAll(List<String> deleteAll) {
    this.deleteAll = deleteAll;
  }


  public ArchiveConfigData deleteBeforeVersion(List<BeforeVersionData> deleteBeforeVersion) {
    
    this.deleteBeforeVersion = deleteBeforeVersion;
    return this;
  }

  public ArchiveConfigData addDeleteBeforeVersionItem(BeforeVersionData deleteBeforeVersionItem) {
    if (this.deleteBeforeVersion == null) {
      this.deleteBeforeVersion = new ArrayList<>();
    }
    this.deleteBeforeVersion.add(deleteBeforeVersionItem);
    return this;
  }

   /**
   * Get deleteBeforeVersion
   * @return deleteBeforeVersion
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DELETE_BEFORE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BeforeVersionData> getDeleteBeforeVersion() {
    return deleteBeforeVersion;
  }


  @JsonProperty(DELETE_BEFORE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteBeforeVersion(List<BeforeVersionData> deleteBeforeVersion) {
    this.deleteBeforeVersion = deleteBeforeVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArchiveConfigData archiveConfigData = (ArchiveConfigData) o;
    return Objects.equals(this.rootDir, archiveConfigData.rootDir) &&
        Objects.equals(this.deleteAll, archiveConfigData.deleteAll) &&
        Objects.equals(this.deleteBeforeVersion, archiveConfigData.deleteBeforeVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rootDir, deleteAll, deleteBeforeVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArchiveConfigData {\n");
    sb.append("    rootDir: ").append(toIndentedString(rootDir)).append("\n");
    sb.append("    deleteAll: ").append(toIndentedString(deleteAll)).append("\n");
    sb.append("    deleteBeforeVersion: ").append(toIndentedString(deleteBeforeVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

