/*
 * Filter API
 * Filter API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.filter.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.filter.bean.FilterExpressionPart;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Specifies an abstract expression with a collection of expression part.
 */
@ApiModel(description = "Specifies an abstract expression with a collection of expression part.")
@JsonPropertyOrder({
  FilterExpression.FILTER_EXPRESSION_PARTS
})
@JsonTypeName("FilterExpression")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterExpression {
  public static final String FILTER_EXPRESSION_PARTS = "filterExpressionParts";
  private List<FilterExpressionPart> filterExpressionParts = null;

  public FilterExpression() { 
  }

  public FilterExpression filterExpressionParts(List<FilterExpressionPart> filterExpressionParts) {
    
    this.filterExpressionParts = filterExpressionParts;
    return this;
  }

  public FilterExpression addFilterExpressionPartsItem(FilterExpressionPart filterExpressionPartsItem) {
    if (this.filterExpressionParts == null) {
      this.filterExpressionParts = new ArrayList<>();
    }
    this.filterExpressionParts.add(filterExpressionPartsItem);
    return this;
  }

   /**
   * Get filterExpressionParts
   * @return filterExpressionParts
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(FILTER_EXPRESSION_PARTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FilterExpressionPart> getFilterExpressionParts() {
    return filterExpressionParts;
  }


  @JsonProperty(FILTER_EXPRESSION_PARTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterExpressionParts(List<FilterExpressionPart> filterExpressionParts) {
    this.filterExpressionParts = filterExpressionParts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterExpression filterExpression = (FilterExpression) o;
    return Objects.equals(this.filterExpressionParts, filterExpression.filterExpressionParts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterExpressionParts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterExpression {\n");
    sb.append("    filterExpressionParts: ").append(toIndentedString(filterExpressionParts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

