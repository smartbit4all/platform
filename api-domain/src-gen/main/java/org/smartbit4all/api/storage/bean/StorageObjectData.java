/*
 * storage api
 * The storage api is a generic possibility to store and load objects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.storage.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.storage.bean.ObjectVersion;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The basic data object of the storages. This holds the version history and refers the current version. Also has named references  and collections. 
 */
@ApiModel(description = "The basic data object of the storages. This holds the version history and refers the current version. Also has named references  and collections. ")
@JsonPropertyOrder({
  StorageObjectData.URI,
  StorageObjectData.CURRENT_VERSION,
  StorageObjectData.VERSIONS
})
@JsonTypeName("StorageObjectData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StorageObjectData {
  public static final String URI = "uri";
  private URI uri;

  public static final String CURRENT_VERSION = "currentVersion";
  private ObjectVersion currentVersion;

  public static final String VERSIONS = "versions";
  private List<ObjectVersion> versions = new ArrayList<>();


  public StorageObjectData uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The uri of the object represented by the storage object. 
   * @return uri
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The uri of the object represented by the storage object. ")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public StorageObjectData currentVersion(ObjectVersion currentVersion) {
    
    this.currentVersion = currentVersion;
    return this;
  }

   /**
   * Get currentVersion
   * @return currentVersion
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CURRENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ObjectVersion getCurrentVersion() {
    return currentVersion;
  }


  @JsonProperty(CURRENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentVersion(ObjectVersion currentVersion) {
    this.currentVersion = currentVersion;
  }


  public StorageObjectData versions(List<ObjectVersion> versions) {
    
    this.versions = versions;
    return this;
  }

  public StorageObjectData addVersionsItem(ObjectVersion versionsItem) {
    this.versions.add(versionsItem);
    return this;
  }

   /**
   * The versions of the object in creation order. The version serial number is increased one by one because only the successful save opartions will produce new version. 
   * @return versions
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The versions of the object in creation order. The version serial number is increased one by one because only the successful save opartions will produce new version. ")
  @JsonProperty(VERSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ObjectVersion> getVersions() {
    return versions;
  }


  @JsonProperty(VERSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersions(List<ObjectVersion> versions) {
    this.versions = versions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageObjectData storageObjectData = (StorageObjectData) o;
    return Objects.equals(this.uri, storageObjectData.uri) &&
        Objects.equals(this.currentVersion, storageObjectData.currentVersion) &&
        Objects.equals(this.versions, storageObjectData.versions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, currentVersion, versions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageObjectData {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    currentVersion: ").append(toIndentedString(currentVersion)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

