/*
 * storage api
 * The storage api is a generic possibility to store and load objects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.storage.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.storage.bean.ObjectHistoryEntry;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ObjectHistory
 */
@JsonPropertyOrder({
  ObjectHistory.OBJECT_HISTORY_ENTRIES,
  ObjectHistory.SELECTED_VERSION_URI
})
@JsonTypeName("ObjectHistory")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectHistory {
  public static final String OBJECT_HISTORY_ENTRIES = "objectHistoryEntries";
  private List<ObjectHistoryEntry> objectHistoryEntries = null;

  public static final String SELECTED_VERSION_URI = "selectedVersionUri";
  private URI selectedVersionUri;

  public ObjectHistory() { 
  }

  public ObjectHistory objectHistoryEntries(List<ObjectHistoryEntry> objectHistoryEntries) {
    
    this.objectHistoryEntries = objectHistoryEntries;
    return this;
  }

  public ObjectHistory addObjectHistoryEntriesItem(ObjectHistoryEntry objectHistoryEntriesItem) {
    if (this.objectHistoryEntries == null) {
      this.objectHistoryEntries = new ArrayList<>();
    }
    this.objectHistoryEntries.add(objectHistoryEntriesItem);
    return this;
  }

   /**
   * Get objectHistoryEntries
   * @return objectHistoryEntries
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(OBJECT_HISTORY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ObjectHistoryEntry> getObjectHistoryEntries() {
    return objectHistoryEntries;
  }


  @JsonProperty(OBJECT_HISTORY_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectHistoryEntries(List<ObjectHistoryEntry> objectHistoryEntries) {
    this.objectHistoryEntries = objectHistoryEntries;
  }


  public ObjectHistory selectedVersionUri(URI selectedVersionUri) {
    
    this.selectedVersionUri = selectedVersionUri;
    return this;
  }

   /**
   * Get selectedVersionUri
   * @return selectedVersionUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED_VERSION_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getSelectedVersionUri() {
    return selectedVersionUri;
  }


  @JsonProperty(SELECTED_VERSION_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedVersionUri(URI selectedVersionUri) {
    this.selectedVersionUri = selectedVersionUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectHistory objectHistory = (ObjectHistory) o;
    return Objects.equals(this.objectHistoryEntries, objectHistory.objectHistoryEntries) &&
        Objects.equals(this.selectedVersionUri, objectHistory.selectedVersionUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectHistoryEntries, selectedVersionUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectHistory {\n");
    sb.append("    objectHistoryEntries: ").append(toIndentedString(objectHistoryEntries)).append("\n");
    sb.append("    selectedVersionUri: ").append(toIndentedString(selectedVersionUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

