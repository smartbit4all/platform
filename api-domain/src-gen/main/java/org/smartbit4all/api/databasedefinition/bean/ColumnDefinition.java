/*
 * DatabaseDefinition api
 * The relational database schema definition with tables, columns, indices, primary and foreign keys. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.databasedefinition.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.smartbit4all.api.databasedefinition.bean.AlterOperation;
import org.smartbit4all.api.databasedefinition.bean.ColumnTypeDefinition;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The meta of a column in a database table. 
 */
@ApiModel(description = "The meta of a column in a database table. ")
@JsonPropertyOrder({
  ColumnDefinition.NAME,
  ColumnDefinition.TYPE_DEFINITION,
  ColumnDefinition.NULLABLE,
  ColumnDefinition.DEFAULT_VALUE,
  ColumnDefinition.COMMENT,
  ColumnDefinition.OPERATION
})
@JsonTypeName("ColumnDefinition")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ColumnDefinition {
  public static final String NAME = "name";
  private String name;

  public static final String TYPE_DEFINITION = "typeDefinition";
  private ColumnTypeDefinition typeDefinition;

  public static final String NULLABLE = "nullable";
  private Boolean nullable = true;

  public static final String DEFAULT_VALUE = "defaultValue";
  private String defaultValue;

  public static final String COMMENT = "comment";
  private String comment;

  public static final String OPERATION = "operation";
  private AlterOperation operation;

  public ColumnDefinition() { 
  }

  public ColumnDefinition name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ColumnDefinition typeDefinition(ColumnTypeDefinition typeDefinition) {
    
    this.typeDefinition = typeDefinition;
    return this;
  }

   /**
   * Get typeDefinition
   * @return typeDefinition
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(TYPE_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ColumnTypeDefinition getTypeDefinition() {
    return typeDefinition;
  }


  @JsonProperty(TYPE_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeDefinition(ColumnTypeDefinition typeDefinition) {
    this.typeDefinition = typeDefinition;
  }


  public ColumnDefinition nullable(Boolean nullable) {
    
    this.nullable = nullable;
    return this;
  }

   /**
   * Get nullable
   * @return nullable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NULLABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNullable() {
    return nullable;
  }


  @JsonProperty(NULLABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNullable(Boolean nullable) {
    this.nullable = nullable;
  }


  public ColumnDefinition defaultValue(String defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultValue() {
    return defaultValue;
  }


  @JsonProperty(DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }


  public ColumnDefinition comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public ColumnDefinition operation(AlterOperation operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AlterOperation getOperation() {
    return operation;
  }


  @JsonProperty(OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperation(AlterOperation operation) {
    this.operation = operation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ColumnDefinition columnDefinition = (ColumnDefinition) o;
    return Objects.equals(this.name, columnDefinition.name) &&
        Objects.equals(this.typeDefinition, columnDefinition.typeDefinition) &&
        Objects.equals(this.nullable, columnDefinition.nullable) &&
        Objects.equals(this.defaultValue, columnDefinition.defaultValue) &&
        Objects.equals(this.comment, columnDefinition.comment) &&
        Objects.equals(this.operation, columnDefinition.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, typeDefinition, nullable, defaultValue, comment, operation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ColumnDefinition {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    typeDefinition: ").append(toIndentedString(typeDefinition)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

