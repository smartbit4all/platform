/*
 * DatabaseDefinition api
 * The relational database schema definition with tables, columns, indices, primary and foreign keys. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.databasedefinition.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets DDLStatementKind
 */
public enum DDLStatementKind {
  
  ALTERSCRIPT("ALTERSCRIPT"),
  
  DEFINECOLUMN("DEFINECOLUMN"),
  
  DROPFK("DROPFK"),
  
  DROPPK("DROPPK"),
  
  DROPINDEX("DROPINDEX"),
  
  DROPCONSTRAINT("DROPCONSTRAINT"),
  
  DROPTABLE("DROPTABLE"),
  
  CREATETABLE("CREATETABLE"),
  
  CREATETABLEEND("CREATETABLEEND"),
  
  RENAMECOLUMN("RENAMECOLUMN"),
  
  ADDCOLUMN("ADDCOLUMN"),
  
  MODCOLUMN("MODCOLUMN"),
  
  DROPCOLUMN("DROPCOLUMN"),
  
  ADDPK("ADDPK"),
  
  ADDINDEX("ADDINDEX"),
  
  ADDFK("ADDFK"),
  
  ADDCONSTRAINT("ADDCONSTRAINT"),
  
  COMMENT("COMMENT");

  private String value;

  DDLStatementKind(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static DDLStatementKind fromValue(String value) {
    for (DDLStatementKind b : DDLStatementKind.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

