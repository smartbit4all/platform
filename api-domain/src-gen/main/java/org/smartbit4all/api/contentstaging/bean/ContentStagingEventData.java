/*
 * content staging api
 * content staging api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.contentstaging.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.UUID;
import org.smartbit4all.api.contentstaging.bean.State;
import org.smartbit4all.api.contentstaging.bean.Type;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ContentStagingEventData
 */
@JsonPropertyOrder({
  ContentStagingEventData.TYPE,
  ContentStagingEventData.STATE,
  ContentStagingEventData.KEY,
  ContentStagingEventData.CONTENT_URI
})
@JsonTypeName("ContentStagingEventData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ContentStagingEventData {
  public static final String TYPE = "type";
  private Type type;

  public static final String STATE = "state";
  private State state;

  public static final String KEY = "key";
  private UUID key;

  public static final String CONTENT_URI = "contentUri";
  private URI contentUri;


  public ContentStagingEventData type(Type type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Type getType() {
    return type;
  }


  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(Type type) {
    this.type = type;
  }


  public ContentStagingEventData state(State state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public State getState() {
    return state;
  }


  @JsonProperty(STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(State state) {
    this.state = state;
  }


  public ContentStagingEventData key(UUID key) {
    
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getKey() {
    return key;
  }


  @JsonProperty(KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(UUID key) {
    this.key = key;
  }


  public ContentStagingEventData contentUri(URI contentUri) {
    
    this.contentUri = contentUri;
    return this;
  }

   /**
   * Get contentUri
   * @return contentUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(CONTENT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getContentUri() {
    return contentUri;
  }


  @JsonProperty(CONTENT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentUri(URI contentUri) {
    this.contentUri = contentUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentStagingEventData contentStagingEventData = (ContentStagingEventData) o;
    return Objects.equals(this.type, contentStagingEventData.type) &&
        Objects.equals(this.state, contentStagingEventData.state) &&
        Objects.equals(this.key, contentStagingEventData.key) &&
        Objects.equals(this.contentUri, contentStagingEventData.contentUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, state, key, contentUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentStagingEventData {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    contentUri: ").append(toIndentedString(contentUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

