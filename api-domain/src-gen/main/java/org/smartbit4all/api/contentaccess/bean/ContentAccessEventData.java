/*
 * content access api
 * content access api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.contentaccess.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import org.smartbit4all.api.contentaccess.bean.Direction;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ContentAccessEventData
 */
@JsonPropertyOrder({
  ContentAccessEventData.UUID,
  ContentAccessEventData.BINARY_CONTENT,
  ContentAccessEventData.DIRECTION
})
@JsonTypeName("ContentAccessEventData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ContentAccessEventData {
  public static final String UUID = "uuid";
  private UUID uuid;

  public static final String BINARY_CONTENT = "binaryContent";
  private org.smartbit4all.api.binarydata.BinaryContent binaryContent = null;

  public static final String DIRECTION = "direction";
  private Direction direction;


  public ContentAccessEventData uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public ContentAccessEventData binaryContent(org.smartbit4all.api.binarydata.BinaryContent binaryContent) {
    
    this.binaryContent = binaryContent;
    return this;
  }

   /**
   * Get binaryContent
   * @return binaryContent
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(BINARY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.smartbit4all.api.binarydata.BinaryContent getBinaryContent() {
    return binaryContent;
  }


  @JsonProperty(BINARY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBinaryContent(org.smartbit4all.api.binarydata.BinaryContent binaryContent) {
    this.binaryContent = binaryContent;
  }


  public ContentAccessEventData direction(Direction direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Direction getDirection() {
    return direction;
  }


  @JsonProperty(DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(Direction direction) {
    this.direction = direction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentAccessEventData contentAccessEventData = (ContentAccessEventData) o;
    return Objects.equals(this.uuid, contentAccessEventData.uuid) &&
        Objects.equals(this.binaryContent, contentAccessEventData.binaryContent) &&
        Objects.equals(this.direction, contentAccessEventData.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, binaryContent, direction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentAccessEventData {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    binaryContent: ").append(toIndentedString(binaryContent)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

