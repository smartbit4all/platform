/*
 * Grid api
 * The grid api is resposible for the grid components that shows a list of item. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.grid.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.grid.bean.GridContentPage;
import org.smartbit4all.api.grid.bean.GridViewOption;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This object respresent the model of a grid component. 
 */
@ApiModel(description = "This object respresent the model of a grid component. ")
@JsonPropertyOrder({
  GridModel.VIEW_OPTION,
  GridModel.PAGE
})
@JsonTypeName("GridModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GridModel {
  public static final String VIEW_OPTION = "viewOption";
  private List<GridViewOption> viewOption = null;

  public static final String PAGE = "page";
  private GridContentPage page;

  public GridModel() { 
  }

  public GridModel viewOption(List<GridViewOption> viewOption) {
    
    this.viewOption = viewOption;
    return this;
  }

  public GridModel addViewOptionItem(GridViewOption viewOptionItem) {
    if (this.viewOption == null) {
      this.viewOption = new ArrayList<>();
    }
    this.viewOption.add(viewOptionItem);
    return this;
  }

   /**
   * Get viewOption
   * @return viewOption
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(VIEW_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GridViewOption> getViewOption() {
    return viewOption;
  }


  @JsonProperty(VIEW_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewOption(List<GridViewOption> viewOption) {
    this.viewOption = viewOption;
  }


  public GridModel page(GridContentPage page) {
    
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GridContentPage getPage() {
    return page;
  }


  @JsonProperty(PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPage(GridContentPage page) {
    this.page = page;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GridModel gridModel = (GridModel) o;
    return Objects.equals(this.viewOption, gridModel.viewOption) &&
        Objects.equals(this.page, gridModel.page);
  }

  @Override
  public int hashCode() {
    return Objects.hash(viewOption, page);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GridModel {\n");
    sb.append("    viewOption: ").append(toIndentedString(viewOption)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

