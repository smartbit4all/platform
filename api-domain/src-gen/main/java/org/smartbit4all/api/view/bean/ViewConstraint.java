/*
 * View API
 * View API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.view.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.view.bean.ComponentConstraint;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The view constraint object encapsulate the constraints can be applied to any view genericly. It consists of compenet constraints and many more. 
 */
@ApiModel(description = "The view constraint object encapsulate the constraints can be applied to any view genericly. It consists of compenet constraints and many more. ")
@JsonPropertyOrder({
  ViewConstraint.COMPONENT_CONSTRAINTS
})
@JsonTypeName("ViewConstraint")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ViewConstraint {
  public static final String COMPONENT_CONSTRAINTS = "componentConstraints";
  private List<ComponentConstraint> componentConstraints = new ArrayList<>();

  public ViewConstraint() { 
  }

  public ViewConstraint componentConstraints(List<ComponentConstraint> componentConstraints) {
    
    this.componentConstraints = componentConstraints;
    return this;
  }

  public ViewConstraint addComponentConstraintsItem(ComponentConstraint componentConstraintsItem) {
    this.componentConstraints.add(componentConstraintsItem);
    return this;
  }

   /**
   * Get componentConstraints
   * @return componentConstraints
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(COMPONENT_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ComponentConstraint> getComponentConstraints() {
    return componentConstraints;
  }


  @JsonProperty(COMPONENT_CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComponentConstraints(List<ComponentConstraint> componentConstraints) {
    this.componentConstraints = componentConstraints;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewConstraint viewConstraint = (ViewConstraint) o;
    return Objects.equals(this.componentConstraints, viewConstraint.componentConstraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentConstraints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewConstraint {\n");
    sb.append("    componentConstraints: ").append(toIndentedString(componentConstraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

