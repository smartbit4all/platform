/*
 * View API
 * View API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.view.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.smartbit4all.api.view.bean.UiActionDescriptor;
import org.smartbit4all.api.view.bean.UiActionInputType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UiAction
 */
@JsonPropertyOrder({
  UiAction.CODE,
  UiAction.PATH,
  UiAction.IDENTIFIER,
  UiAction.INPUT_TYPE,
  UiAction.INPUT2_TYPE,
  UiAction.SUBMIT,
  UiAction.MODEL,
  UiAction.CONFIRM,
  UiAction.PARAMS,
  UiAction.DESCRIPTOR,
  UiAction.SUB_ACTIONS
})
@JsonTypeName("UiAction")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UiAction {
  public static final String CODE = "code";
  private String code;

  public static final String PATH = "path";
  private String path;

  public static final String IDENTIFIER = "identifier";
  private String identifier;

  public static final String INPUT_TYPE = "inputType";
  private UiActionInputType inputType = UiActionInputType.NONE;

  public static final String INPUT2_TYPE = "input2Type";
  private UiActionInputType input2Type = UiActionInputType.NONE;

  public static final String SUBMIT = "submit";
  private Boolean submit;

  public static final String MODEL = "model";
  private Boolean model;

  public static final String CONFIRM = "confirm";
  private Boolean confirm = false;

  public static final String PARAMS = "params";
  private Map<String, Object> params = null;

  public static final String DESCRIPTOR = "descriptor";
  private UiActionDescriptor descriptor;

  public static final String SUB_ACTIONS = "subActions";
  private List<UiAction> subActions = null;

  public UiAction() { 
  }

  public UiAction code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCode() {
    return code;
  }


  @JsonProperty(CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(String code) {
    this.code = code;
  }


  public UiAction path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public UiAction identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public UiAction inputType(UiActionInputType inputType) {
    
    this.inputType = inputType;
    return this;
  }

   /**
   * Get inputType
   * @return inputType
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(INPUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UiActionInputType getInputType() {
    return inputType;
  }


  @JsonProperty(INPUT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputType(UiActionInputType inputType) {
    this.inputType = inputType;
  }


  public UiAction input2Type(UiActionInputType input2Type) {
    
    this.input2Type = input2Type;
    return this;
  }

   /**
   * Get input2Type
   * @return input2Type
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(INPUT2_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UiActionInputType getInput2Type() {
    return input2Type;
  }


  @JsonProperty(INPUT2_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInput2Type(UiActionInputType input2Type) {
    this.input2Type = input2Type;
  }


  public UiAction submit(Boolean submit) {
    
    this.submit = submit;
    return this;
  }

   /**
   * If true, UiAction will submit the form (causing validation) and sends model in UiActionRequest.
   * @return submit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, UiAction will submit the form (causing validation) and sends model in UiActionRequest.")
  @JsonProperty(SUBMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSubmit() {
    return submit;
  }


  @JsonProperty(SUBMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmit(Boolean submit) {
    this.submit = submit;
  }


  public UiAction model(Boolean model) {
    
    this.model = model;
    return this;
  }

   /**
   * If true, UiAction will NOT submit the form and sends model WITHOUT VALIDATION in UiActionRequest.
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, UiAction will NOT submit the form and sends model WITHOUT VALIDATION in UiActionRequest.")
  @JsonProperty(MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getModel() {
    return model;
  }


  @JsonProperty(MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModel(Boolean model) {
    this.model = model;
  }


  public UiAction confirm(Boolean confirm) {
    
    this.confirm = confirm;
    return this;
  }

   /**
   * Get confirm
   * @return confirm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CONFIRM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConfirm() {
    return confirm;
  }


  @JsonProperty(CONFIRM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfirm(Boolean confirm) {
    this.confirm = confirm;
  }


  public UiAction params(Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public UiAction putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * Additional parameters for executing the UI action.  
   * @return params
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional parameters for executing the UI action.  ")
  @JsonProperty(PARAMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(PARAMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  public UiAction descriptor(UiActionDescriptor descriptor) {
    
    this.descriptor = descriptor;
    return this;
  }

   /**
   * Get descriptor
   * @return descriptor
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UiActionDescriptor getDescriptor() {
    return descriptor;
  }


  @JsonProperty(DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescriptor(UiActionDescriptor descriptor) {
    this.descriptor = descriptor;
  }


  public UiAction subActions(List<UiAction> subActions) {
    
    this.subActions = subActions;
    return this;
  }

  public UiAction addSubActionsItem(UiAction subActionsItem) {
    if (this.subActions == null) {
      this.subActions = new ArrayList<>();
    }
    this.subActions.add(subActionsItem);
    return this;
  }

   /**
   * The sub action are set if and only if this action is a sub menu. The sub actions can be null.
   * @return subActions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The sub action are set if and only if this action is a sub menu. The sub actions can be null.")
  @JsonProperty(SUB_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UiAction> getSubActions() {
    return subActions;
  }


  @JsonProperty(SUB_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubActions(List<UiAction> subActions) {
    this.subActions = subActions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiAction uiAction = (UiAction) o;
    return Objects.equals(this.code, uiAction.code) &&
        Objects.equals(this.path, uiAction.path) &&
        Objects.equals(this.identifier, uiAction.identifier) &&
        Objects.equals(this.inputType, uiAction.inputType) &&
        Objects.equals(this.input2Type, uiAction.input2Type) &&
        Objects.equals(this.submit, uiAction.submit) &&
        Objects.equals(this.model, uiAction.model) &&
        Objects.equals(this.confirm, uiAction.confirm) &&
        Objects.equals(this.params, uiAction.params) &&
        Objects.equals(this.descriptor, uiAction.descriptor) &&
        Objects.equals(this.subActions, uiAction.subActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, path, identifier, inputType, input2Type, submit, model, confirm, params, descriptor, subActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiAction {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    inputType: ").append(toIndentedString(inputType)).append("\n");
    sb.append("    input2Type: ").append(toIndentedString(input2Type)).append("\n");
    sb.append("    submit: ").append(toIndentedString(submit)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    confirm: ").append(toIndentedString(confirm)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    subActions: ").append(toIndentedString(subActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

