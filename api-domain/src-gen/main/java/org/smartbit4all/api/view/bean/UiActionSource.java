/*
 * View API
 * View API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.view.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * apiFunction specified in UiAction will receive this object as parameter.
 */
@ApiModel(description = "apiFunction specified in UiAction will receive this object as parameter.")
@JsonPropertyOrder({
  UiActionSource.VIEW_UUID,
  UiActionSource.COMPONENT,
  UiActionSource.ELEMENT
})
@JsonTypeName("UiActionSource")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UiActionSource {
  public static final String VIEW_UUID = "viewUuid";
  private UUID viewUuid;

  public static final String COMPONENT = "component";
  private String component;

  public static final String ELEMENT = "element";
  private String element;

  public UiActionSource() { 
  }

  public UiActionSource viewUuid(UUID viewUuid) {
    
    this.viewUuid = viewUuid;
    return this;
  }

   /**
   * Identifier of View where action is performed.
   * @return viewUuid
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "Identifier of View where action is performed.")
  @JsonProperty(VIEW_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getViewUuid() {
    return viewUuid;
  }


  @JsonProperty(VIEW_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setViewUuid(UUID viewUuid) {
    this.viewUuid = viewUuid;
  }


  public UiActionSource component(String component) {
    
    this.component = component;
    return this;
  }

   /**
   * Identifier of component where action is performed (for example tree&#39;s / list&#39;s name,  etc.). Optional. 
   * @return component
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of component where action is performed (for example tree's / list's name,  etc.). Optional. ")
  @JsonProperty(COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComponent() {
    return component;
  }


  @JsonProperty(COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponent(String component) {
    this.component = component;
  }


  public UiActionSource element(String element) {
    
    this.element = element;
    return this;
  }

   /**
   * Identifier of UI element, where action is performed (for example treeNode&#39;s /  listItem&#39;s identifier, etc.). Optional. 
   * @return element
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of UI element, where action is performed (for example treeNode's /  listItem's identifier, etc.). Optional. ")
  @JsonProperty(ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElement() {
    return element;
  }


  @JsonProperty(ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElement(String element) {
    this.element = element;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiActionSource uiActionSource = (UiActionSource) o;
    return Objects.equals(this.viewUuid, uiActionSource.viewUuid) &&
        Objects.equals(this.component, uiActionSource.component) &&
        Objects.equals(this.element, uiActionSource.element);
  }

  @Override
  public int hashCode() {
    return Objects.hash(viewUuid, component, element);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiActionSource {\n");
    sb.append("    viewUuid: ").append(toIndentedString(viewUuid)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    element: ").append(toIndentedString(element)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

