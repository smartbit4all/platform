/*
 * View API
 * View API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.view.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.smartbit4all.api.view.bean.DataChangeEventKind;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * null
 */
@ApiModel(description = "null")
@JsonPropertyOrder({
  DataChangeEvent.KIND,
  DataChangeEvent.SOURCE,
  DataChangeEvent.VALUES
})
@JsonTypeName("DataChangeEvent")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DataChangeEvent {
  public static final String KIND = "kind";
  private DataChangeEventKind kind;

  public static final String SOURCE = "source";
  private String source;

  public static final String VALUES = "values";
  private Map<String, Object> values = null;

  public DataChangeEvent() { 
  }

  public DataChangeEvent kind(DataChangeEventKind kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataChangeEventKind getKind() {
    return kind;
  }


  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(DataChangeEventKind kind) {
    this.kind = kind;
  }


  public DataChangeEvent source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Source of the event, typically the key of the widget.
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source of the event, typically the key of the widget.")
  @JsonProperty(SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public DataChangeEvent values(Map<String, Object> values) {
    
    this.values = values;
    return this;
  }

  public DataChangeEvent putValuesItem(String key, Object valuesItem) {
    if (this.values == null) {
      this.values = new HashMap<>();
    }
    this.values.put(key, valuesItem);
    return this;
  }

   /**
   * Changed values, in a key-value map.
   * @return values
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Changed values, in a key-value map.")
  @JsonProperty(VALUES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getValues() {
    return values;
  }


  @JsonProperty(VALUES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setValues(Map<String, Object> values) {
    this.values = values;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataChangeEvent dataChangeEvent = (DataChangeEvent) o;
    return Objects.equals(this.kind, dataChangeEvent.kind) &&
        Objects.equals(this.source, dataChangeEvent.source) &&
        Objects.equals(this.values, dataChangeEvent.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, source, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataChangeEvent {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

