/*
 * View API
 * View API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.view.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * null
 */
@ApiModel(description = "null")
@JsonPropertyOrder({
  UiActionRequest.CODE,
  UiActionRequest.PATH,
  UiActionRequest.IDENTIFIER,
  UiActionRequest.PARAMS
})
@JsonTypeName("UiActionRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UiActionRequest {
  public static final String CODE = "code";
  private String code;

  public static final String PATH = "path";
  private String path;

  public static final String IDENTIFIER = "identifier";
  private String identifier;

  public static final String PARAMS = "params";
  private Map<String, Object> params = new HashMap<>();

  public UiActionRequest() { 
  }

  public UiActionRequest code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code of the executed UI action.
   * @return code
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Code of the executed UI action.")
  @JsonProperty(CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public UiActionRequest path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public UiActionRequest identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Identifier of UI element, or UI action, where action is performed (for example treeNode&#39;s /  listItem&#39;s identifier, etc.). Optional. 
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier of UI element, or UI action, where action is performed (for example treeNode's /  listItem's identifier, etc.). Optional. ")
  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public UiActionRequest params(Map<String, Object> params) {
    
    this.params = params;
    return this;
  }

  public UiActionRequest putParamsItem(String key, Object paramsItem) {
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * Additional parameters for executing the UI action.  
   * @return params
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "Additional parameters for executing the UI action.  ")
  @JsonProperty(PARAMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getParams() {
    return params;
  }


  @JsonProperty(PARAMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
  public void setParams(Map<String, Object> params) {
    this.params = params;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UiActionRequest uiActionRequest = (UiActionRequest) o;
    return Objects.equals(this.code, uiActionRequest.code) &&
        Objects.equals(this.path, uiActionRequest.path) &&
        Objects.equals(this.identifier, uiActionRequest.identifier) &&
        Objects.equals(this.params, uiActionRequest.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, path, identifier, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UiActionRequest {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

