/*
 * value api
 * value api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.value.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.value.bean.ValueSetDefinitionKind;
import org.smartbit4all.api.value.bean.ValueSetExpression;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ValueSetDefinitionData
 */
@JsonPropertyOrder({
  ValueSetDefinitionData.KIND,
  ValueSetDefinitionData.QUALIFIED_NAME,
  ValueSetDefinitionData.OBJECT_DEFINITION,
  ValueSetDefinitionData.TYPE_CLASS,
  ValueSetDefinitionData.STORAGE_SCHEMA,
  ValueSetDefinitionData.CONTAINER_NAME,
  ValueSetDefinitionData.ICON_CODE,
  ValueSetDefinitionData.INLINE_VALUES,
  ValueSetDefinitionData.EXPRESSION
})
@JsonTypeName("ValueSetDefinitionData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValueSetDefinitionData {
  public static final String KIND = "kind";
  private ValueSetDefinitionKind kind;

  public static final String QUALIFIED_NAME = "qualifiedName";
  private String qualifiedName;

  public static final String OBJECT_DEFINITION = "objectDefinition";
  private URI objectDefinition;

  public static final String TYPE_CLASS = "typeClass";
  private String typeClass;

  public static final String STORAGE_SCHEMA = "storageSchema";
  private String storageSchema;

  public static final String CONTAINER_NAME = "containerName";
  private String containerName;

  public static final String ICON_CODE = "iconCode";
  private String iconCode;

  public static final String INLINE_VALUES = "inlineValues";
  private List<Object> inlineValues = null;

  public static final String EXPRESSION = "expression";
  private ValueSetExpression expression;

  public ValueSetDefinitionData() { 
  }

  public ValueSetDefinitionData kind(ValueSetDefinitionKind kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ValueSetDefinitionKind getKind() {
    return kind;
  }


  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKind(ValueSetDefinitionKind kind) {
    this.kind = kind;
  }


  public ValueSetDefinitionData qualifiedName(String qualifiedName) {
    
    this.qualifiedName = qualifiedName;
    return this;
  }

   /**
   * The logical name of the given value set. In case of an enum it is the fully qualified name of the enum class. 
   * @return qualifiedName
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The logical name of the given value set. In case of an enum it is the fully qualified name of the enum class. ")
  @JsonProperty(QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getQualifiedName() {
    return qualifiedName;
  }


  @JsonProperty(QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQualifiedName(String qualifiedName) {
    this.qualifiedName = qualifiedName;
  }


  public ValueSetDefinitionData objectDefinition(URI objectDefinition) {
    
    this.objectDefinition = objectDefinition;
    return this;
  }

   /**
   * The object definition of the value set.
   * @return objectDefinition
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The object definition of the value set.")
  @JsonProperty(OBJECT_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getObjectDefinition() {
    return objectDefinition;
  }


  @JsonProperty(OBJECT_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectDefinition(URI objectDefinition) {
    this.objectDefinition = objectDefinition;
  }


  public ValueSetDefinitionData typeClass(String typeClass) {
    
    this.typeClass = typeClass;
    return this;
  }

   /**
   * The fully qualified name of the type class.
   * @return typeClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fully qualified name of the type class.")
  @JsonProperty(TYPE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeClass() {
    return typeClass;
  }


  @JsonProperty(TYPE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeClass(String typeClass) {
    this.typeClass = typeClass;
  }


  public ValueSetDefinitionData storageSchema(String storageSchema) {
    
    this.storageSchema = storageSchema;
    return this;
  }

   /**
   * The name of the storage schema. Necessary to access the objects or the container (list or map).
   * @return storageSchema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the storage schema. Necessary to access the objects or the container (list or map).")
  @JsonProperty(STORAGE_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStorageSchema() {
    return storageSchema;
  }


  @JsonProperty(STORAGE_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageSchema(String storageSchema) {
    this.storageSchema = storageSchema;
  }


  public ValueSetDefinitionData containerName(String containerName) {
    
    this.containerName = containerName;
    return this;
  }

   /**
   * The name of the list or map that contains the object uri list. It must be a unique name inside the storageSchema.
   * @return containerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the list or map that contains the object uri list. It must be a unique name inside the storageSchema.")
  @JsonProperty(CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContainerName() {
    return containerName;
  }


  @JsonProperty(CONTAINER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public ValueSetDefinitionData iconCode(String iconCode) {
    
    this.iconCode = iconCode;
    return this;
  }

   /**
   * Optional icon code for the given value set.
   * @return iconCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional icon code for the given value set.")
  @JsonProperty(ICON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconCode() {
    return iconCode;
  }


  @JsonProperty(ICON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconCode(String iconCode) {
    this.iconCode = iconCode;
  }


  public ValueSetDefinitionData inlineValues(List<Object> inlineValues) {
    
    this.inlineValues = inlineValues;
    return this;
  }

  public ValueSetDefinitionData addInlineValuesItem(Object inlineValuesItem) {
    if (this.inlineValues == null) {
      this.inlineValues = new ArrayList<>();
    }
    this.inlineValues.add(inlineValuesItem);
    return this;
  }

   /**
   * The value list with dynamic
   * @return inlineValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value list with dynamic")
  @JsonProperty(INLINE_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getInlineValues() {
    return inlineValues;
  }


  @JsonProperty(INLINE_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInlineValues(List<Object> inlineValues) {
    this.inlineValues = inlineValues;
  }


  public ValueSetDefinitionData expression(ValueSetExpression expression) {
    
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ValueSetExpression getExpression() {
    return expression;
  }


  @JsonProperty(EXPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpression(ValueSetExpression expression) {
    this.expression = expression;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValueSetDefinitionData valueSetDefinitionData = (ValueSetDefinitionData) o;
    return Objects.equals(this.kind, valueSetDefinitionData.kind) &&
        Objects.equals(this.qualifiedName, valueSetDefinitionData.qualifiedName) &&
        Objects.equals(this.objectDefinition, valueSetDefinitionData.objectDefinition) &&
        Objects.equals(this.typeClass, valueSetDefinitionData.typeClass) &&
        Objects.equals(this.storageSchema, valueSetDefinitionData.storageSchema) &&
        Objects.equals(this.containerName, valueSetDefinitionData.containerName) &&
        Objects.equals(this.iconCode, valueSetDefinitionData.iconCode) &&
        Objects.equals(this.inlineValues, valueSetDefinitionData.inlineValues) &&
        Objects.equals(this.expression, valueSetDefinitionData.expression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, qualifiedName, objectDefinition, typeClass, storageSchema, containerName, iconCode, inlineValues, expression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValueSetDefinitionData {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    qualifiedName: ").append(toIndentedString(qualifiedName)).append("\n");
    sb.append("    objectDefinition: ").append(toIndentedString(objectDefinition)).append("\n");
    sb.append("    typeClass: ").append(toIndentedString(typeClass)).append("\n");
    sb.append("    storageSchema: ").append(toIndentedString(storageSchema)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    iconCode: ").append(toIndentedString(iconCode)).append("\n");
    sb.append("    inlineValues: ").append(toIndentedString(inlineValues)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

