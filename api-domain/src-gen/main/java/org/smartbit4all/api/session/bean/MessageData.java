/*
 * Session api
 * Session api...
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.session.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.session.bean.MessageResult;
import org.smartbit4all.api.session.bean.MessageType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * MessageData
 */
@JsonPropertyOrder({
  MessageData.UUID,
  MessageData.HEADER,
  MessageData.TEXT,
  MessageData.POSSIBLE_RESULTS,
  MessageData.SELECT_RESULT
})
@JsonTypeName("MessageData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MessageData {
  public static final String UUID = "uuid";
  private MessageType uuid;

  public static final String HEADER = "header";
  private String header;

  public static final String TEXT = "text";
  private String text;

  public static final String POSSIBLE_RESULTS = "possibleResults";
  private List<MessageResult> possibleResults = new ArrayList<>();

  public static final String SELECT_RESULT = "selectResult";
  private MessageResult selectResult;


  public MessageData uuid(MessageType uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MessageType getUuid() {
    return uuid;
  }


  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(MessageType uuid) {
    this.uuid = uuid;
  }


  public MessageData header(String header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeader() {
    return header;
  }


  @JsonProperty(HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeader(String header) {
    this.header = header;
  }


  public MessageData text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public MessageData possibleResults(List<MessageResult> possibleResults) {
    
    this.possibleResults = possibleResults;
    return this;
  }

  public MessageData addPossibleResultsItem(MessageResult possibleResultsItem) {
    this.possibleResults.add(possibleResultsItem);
    return this;
  }

   /**
   * Get possibleResults
   * @return possibleResults
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(POSSIBLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MessageResult> getPossibleResults() {
    return possibleResults;
  }


  @JsonProperty(POSSIBLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPossibleResults(List<MessageResult> possibleResults) {
    this.possibleResults = possibleResults;
  }


  public MessageData selectResult(MessageResult selectResult) {
    
    this.selectResult = selectResult;
    return this;
  }

   /**
   * Get selectResult
   * @return selectResult
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SELECT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageResult getSelectResult() {
    return selectResult;
  }


  @JsonProperty(SELECT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectResult(MessageResult selectResult) {
    this.selectResult = selectResult;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageData messageData = (MessageData) o;
    return Objects.equals(this.uuid, messageData.uuid) &&
        Objects.equals(this.header, messageData.header) &&
        Objects.equals(this.text, messageData.text) &&
        Objects.equals(this.possibleResults, messageData.possibleResults) &&
        Objects.equals(this.selectResult, messageData.selectResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, header, text, possibleResults, selectResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageData {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    possibleResults: ").append(toIndentedString(possibleResults)).append("\n");
    sb.append("    selectResult: ").append(toIndentedString(selectResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

