/*
 * org api
 * org api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.org.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * User
 */
@JsonPropertyOrder({
  User.URI,
  User.USERNAME,
  User.NAME,
  User.EMAIL,
  User.PASSWORD,
  User.INACTIVE,
  User.ATTRIBUTES
})
@JsonTypeName("User")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class User {
  public static final String URI = "uri";
  private URI uri;

  public static final String USERNAME = "username";
  private String username;

  public static final String NAME = "name";
  private String name;

  public static final String EMAIL = "email";
  private String email;

  public static final String PASSWORD = "password";
  private String password;

  public static final String INACTIVE = "inactive";
  private Boolean inactive = false;

  public static final String ATTRIBUTES = "attributes";
  private Map<String, String> attributes = new HashMap<>();


  public User uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The uri of the user
   * @return uri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The uri of the user")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public User username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username")
  @JsonProperty(USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  public User name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name fo the user
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name fo the user")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public User email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The registered email address that indentifies the user
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The registered email address that indentifies the user")
  @JsonProperty(EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public User password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * The encripted password of the user
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encripted password of the user")
  @JsonProperty(PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public User inactive(Boolean inactive) {
    
    this.inactive = inactive;
    return this;
  }

   /**
   * Get inactive
   * @return inactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(INACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInactive() {
    return inactive;
  }


  @JsonProperty(INACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }


  public User attributes(Map<String, String> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public User putAttributesItem(String key, String attributesItem) {
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, String> getAttributes() {
    return attributes;
  }


  @JsonProperty(ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttributes(Map<String, String> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.uri, user.uri) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.password, user.password) &&
        Objects.equals(this.inactive, user.inactive) &&
        Objects.equals(this.attributes, user.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, username, name, email, password, inactive, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

