/*
 * collection api
 * collection api for the stored colections.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.collection.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The result item of an Object lookup. 
 */
@ApiModel(description = "The result item of an Object lookup. ")
@JsonPropertyOrder({
  ObjectLookupResultItem.ID,
  ObjectLookupResultItem.SCORE_IN_PERCENT,
  ObjectLookupResultItem.OBJECT_AS_MAP,
  ObjectLookupResultItem.OBJECT
})
@JsonTypeName("ObjectLookupResultItem")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectLookupResultItem {
  public static final String ID = "id";
  private String id;

  public static final String SCORE_IN_PERCENT = "scoreInPercent";
  private Float scoreInPercent;

  public static final String OBJECT_AS_MAP = "objectAsMap";
  private Map<String, Object> objectAsMap = null;

  public static final String OBJECT = "object";
  private Object _object;

  public ObjectLookupResultItem() { 
  }

  public ObjectLookupResultItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the object found.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique identifier of the object found.")
  @JsonProperty(ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ObjectLookupResultItem scoreInPercent(Float scoreInPercent) {
    
    this.scoreInPercent = scoreInPercent;
    return this;
  }

   /**
   * The score of the found item converted to percent. 100% means that the given result is the one tat we are looking for.
   * @return scoreInPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The score of the found item converted to percent. 100% means that the given result is the one tat we are looking for.")
  @JsonProperty(SCORE_IN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getScoreInPercent() {
    return scoreInPercent;
  }


  @JsonProperty(SCORE_IN_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoreInPercent(Float scoreInPercent) {
    this.scoreInPercent = scoreInPercent;
  }


  public ObjectLookupResultItem objectAsMap(Map<String, Object> objectAsMap) {
    
    this.objectAsMap = objectAsMap;
    return this;
  }

  public ObjectLookupResultItem putObjectAsMapItem(String key, Object objectAsMapItem) {
    if (this.objectAsMap == null) {
      this.objectAsMap = new HashMap<>();
    }
    this.objectAsMap.put(key, objectAsMapItem);
    return this;
  }

   /**
   * The object itself.
   * @return objectAsMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The object itself.")
  @JsonProperty(OBJECT_AS_MAP)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getObjectAsMap() {
    return objectAsMap;
  }


  @JsonProperty(OBJECT_AS_MAP)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setObjectAsMap(Map<String, Object> objectAsMap) {
    this.objectAsMap = objectAsMap;
  }


  public ObjectLookupResultItem _object(Object _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The object itself alternatively if it can be defined.
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The object itself alternatively if it can be defined.")
  @JsonProperty(OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getObject() {
    return _object;
  }


  @JsonProperty(OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObject(Object _object) {
    this._object = _object;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectLookupResultItem objectLookupResultItem = (ObjectLookupResultItem) o;
    return Objects.equals(this.id, objectLookupResultItem.id) &&
        Objects.equals(this.scoreInPercent, objectLookupResultItem.scoreInPercent) &&
        Objects.equals(this.objectAsMap, objectLookupResultItem.objectAsMap) &&
        Objects.equals(this._object, objectLookupResultItem._object);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scoreInPercent, objectAsMap, _object);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectLookupResultItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scoreInPercent: ").append(toIndentedString(scoreInPercent)).append("\n");
    sb.append("    objectAsMap: ").append(toIndentedString(objectAsMap)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

