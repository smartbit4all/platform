/*
 * collection api
 * collection api for the stored colections.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.collection.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The parameters of an Object lookup. 
 */
@ApiModel(description = "The parameters of an Object lookup. ")
@JsonPropertyOrder({
  ObjectLookupParameter.LIMIT,
  ObjectLookupParameter.RELEVANCE_LIMIT_PERCENT,
  ObjectLookupParameter.RELEVANCE_LIMIT_RANGE
})
@JsonTypeName("ObjectLookupParameter")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectLookupParameter {
  public static final String LIMIT = "limit";
  private Integer limit;

  public static final String RELEVANCE_LIMIT_PERCENT = "relevanceLimitPercent";
  private Float relevanceLimitPercent;

  public static final String RELEVANCE_LIMIT_RANGE = "relevanceLimitRange";
  private Float relevanceLimitRange;

  public ObjectLookupParameter() { 
  }

  public ObjectLookupParameter limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The limit of items in the result. 
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The limit of items in the result. ")
  @JsonProperty(LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public ObjectLookupParameter relevanceLimitPercent(Float relevanceLimitPercent) {
    
    this.relevanceLimitPercent = relevanceLimitPercent;
    return this;
  }

   /**
   * The limit of relevance in percent. If the relevance doesn&#39;t reach this level then it won&#39;t appear in the result. 
   * @return relevanceLimitPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The limit of relevance in percent. If the relevance doesn't reach this level then it won't appear in the result. ")
  @JsonProperty(RELEVANCE_LIMIT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRelevanceLimitPercent() {
    return relevanceLimitPercent;
  }


  @JsonProperty(RELEVANCE_LIMIT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelevanceLimitPercent(Float relevanceLimitPercent) {
    this.relevanceLimitPercent = relevanceLimitPercent;
  }


  public ObjectLookupParameter relevanceLimitRange(Float relevanceLimitRange) {
    
    this.relevanceLimitRange = relevanceLimitRange;
    return this;
  }

   /**
   * The limit of relevance range in percent. The most relevant result are closer to the first one then this limit. If we set this properly then we can see the most relevant as the numberOfRelevant in the result will set to 1. 
   * @return relevanceLimitRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The limit of relevance range in percent. The most relevant result are closer to the first one then this limit. If we set this properly then we can see the most relevant as the numberOfRelevant in the result will set to 1. ")
  @JsonProperty(RELEVANCE_LIMIT_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getRelevanceLimitRange() {
    return relevanceLimitRange;
  }


  @JsonProperty(RELEVANCE_LIMIT_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelevanceLimitRange(Float relevanceLimitRange) {
    this.relevanceLimitRange = relevanceLimitRange;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectLookupParameter objectLookupParameter = (ObjectLookupParameter) o;
    return Objects.equals(this.limit, objectLookupParameter.limit) &&
        Objects.equals(this.relevanceLimitPercent, objectLookupParameter.relevanceLimitPercent) &&
        Objects.equals(this.relevanceLimitRange, objectLookupParameter.relevanceLimitRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, relevanceLimitPercent, relevanceLimitRange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectLookupParameter {\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    relevanceLimitPercent: ").append(toIndentedString(relevanceLimitPercent)).append("\n");
    sb.append("    relevanceLimitRange: ").append(toIndentedString(relevanceLimitRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

