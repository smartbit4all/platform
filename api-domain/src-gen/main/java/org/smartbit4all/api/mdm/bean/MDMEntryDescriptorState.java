/*
 * MasterDataManagement api
 * null
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.mdm.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The entry state is responsible for storing the current editing state of the given entry. 
 */
@ApiModel(description = "The entry state is responsible for storing the current editing state of the given entry. ")
@JsonPropertyOrder({
  MDMEntryDescriptorState.URI,
  MDMEntryDescriptorState.BRANCH
})
@JsonTypeName("MDMEntryDescriptorState")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MDMEntryDescriptorState {
  public static final String URI = "uri";
  private URI uri;

  public static final String BRANCH = "branch";
  private URI branch;

  public MDMEntryDescriptorState() { 
  }

  public MDMEntryDescriptorState uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The uri of the object.
   * @return uri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The uri of the object.")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public MDMEntryDescriptorState branch(URI branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * The uri of the branch currently active for the given object. It could be the globalBranch if the policy is that we are working on the same branch for given object. There can be objects that can be edited in local branch but we can have global modifications where we would like to initiate a global modification package and publish tha whole at once. 
   * @return branch
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The uri of the branch currently active for the given object. It could be the globalBranch if the policy is that we are working on the same branch for given object. There can be objects that can be edited in local branch but we can have global modifications where we would like to initiate a global modification package and publish tha whole at once. ")
  @JsonProperty(BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getBranch() {
    return branch;
  }


  @JsonProperty(BRANCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranch(URI branch) {
    this.branch = branch;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MDMEntryDescriptorState mdMEntryDescriptorState = (MDMEntryDescriptorState) o;
    return Objects.equals(this.uri, mdMEntryDescriptorState.uri) &&
        Objects.equals(this.branch, mdMEntryDescriptorState.branch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, branch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MDMEntryDescriptorState {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

