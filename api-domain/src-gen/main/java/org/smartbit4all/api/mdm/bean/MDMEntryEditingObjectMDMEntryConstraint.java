/*
 * MasterDataManagement api
 * null
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.mdm.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * MDMEntryEditingObjectMDMEntryConstraint
 */
@JsonPropertyOrder({
  MDMEntryEditingObjectMDMEntryConstraint.KIND,
  MDMEntryEditingObjectMDMEntryConstraint.PATH
})
@JsonTypeName("MDMEntryEditingObject_MDMEntryConstraint")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MDMEntryEditingObjectMDMEntryConstraint {
  /**
   * Gets or Sets kind
   */
  public enum KindEnum {
    UNIQUE("UNIQUE"),
    
    UNIQUECASEINSENSITIVE("UNIQUECASEINSENSITIVE");

    private String value;

    KindEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static KindEnum fromValue(String value) {
      for (KindEnum b : KindEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String KIND = "kind";
  private KindEnum kind;

  public static final String PATH = "path";
  private List<String> path = new ArrayList<>();

  public MDMEntryEditingObjectMDMEntryConstraint() { 
  }

  public MDMEntryEditingObjectMDMEntryConstraint kind(KindEnum kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public KindEnum getKind() {
    return kind;
  }


  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKind(KindEnum kind) {
    this.kind = kind;
  }


  public MDMEntryEditingObjectMDMEntryConstraint path(List<String> path) {
    
    this.path = path;
    return this;
  }

  public MDMEntryEditingObjectMDMEntryConstraint addPathItem(String pathItem) {
    this.path.add(pathItem);
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getPath() {
    return path;
  }


  @JsonProperty(PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(List<String> path) {
    this.path = path;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MDMEntryEditingObjectMDMEntryConstraint mdMEntryEditingObjectMDMEntryConstraint = (MDMEntryEditingObjectMDMEntryConstraint) o;
    return Objects.equals(this.kind, mdMEntryEditingObjectMDMEntryConstraint.kind) &&
        Objects.equals(this.path, mdMEntryEditingObjectMDMEntryConstraint.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, path);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MDMEntryEditingObjectMDMEntryConstraint {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

