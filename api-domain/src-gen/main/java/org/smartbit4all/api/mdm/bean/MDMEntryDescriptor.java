/*
 * MasterDataManagement api
 * null
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.mdm.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.grid.bean.GridView;
import org.smartbit4all.api.invocation.bean.InvocationRequest;
import org.smartbit4all.api.mdm.bean.MDMBranchingStrategy;
import org.smartbit4all.api.mdm.bean.MDMEntryConstraint;
import org.smartbit4all.api.mdm.bean.MDMTableColumnDescriptor;
import org.smartbit4all.api.object.bean.LangString;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The entry is responsible for a managed list of object instances from the same kind. This contains every information about the behavior of the given list of object. 
 */
@ApiModel(description = "The entry is responsible for a managed list of object instances from the same kind. This contains every information about the behavior of the given list of object. ")
@JsonPropertyOrder({
  MDMEntryDescriptor.NAME,
  MDMEntryDescriptor.DISPLAY_NAME_LIST,
  MDMEntryDescriptor.DISPLAY_NAME_FORM,
  MDMEntryDescriptor.ORDER,
  MDMEntryDescriptor.ADMIN_GROUP_NAME,
  MDMEntryDescriptor.TYPE_QUALIFIED_NAME,
  MDMEntryDescriptor.PUBLISHED_LIST_NAME,
  MDMEntryDescriptor.INACTIVE_MGMT,
  MDMEntryDescriptor.UNIQUE_PROPERTY_PATHS,
  MDMEntryDescriptor.CONSTRAINTS,
  MDMEntryDescriptor.TABLE_COLUMNS,
  MDMEntryDescriptor.EDITOR_VIEW_NAME,
  MDMEntryDescriptor.LIST_PAGE_GRID_VIEWS,
  MDMEntryDescriptor.SEARCH_INDEX_FOR_ENTRIES,
  MDMEntryDescriptor.SCHEMA,
  MDMEntryDescriptor.URI_CONSTRUCTOR,
  MDMEntryDescriptor.EVENT_HANDLERS_BEFORE_SAVE,
  MDMEntryDescriptor.IS_VALUE_SET,
  MDMEntryDescriptor.BRANCHING_STRATEGY,
  MDMEntryDescriptor.SELF_CONTAINED_REF_LIST
})
@JsonTypeName("MDMEntryDescriptor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MDMEntryDescriptor {
  public static final String NAME = "name";
  private String name;

  public static final String DISPLAY_NAME_LIST = "displayNameList";
  private LangString displayNameList = null;

  public static final String DISPLAY_NAME_FORM = "displayNameForm";
  private LangString displayNameForm = null;

  public static final String ORDER = "order";
  private Long order;

  public static final String ADMIN_GROUP_NAME = "adminGroupName";
  private String adminGroupName;

  public static final String TYPE_QUALIFIED_NAME = "typeQualifiedName";
  private String typeQualifiedName = "org.smartbit4all.api.value.bean.GenericValue";

  public static final String PUBLISHED_LIST_NAME = "publishedListName";
  private String publishedListName;

  public static final String INACTIVE_MGMT = "inactiveMgmt";
  private Boolean inactiveMgmt = true;

  public static final String UNIQUE_PROPERTY_PATHS = "uniquePropertyPaths";
  private List<List<String>> uniquePropertyPaths = null;

  public static final String CONSTRAINTS = "constraints";
  private List<MDMEntryConstraint> constraints = null;

  public static final String TABLE_COLUMNS = "tableColumns";
  private List<MDMTableColumnDescriptor> tableColumns = new ArrayList<>();

  public static final String EDITOR_VIEW_NAME = "editorViewName";
  private String editorViewName;

  public static final String LIST_PAGE_GRID_VIEWS = "listPageGridViews";
  private List<GridView> listPageGridViews = new ArrayList<>();

  public static final String SEARCH_INDEX_FOR_ENTRIES = "searchIndexForEntries";
  private String searchIndexForEntries;

  public static final String SCHEMA = "schema";
  private String schema;

  public static final String URI_CONSTRUCTOR = "uriConstructor";
  private InvocationRequest uriConstructor = null;

  public static final String EVENT_HANDLERS_BEFORE_SAVE = "eventHandlersBeforeSave";
  private List<InvocationRequest> eventHandlersBeforeSave = null;

  public static final String IS_VALUE_SET = "isValueSet";
  private Boolean isValueSet = false;

  public static final String BRANCHING_STRATEGY = "branchingStrategy";
  private MDMBranchingStrategy branchingStrategy;

  public static final String SELF_CONTAINED_REF_LIST = "selfContainedRefList";
  private String selfContainedRefList;

  public MDMEntryDescriptor() { 
  }

  public MDMEntryDescriptor name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name is the key of the given entry. The caption that is translated by the LocaleSettingApi. Normally it is filled with the qualified name of the given class. It is easy to identify in the message...properties. 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name is the key of the given entry. The caption that is translated by the LocaleSettingApi. Normally it is filled with the qualified name of the given class. It is easy to identify in the message...properties. ")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public MDMEntryDescriptor displayNameList(LangString displayNameList) {
    
    this.displayNameList = displayNameList;
    return this;
  }

   /**
   * Get displayNameList
   * @return displayNameList
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DISPLAY_NAME_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LangString getDisplayNameList() {
    return displayNameList;
  }


  @JsonProperty(DISPLAY_NAME_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayNameList(LangString displayNameList) {
    this.displayNameList = displayNameList;
  }


  public MDMEntryDescriptor displayNameForm(LangString displayNameForm) {
    
    this.displayNameForm = displayNameForm;
    return this;
  }

   /**
   * Get displayNameForm
   * @return displayNameForm
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(DISPLAY_NAME_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LangString getDisplayNameForm() {
    return displayNameForm;
  }


  @JsonProperty(DISPLAY_NAME_FORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayNameForm(LangString displayNameForm) {
    this.displayNameForm = displayNameForm;
  }


  public MDMEntryDescriptor order(Long order) {
    
    this.order = order;
    return this;
  }

   /**
   * An arbitrary number, which can be used for any sorting, for example in Admin pages when managing entries. 
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An arbitrary number, which can be used for any sorting, for example in Admin pages when managing entries. ")
  @JsonProperty(ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getOrder() {
    return order;
  }


  @JsonProperty(ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Long order) {
    this.order = order;
  }


  public MDMEntryDescriptor adminGroupName(String adminGroupName) {
    
    this.adminGroupName = adminGroupName;
    return this;
  }

   /**
   * The name of the administration group. Optional, if we don&#39;t set it then the group defined in the definition will be the master group for this entry. The security group of the entry is named like mdm.definition.entry. 
   * @return adminGroupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the administration group. Optional, if we don't set it then the group defined in the definition will be the master group for this entry. The security group of the entry is named like mdm.definition.entry. ")
  @JsonProperty(ADMIN_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminGroupName() {
    return adminGroupName;
  }


  @JsonProperty(ADMIN_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminGroupName(String adminGroupName) {
    this.adminGroupName = adminGroupName;
  }


  public MDMEntryDescriptor typeQualifiedName(String typeQualifiedName) {
    
    this.typeQualifiedName = typeQualifiedName;
    return this;
  }

   /**
   * The type qualified name that is normally the name of the java class. It is used to identify the ObjectDefinition by name. By default the GenericValue object is used. 
   * @return typeQualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type qualified name that is normally the name of the java class. It is used to identify the ObjectDefinition by name. By default the GenericValue object is used. ")
  @JsonProperty(TYPE_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeQualifiedName() {
    return typeQualifiedName;
  }


  @JsonProperty(TYPE_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeQualifiedName(String typeQualifiedName) {
    this.typeQualifiedName = typeQualifiedName;
  }


  public MDMEntryDescriptor publishedListName(String publishedListName) {
    
    this.publishedListName = publishedListName;
    return this;
  }

   /**
   * Name of Collection.list in which published entries will be stored. 
   * @return publishedListName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of Collection.list in which published entries will be stored. ")
  @JsonProperty(PUBLISHED_LIST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublishedListName() {
    return publishedListName;
  }


  @JsonProperty(PUBLISHED_LIST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishedListName(String publishedListName) {
    this.publishedListName = publishedListName;
  }


  public MDMEntryDescriptor inactiveMgmt(Boolean inactiveMgmt) {
    
    this.inactiveMgmt = inactiveMgmt;
    return this;
  }

   /**
   * The name of Collection.list in which the inactive entries will be stored is the list-inactive. If we set this true then the removal will save the removed item in this list. Else the removal is a final operation. This list is also managed in a branched way. So the inactive state is also branched. 
   * @return inactiveMgmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of Collection.list in which the inactive entries will be stored is the list-inactive. If we set this true then the removal will save the removed item in this list. Else the removal is a final operation. This list is also managed in a branched way. So the inactive state is also branched. ")
  @JsonProperty(INACTIVE_MGMT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInactiveMgmt() {
    return inactiveMgmt;
  }


  @JsonProperty(INACTIVE_MGMT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInactiveMgmt(Boolean inactiveMgmt) {
    this.inactiveMgmt = inactiveMgmt;
  }


  public MDMEntryDescriptor uniquePropertyPaths(List<List<String>> uniquePropertyPaths) {
    
    this.uniquePropertyPaths = uniquePropertyPaths;
    return this;
  }

  public MDMEntryDescriptor addUniquePropertyPathsItem(List<String> uniquePropertyPathsItem) {
    if (this.uniquePropertyPaths == null) {
      this.uniquePropertyPaths = new ArrayList<>();
    }
    this.uniquePropertyPaths.add(uniquePropertyPathsItem);
    return this;
  }

   /**
   * The paths for the properties which should be unique in the handled objects. If this property is setted then maps generated to hold the unique values. Use the constraints property instead!  
   * @return uniquePropertyPaths
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The paths for the properties which should be unique in the handled objects. If this property is setted then maps generated to hold the unique values. Use the constraints property instead!  ")
  @JsonProperty(UNIQUE_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<List<String>> getUniquePropertyPaths() {
    return uniquePropertyPaths;
  }


  @JsonProperty(UNIQUE_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniquePropertyPaths(List<List<String>> uniquePropertyPaths) {
    this.uniquePropertyPaths = uniquePropertyPaths;
  }


  public MDMEntryDescriptor constraints(List<MDMEntryConstraint> constraints) {
    
    this.constraints = constraints;
    return this;
  }

  public MDMEntryDescriptor addConstraintsItem(MDMEntryConstraint constraintsItem) {
    if (this.constraints == null) {
      this.constraints = new ArrayList<>();
    }
    this.constraints.add(constraintsItem);
    return this;
  }

   /**
   * The new or edited entryies should comply the constraints. 
   * @return constraints
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The new or edited entryies should comply the constraints. ")
  @JsonProperty(CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MDMEntryConstraint> getConstraints() {
    return constraints;
  }


  @JsonProperty(CONSTRAINTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConstraints(List<MDMEntryConstraint> constraints) {
    this.constraints = constraints;
  }


  public MDMEntryDescriptor tableColumns(List<MDMTableColumnDescriptor> tableColumns) {
    
    this.tableColumns = tableColumns;
    return this;
  }

  public MDMEntryDescriptor addTableColumnsItem(MDMTableColumnDescriptor tableColumnsItem) {
    this.tableColumns.add(tableColumnsItem);
    return this;
  }

   /**
   * The given object can be listed and can be searched. This mapping defines the table columns for the object. The columns can be hidden and the order is the default column order on the screen. 
   * @return tableColumns
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The given object can be listed and can be searched. This mapping defines the table columns for the object. The columns can be hidden and the order is the default column order on the screen. ")
  @JsonProperty(TABLE_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MDMTableColumnDescriptor> getTableColumns() {
    return tableColumns;
  }


  @JsonProperty(TABLE_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTableColumns(List<MDMTableColumnDescriptor> tableColumns) {
    this.tableColumns = tableColumns;
  }


  public MDMEntryDescriptor editorViewName(String editorViewName) {
    
    this.editorViewName = editorViewName;
    return this;
  }

   /**
   * The name of the view editor view to open. If empty then we use the default in the application.
   * @return editorViewName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the view editor view to open. If empty then we use the default in the application.")
  @JsonProperty(EDITOR_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditorViewName() {
    return editorViewName;
  }


  @JsonProperty(EDITOR_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditorViewName(String editorViewName) {
    this.editorViewName = editorViewName;
  }


  public MDMEntryDescriptor listPageGridViews(List<GridView> listPageGridViews) {
    
    this.listPageGridViews = listPageGridViews;
    return this;
  }

  public MDMEntryDescriptor addListPageGridViewsItem(GridView listPageGridViewsItem) {
    this.listPageGridViews.add(listPageGridViewsItem);
    return this;
  }

   /**
   * The supported GridViews for presenting the MDM Entry List Page. If none are provided, all table columns are rendered. If more than one GridViews are  provided, it is the PageApi implementation&#39;s responsibility to provide actions for  switching between grid views. 
   * @return listPageGridViews
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The supported GridViews for presenting the MDM Entry List Page. If none are provided, all table columns are rendered. If more than one GridViews are  provided, it is the PageApi implementation's responsibility to provide actions for  switching between grid views. ")
  @JsonProperty(LIST_PAGE_GRID_VIEWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<GridView> getListPageGridViews() {
    return listPageGridViews;
  }


  @JsonProperty(LIST_PAGE_GRID_VIEWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setListPageGridViews(List<GridView> listPageGridViews) {
    this.listPageGridViews = listPageGridViews;
  }


  public MDMEntryDescriptor searchIndexForEntries(String searchIndexForEntries) {
    
    this.searchIndexForEntries = searchIndexForEntries;
    return this;
  }

   /**
   * The name of search index that provides the entries.
   * @return searchIndexForEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of search index that provides the entries.")
  @JsonProperty(SEARCH_INDEX_FOR_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchIndexForEntries() {
    return searchIndexForEntries;
  }


  @JsonProperty(SEARCH_INDEX_FOR_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchIndexForEntries(String searchIndexForEntries) {
    this.searchIndexForEntries = searchIndexForEntries;
  }


  public MDMEntryDescriptor schema(String schema) {
    
    this.schema = schema;
    return this;
  }

   /**
   * The schema for the objects to store them in. If it is null then the default schema from the MDMDefinition will be used. 
   * @return schema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The schema for the objects to store them in. If it is null then the default schema from the MDMDefinition will be used. ")
  @JsonProperty(SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchema() {
    return schema;
  }


  @JsonProperty(SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchema(String schema) {
    this.schema = schema;
  }


  public MDMEntryDescriptor uriConstructor(InvocationRequest uriConstructor) {
    
    this.uriConstructor = uriConstructor;
    return this;
  }

   /**
   * It can be a function that produces the URI for the given object by the other property values. 
   * @return uriConstructor
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "It can be a function that produces the URI for the given object by the other property values. ")
  @JsonProperty(URI_CONSTRUCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvocationRequest getUriConstructor() {
    return uriConstructor;
  }


  @JsonProperty(URI_CONSTRUCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUriConstructor(InvocationRequest uriConstructor) {
    this.uriConstructor = uriConstructor;
  }


  public MDMEntryDescriptor eventHandlersBeforeSave(List<InvocationRequest> eventHandlersBeforeSave) {
    
    this.eventHandlersBeforeSave = eventHandlersBeforeSave;
    return this;
  }

  public MDMEntryDescriptor addEventHandlersBeforeSaveItem(InvocationRequest eventHandlersBeforeSaveItem) {
    if (this.eventHandlersBeforeSave == null) {
      this.eventHandlersBeforeSave = new ArrayList<>();
    }
    this.eventHandlersBeforeSave.add(eventHandlersBeforeSaveItem);
    return this;
  }

   /**
   * These functions are event handlers to manage the save before event about the given object. 
   * @return eventHandlersBeforeSave
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "These functions are event handlers to manage the save before event about the given object. ")
  @JsonProperty(EVENT_HANDLERS_BEFORE_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InvocationRequest> getEventHandlersBeforeSave() {
    return eventHandlersBeforeSave;
  }


  @JsonProperty(EVENT_HANDLERS_BEFORE_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventHandlersBeforeSave(List<InvocationRequest> eventHandlersBeforeSave) {
    this.eventHandlersBeforeSave = eventHandlersBeforeSave;
  }


  public MDMEntryDescriptor isValueSet(Boolean isValueSet) {
    
    this.isValueSet = isValueSet;
    return this;
  }

   /**
   * Indicates if this entry is treated as a generic value set (it&#39;s not necessary for the type  to be a GenericValue, but usually it will be) 
   * @return isValueSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this entry is treated as a generic value set (it's not necessary for the type  to be a GenericValue, but usually it will be) ")
  @JsonProperty(IS_VALUE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsValueSet() {
    return isValueSet;
  }


  @JsonProperty(IS_VALUE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsValueSet(Boolean isValueSet) {
    this.isValueSet = isValueSet;
  }


  public MDMEntryDescriptor branchingStrategy(MDMBranchingStrategy branchingStrategy) {
    
    this.branchingStrategy = branchingStrategy;
    return this;
  }

   /**
   * Get branchingStrategy
   * @return branchingStrategy
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(BRANCHING_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MDMBranchingStrategy getBranchingStrategy() {
    return branchingStrategy;
  }


  @JsonProperty(BRANCHING_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchingStrategy(MDMBranchingStrategy branchingStrategy) {
    this.branchingStrategy = branchingStrategy;
  }


  public MDMEntryDescriptor selfContainedRefList(String selfContainedRefList) {
    
    this.selfContainedRefList = selfContainedRefList;
    return this;
  }

   /**
   * The name of the self contained reference list like childer list. It is used to recurse on the object nodes if a complex  hierarchy is saved via the MDMEntryApi. 
   * @return selfContainedRefList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the self contained reference list like childer list. It is used to recurse on the object nodes if a complex  hierarchy is saved via the MDMEntryApi. ")
  @JsonProperty(SELF_CONTAINED_REF_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelfContainedRefList() {
    return selfContainedRefList;
  }


  @JsonProperty(SELF_CONTAINED_REF_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfContainedRefList(String selfContainedRefList) {
    this.selfContainedRefList = selfContainedRefList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MDMEntryDescriptor mdMEntryDescriptor = (MDMEntryDescriptor) o;
    return Objects.equals(this.name, mdMEntryDescriptor.name) &&
        Objects.equals(this.displayNameList, mdMEntryDescriptor.displayNameList) &&
        Objects.equals(this.displayNameForm, mdMEntryDescriptor.displayNameForm) &&
        Objects.equals(this.order, mdMEntryDescriptor.order) &&
        Objects.equals(this.adminGroupName, mdMEntryDescriptor.adminGroupName) &&
        Objects.equals(this.typeQualifiedName, mdMEntryDescriptor.typeQualifiedName) &&
        Objects.equals(this.publishedListName, mdMEntryDescriptor.publishedListName) &&
        Objects.equals(this.inactiveMgmt, mdMEntryDescriptor.inactiveMgmt) &&
        Objects.equals(this.uniquePropertyPaths, mdMEntryDescriptor.uniquePropertyPaths) &&
        Objects.equals(this.constraints, mdMEntryDescriptor.constraints) &&
        Objects.equals(this.tableColumns, mdMEntryDescriptor.tableColumns) &&
        Objects.equals(this.editorViewName, mdMEntryDescriptor.editorViewName) &&
        Objects.equals(this.listPageGridViews, mdMEntryDescriptor.listPageGridViews) &&
        Objects.equals(this.searchIndexForEntries, mdMEntryDescriptor.searchIndexForEntries) &&
        Objects.equals(this.schema, mdMEntryDescriptor.schema) &&
        Objects.equals(this.uriConstructor, mdMEntryDescriptor.uriConstructor) &&
        Objects.equals(this.eventHandlersBeforeSave, mdMEntryDescriptor.eventHandlersBeforeSave) &&
        Objects.equals(this.isValueSet, mdMEntryDescriptor.isValueSet) &&
        Objects.equals(this.branchingStrategy, mdMEntryDescriptor.branchingStrategy) &&
        Objects.equals(this.selfContainedRefList, mdMEntryDescriptor.selfContainedRefList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayNameList, displayNameForm, order, adminGroupName, typeQualifiedName, publishedListName, inactiveMgmt, uniquePropertyPaths, constraints, tableColumns, editorViewName, listPageGridViews, searchIndexForEntries, schema, uriConstructor, eventHandlersBeforeSave, isValueSet, branchingStrategy, selfContainedRefList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MDMEntryDescriptor {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayNameList: ").append(toIndentedString(displayNameList)).append("\n");
    sb.append("    displayNameForm: ").append(toIndentedString(displayNameForm)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    adminGroupName: ").append(toIndentedString(adminGroupName)).append("\n");
    sb.append("    typeQualifiedName: ").append(toIndentedString(typeQualifiedName)).append("\n");
    sb.append("    publishedListName: ").append(toIndentedString(publishedListName)).append("\n");
    sb.append("    inactiveMgmt: ").append(toIndentedString(inactiveMgmt)).append("\n");
    sb.append("    uniquePropertyPaths: ").append(toIndentedString(uniquePropertyPaths)).append("\n");
    sb.append("    constraints: ").append(toIndentedString(constraints)).append("\n");
    sb.append("    tableColumns: ").append(toIndentedString(tableColumns)).append("\n");
    sb.append("    editorViewName: ").append(toIndentedString(editorViewName)).append("\n");
    sb.append("    listPageGridViews: ").append(toIndentedString(listPageGridViews)).append("\n");
    sb.append("    searchIndexForEntries: ").append(toIndentedString(searchIndexForEntries)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    uriConstructor: ").append(toIndentedString(uriConstructor)).append("\n");
    sb.append("    eventHandlersBeforeSave: ").append(toIndentedString(eventHandlersBeforeSave)).append("\n");
    sb.append("    isValueSet: ").append(toIndentedString(isValueSet)).append("\n");
    sb.append("    branchingStrategy: ").append(toIndentedString(branchingStrategy)).append("\n");
    sb.append("    selfContainedRefList: ").append(toIndentedString(selfContainedRefList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

