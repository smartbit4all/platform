/*
 * MasterDataManagement api
 * null
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.mdm.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.invocation.bean.InvocationRequest;
import org.smartbit4all.api.mdm.bean.MDMTableColumnDescriptor;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The entry is responsible for a managed list of object instances from the same kind. This contains every information about the behavior of the given list of object. 
 */
@ApiModel(description = "The entry is responsible for a managed list of object instances from the same kind. This contains every information about the behavior of the given list of object. ")
@JsonPropertyOrder({
  MDMEntryDescriptor.NAME,
  MDMEntryDescriptor.TYPE_QUALIFIED_NAME,
  MDMEntryDescriptor.INLINE_VALUE_SET,
  MDMEntryDescriptor.PUBLISH_IN_LIST,
  MDMEntryDescriptor.UNIQUE_IDENTIFIER_PATH,
  MDMEntryDescriptor.PUBLISH_IN_MAP,
  MDMEntryDescriptor.TABLE_COLUMNS,
  MDMEntryDescriptor.EDITOR_VIEW_NAME,
  MDMEntryDescriptor.SEARCH_INDEX_FOR_ENTRIES,
  MDMEntryDescriptor.SCHEMA,
  MDMEntryDescriptor.BRANCH_STRATEGY,
  MDMEntryDescriptor.URI_CONSTRUCTOR,
  MDMEntryDescriptor.EVENT_HANDLERS_BEFORE_SAVE,
  MDMEntryDescriptor.STATE
})
@JsonTypeName("MDMEntryDescriptor")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MDMEntryDescriptor {
  public static final String NAME = "name";
  private String name;

  public static final String TYPE_QUALIFIED_NAME = "typeQualifiedName";
  private String typeQualifiedName = "org.smartbit4all.api.value.bean.Value";

  public static final String INLINE_VALUE_SET = "inlineValueSet";
  private Boolean inlineValueSet = true;

  public static final String PUBLISH_IN_LIST = "publishInList";
  private Boolean publishInList = true;

  public static final String UNIQUE_IDENTIFIER_PATH = "uniqueIdentifierPath";
  private List<String> uniqueIdentifierPath = null;

  public static final String PUBLISH_IN_MAP = "publishInMap";
  private Boolean publishInMap = true;

  public static final String TABLE_COLUMNS = "tableColumns";
  private List<MDMTableColumnDescriptor> tableColumns = new ArrayList<>();

  public static final String EDITOR_VIEW_NAME = "editorViewName";
  private String editorViewName;

  public static final String SEARCH_INDEX_FOR_ENTRIES = "searchIndexForEntries";
  private String searchIndexForEntries;

  public static final String SCHEMA = "schema";
  private String schema;

  /**
   * Gets or Sets branchStrategy
   */
  public enum BranchStrategyEnum {
    GLOBAL("global"),
    
    ENTRYLEVEL("entryLevel");

    private String value;

    BranchStrategyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BranchStrategyEnum fromValue(String value) {
      for (BranchStrategyEnum b : BranchStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String BRANCH_STRATEGY = "branchStrategy";
  private BranchStrategyEnum branchStrategy;

  public static final String URI_CONSTRUCTOR = "uriConstructor";
  private InvocationRequest uriConstructor = null;

  public static final String EVENT_HANDLERS_BEFORE_SAVE = "eventHandlersBeforeSave";
  private List<InvocationRequest> eventHandlersBeforeSave = null;

  public static final String STATE = "state";
  private URI state;

  public MDMEntryDescriptor() { 
  }

  public MDMEntryDescriptor name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name is the key of the given entry. The caption that is translated by the LocaleSettingApi. Normally it is filled with the qualified name of the given class. It is easy to identify in the message...properties. 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name is the key of the given entry. The caption that is translated by the LocaleSettingApi. Normally it is filled with the qualified name of the given class. It is easy to identify in the message...properties. ")
  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public MDMEntryDescriptor typeQualifiedName(String typeQualifiedName) {
    
    this.typeQualifiedName = typeQualifiedName;
    return this;
  }

   /**
   * The type qualified name that is normally the name of the java class. It is used to identify the ObjectDefinition by name. By default the Value object is used that can be inline or reference also because it has uri and code also. 
   * @return typeQualifiedName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type qualified name that is normally the name of the java class. It is used to identify the ObjectDefinition by name. By default the Value object is used that can be inline or reference also because it has uri and code also. ")
  @JsonProperty(TYPE_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTypeQualifiedName() {
    return typeQualifiedName;
  }


  @JsonProperty(TYPE_QUALIFIED_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeQualifiedName(String typeQualifiedName) {
    this.typeQualifiedName = typeQualifiedName;
  }


  public MDMEntryDescriptor inlineValueSet(Boolean inlineValueSet) {
    
    this.inlineValueSet = inlineValueSet;
    return this;
  }

   /**
   * If it is true then the values are stored directly in the ValueSetDefinition object list. In this case the Value object doesn&#39;t have any URI till it is not an individually stored object. If it is false then the editor will save all the objects as individual stored object with URI. 
   * @return inlineValueSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If it is true then the values are stored directly in the ValueSetDefinition object list. In this case the Value object doesn't have any URI till it is not an individually stored object. If it is false then the editor will save all the objects as individual stored object with URI. ")
  @JsonProperty(INLINE_VALUE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInlineValueSet() {
    return inlineValueSet;
  }


  @JsonProperty(INLINE_VALUE_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInlineValueSet(Boolean inlineValueSet) {
    this.inlineValueSet = inlineValueSet;
  }


  public MDMEntryDescriptor publishInList(Boolean publishInList) {
    
    this.publishInList = publishInList;
    return this;
  }

   /**
   * The published objects can be seen in this list that can be accessed by the CollectionApi.list(). The name of the list will be the nameList. 
   * @return publishInList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The published objects can be seen in this list that can be accessed by the CollectionApi.list(). The name of the list will be the nameList. ")
  @JsonProperty(PUBLISH_IN_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublishInList() {
    return publishInList;
  }


  @JsonProperty(PUBLISH_IN_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishInList(Boolean publishInList) {
    this.publishInList = publishInList;
  }


  public MDMEntryDescriptor uniqueIdentifierPath(List<String> uniqueIdentifierPath) {
    
    this.uniqueIdentifierPath = uniqueIdentifierPath;
    return this;
  }

  public MDMEntryDescriptor addUniqueIdentifierPathItem(String uniqueIdentifierPathItem) {
    if (this.uniqueIdentifierPath == null) {
      this.uniqueIdentifierPath = new ArrayList<>();
    }
    this.uniqueIdentifierPath.add(uniqueIdentifierPathItem);
    return this;
  }

   /**
   * The path of the identifier property that is uniquely identifies the given instance of the object. Normally it contains one String element that is the name of the identifier property. But it can be inside a contained object so it can be DATA, CODE or similar. 
   * @return uniqueIdentifierPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path of the identifier property that is uniquely identifies the given instance of the object. Normally it contains one String element that is the name of the identifier property. But it can be inside a contained object so it can be DATA, CODE or similar. ")
  @JsonProperty(UNIQUE_IDENTIFIER_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUniqueIdentifierPath() {
    return uniqueIdentifierPath;
  }


  @JsonProperty(UNIQUE_IDENTIFIER_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueIdentifierPath(List<String> uniqueIdentifierPath) {
    this.uniqueIdentifierPath = uniqueIdentifierPath;
  }


  public MDMEntryDescriptor publishInMap(Boolean publishInMap) {
    
    this.publishInMap = publishInMap;
    return this;
  }

   /**
   * The published objects can be seen in this map that can be accessed by the CollectionApi.map(). The name of the map will be the nameMap. It works if and only if we have uniqueIdentifierPath set.  
   * @return publishInMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The published objects can be seen in this map that can be accessed by the CollectionApi.map(). The name of the map will be the nameMap. It works if and only if we have uniqueIdentifierPath set.  ")
  @JsonProperty(PUBLISH_IN_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublishInMap() {
    return publishInMap;
  }


  @JsonProperty(PUBLISH_IN_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublishInMap(Boolean publishInMap) {
    this.publishInMap = publishInMap;
  }


  public MDMEntryDescriptor tableColumns(List<MDMTableColumnDescriptor> tableColumns) {
    
    this.tableColumns = tableColumns;
    return this;
  }

  public MDMEntryDescriptor addTableColumnsItem(MDMTableColumnDescriptor tableColumnsItem) {
    this.tableColumns.add(tableColumnsItem);
    return this;
  }

   /**
   * The given object can be listed and can be searched. This mapping defines the table columns for the object. The columns can be hidden and the order is the default column order on the screen. 
   * @return tableColumns
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The given object can be listed and can be searched. This mapping defines the table columns for the object. The columns can be hidden and the order is the default column order on the screen. ")
  @JsonProperty(TABLE_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MDMTableColumnDescriptor> getTableColumns() {
    return tableColumns;
  }


  @JsonProperty(TABLE_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTableColumns(List<MDMTableColumnDescriptor> tableColumns) {
    this.tableColumns = tableColumns;
  }


  public MDMEntryDescriptor editorViewName(String editorViewName) {
    
    this.editorViewName = editorViewName;
    return this;
  }

   /**
   * The name of the view editor view to open. If empty then we use the default in the application.
   * @return editorViewName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the view editor view to open. If empty then we use the default in the application.")
  @JsonProperty(EDITOR_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEditorViewName() {
    return editorViewName;
  }


  @JsonProperty(EDITOR_VIEW_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditorViewName(String editorViewName) {
    this.editorViewName = editorViewName;
  }


  public MDMEntryDescriptor searchIndexForEntries(String searchIndexForEntries) {
    
    this.searchIndexForEntries = searchIndexForEntries;
    return this;
  }

   /**
   * The name of search index that provides the entries.
   * @return searchIndexForEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of search index that provides the entries.")
  @JsonProperty(SEARCH_INDEX_FOR_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchIndexForEntries() {
    return searchIndexForEntries;
  }


  @JsonProperty(SEARCH_INDEX_FOR_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchIndexForEntries(String searchIndexForEntries) {
    this.searchIndexForEntries = searchIndexForEntries;
  }


  public MDMEntryDescriptor schema(String schema) {
    
    this.schema = schema;
    return this;
  }

   /**
   * The schema for the objects to store them in. If it is null then the default schema from the MDMDefinition will be used. 
   * @return schema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The schema for the objects to store them in. If it is null then the default schema from the MDMDefinition will be used. ")
  @JsonProperty(SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchema() {
    return schema;
  }


  @JsonProperty(SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchema(String schema) {
    this.schema = schema;
  }


  public MDMEntryDescriptor branchStrategy(BranchStrategyEnum branchStrategy) {
    
    this.branchStrategy = branchStrategy;
    return this;
  }

   /**
   * Get branchStrategy
   * @return branchStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(BRANCH_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BranchStrategyEnum getBranchStrategy() {
    return branchStrategy;
  }


  @JsonProperty(BRANCH_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBranchStrategy(BranchStrategyEnum branchStrategy) {
    this.branchStrategy = branchStrategy;
  }


  public MDMEntryDescriptor uriConstructor(InvocationRequest uriConstructor) {
    
    this.uriConstructor = uriConstructor;
    return this;
  }

   /**
   * It can be a function that produces the URI for the given object by the other property values. 
   * @return uriConstructor
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "It can be a function that produces the URI for the given object by the other property values. ")
  @JsonProperty(URI_CONSTRUCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvocationRequest getUriConstructor() {
    return uriConstructor;
  }


  @JsonProperty(URI_CONSTRUCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUriConstructor(InvocationRequest uriConstructor) {
    this.uriConstructor = uriConstructor;
  }


  public MDMEntryDescriptor eventHandlersBeforeSave(List<InvocationRequest> eventHandlersBeforeSave) {
    
    this.eventHandlersBeforeSave = eventHandlersBeforeSave;
    return this;
  }

  public MDMEntryDescriptor addEventHandlersBeforeSaveItem(InvocationRequest eventHandlersBeforeSaveItem) {
    if (this.eventHandlersBeforeSave == null) {
      this.eventHandlersBeforeSave = new ArrayList<>();
    }
    this.eventHandlersBeforeSave.add(eventHandlersBeforeSaveItem);
    return this;
  }

   /**
   * These functions are event handlers to manage the save before event about the given object. 
   * @return eventHandlersBeforeSave
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "These functions are event handlers to manage the save before event about the given object. ")
  @JsonProperty(EVENT_HANDLERS_BEFORE_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InvocationRequest> getEventHandlersBeforeSave() {
    return eventHandlersBeforeSave;
  }


  @JsonProperty(EVENT_HANDLERS_BEFORE_SAVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventHandlersBeforeSave(List<InvocationRequest> eventHandlersBeforeSave) {
    this.eventHandlersBeforeSave = eventHandlersBeforeSave;
  }


  public MDMEntryDescriptor state(URI state) {
    
    this.state = state;
    return this;
  }

   /**
   * The reference to the current state of the given entry. It contains the necessary runtime informations.
   * @return state
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The reference to the current state of the given entry. It contains the necessary runtime informations.")
  @JsonProperty(STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getState() {
    return state;
  }


  @JsonProperty(STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(URI state) {
    this.state = state;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MDMEntryDescriptor mdMEntryDescriptor = (MDMEntryDescriptor) o;
    return Objects.equals(this.name, mdMEntryDescriptor.name) &&
        Objects.equals(this.typeQualifiedName, mdMEntryDescriptor.typeQualifiedName) &&
        Objects.equals(this.inlineValueSet, mdMEntryDescriptor.inlineValueSet) &&
        Objects.equals(this.publishInList, mdMEntryDescriptor.publishInList) &&
        Objects.equals(this.uniqueIdentifierPath, mdMEntryDescriptor.uniqueIdentifierPath) &&
        Objects.equals(this.publishInMap, mdMEntryDescriptor.publishInMap) &&
        Objects.equals(this.tableColumns, mdMEntryDescriptor.tableColumns) &&
        Objects.equals(this.editorViewName, mdMEntryDescriptor.editorViewName) &&
        Objects.equals(this.searchIndexForEntries, mdMEntryDescriptor.searchIndexForEntries) &&
        Objects.equals(this.schema, mdMEntryDescriptor.schema) &&
        Objects.equals(this.branchStrategy, mdMEntryDescriptor.branchStrategy) &&
        Objects.equals(this.uriConstructor, mdMEntryDescriptor.uriConstructor) &&
        Objects.equals(this.eventHandlersBeforeSave, mdMEntryDescriptor.eventHandlersBeforeSave) &&
        Objects.equals(this.state, mdMEntryDescriptor.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, typeQualifiedName, inlineValueSet, publishInList, uniqueIdentifierPath, publishInMap, tableColumns, editorViewName, searchIndexForEntries, schema, branchStrategy, uriConstructor, eventHandlersBeforeSave, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MDMEntryDescriptor {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    typeQualifiedName: ").append(toIndentedString(typeQualifiedName)).append("\n");
    sb.append("    inlineValueSet: ").append(toIndentedString(inlineValueSet)).append("\n");
    sb.append("    publishInList: ").append(toIndentedString(publishInList)).append("\n");
    sb.append("    uniqueIdentifierPath: ").append(toIndentedString(uniqueIdentifierPath)).append("\n");
    sb.append("    publishInMap: ").append(toIndentedString(publishInMap)).append("\n");
    sb.append("    tableColumns: ").append(toIndentedString(tableColumns)).append("\n");
    sb.append("    editorViewName: ").append(toIndentedString(editorViewName)).append("\n");
    sb.append("    searchIndexForEntries: ").append(toIndentedString(searchIndexForEntries)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    branchStrategy: ").append(toIndentedString(branchStrategy)).append("\n");
    sb.append("    uriConstructor: ").append(toIndentedString(uriConstructor)).append("\n");
    sb.append("    eventHandlersBeforeSave: ").append(toIndentedString(eventHandlersBeforeSave)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

