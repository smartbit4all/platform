/*
 * The sample domain
 * Contains object for testing purposes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.sample.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.smartbit4all.api.sample.bean.SamplePropertyContainer;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SampleStandaloneObject
 */
@JsonPropertyOrder({
  SampleStandaloneObject.URI,
  SampleStandaloneObject.FAVOURITE_NUMBER,
  SampleStandaloneObject.PROPERTY_CONTAINER
})
@JsonTypeName("SampleStandaloneObject")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SampleStandaloneObject {
  public static final String URI = "uri";
  private URI uri;

  public static final String FAVOURITE_NUMBER = "favouriteNumber";
  private Long favouriteNumber;

  public static final String PROPERTY_CONTAINER = "propertyContainer";
  private SamplePropertyContainer propertyContainer;

  public SampleStandaloneObject() { 
  }

  public SampleStandaloneObject uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public SampleStandaloneObject favouriteNumber(Long favouriteNumber) {
    
    this.favouriteNumber = favouriteNumber;
    return this;
  }

   /**
   * Get favouriteNumber
   * @return favouriteNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(FAVOURITE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getFavouriteNumber() {
    return favouriteNumber;
  }


  @JsonProperty(FAVOURITE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFavouriteNumber(Long favouriteNumber) {
    this.favouriteNumber = favouriteNumber;
  }


  public SampleStandaloneObject propertyContainer(SamplePropertyContainer propertyContainer) {
    
    this.propertyContainer = propertyContainer;
    return this;
  }

   /**
   * Get propertyContainer
   * @return propertyContainer
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SamplePropertyContainer getPropertyContainer() {
    return propertyContainer;
  }


  @JsonProperty(PROPERTY_CONTAINER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyContainer(SamplePropertyContainer propertyContainer) {
    this.propertyContainer = propertyContainer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SampleStandaloneObject sampleStandaloneObject = (SampleStandaloneObject) o;
    return Objects.equals(this.uri, sampleStandaloneObject.uri) &&
        Objects.equals(this.favouriteNumber, sampleStandaloneObject.favouriteNumber) &&
        Objects.equals(this.propertyContainer, sampleStandaloneObject.propertyContainer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, favouriteNumber, propertyContainer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SampleStandaloneObject {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    favouriteNumber: ").append(toIndentedString(favouriteNumber)).append("\n");
    sb.append("    propertyContainer: ").append(toIndentedString(propertyContainer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

