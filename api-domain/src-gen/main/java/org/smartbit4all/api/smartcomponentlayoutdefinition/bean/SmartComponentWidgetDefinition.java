/*
 * Form layout definition
 * Contains form layout definition objects.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.smartcomponentlayoutdefinition.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.smartbit4all.api.filterexpression.bean.FilterExpressionFieldList;
import org.smartbit4all.api.filterexpression.bean.SmartFilterType;
import org.smartbit4all.api.smartcomponentlayoutdefinition.bean.ComponentWidgetType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SmartComponentWidgetDefinition
 */
@JsonPropertyOrder({
  SmartComponentWidgetDefinition.TYPE,
  SmartComponentWidgetDefinition.GRID_IDENTIFIER,
  SmartComponentWidgetDefinition.FILTER_EXPRESSION_FIELD_LIST,
  SmartComponentWidgetDefinition.FILTER_TYPE
})
@JsonTypeName("SmartComponentWidgetDefinition")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SmartComponentWidgetDefinition {
  public static final String TYPE = "type";
  private ComponentWidgetType type;

  public static final String GRID_IDENTIFIER = "gridIdentifier";
  private String gridIdentifier;

  public static final String FILTER_EXPRESSION_FIELD_LIST = "filterExpressionFieldList";
  private FilterExpressionFieldList filterExpressionFieldList = null;

  public static final String FILTER_TYPE = "filterType";
  private SmartFilterType filterType = null;

  public SmartComponentWidgetDefinition() { 
  }

  public SmartComponentWidgetDefinition type(ComponentWidgetType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ComponentWidgetType getType() {
    return type;
  }


  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ComponentWidgetType type) {
    this.type = type;
  }


  public SmartComponentWidgetDefinition gridIdentifier(String gridIdentifier) {
    
    this.gridIdentifier = gridIdentifier;
    return this;
  }

   /**
   * Get gridIdentifier
   * @return gridIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(GRID_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGridIdentifier() {
    return gridIdentifier;
  }


  @JsonProperty(GRID_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGridIdentifier(String gridIdentifier) {
    this.gridIdentifier = gridIdentifier;
  }


  public SmartComponentWidgetDefinition filterExpressionFieldList(FilterExpressionFieldList filterExpressionFieldList) {
    
    this.filterExpressionFieldList = filterExpressionFieldList;
    return this;
  }

   /**
   * Get filterExpressionFieldList
   * @return filterExpressionFieldList
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(FILTER_EXPRESSION_FIELD_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterExpressionFieldList getFilterExpressionFieldList() {
    return filterExpressionFieldList;
  }


  @JsonProperty(FILTER_EXPRESSION_FIELD_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterExpressionFieldList(FilterExpressionFieldList filterExpressionFieldList) {
    this.filterExpressionFieldList = filterExpressionFieldList;
  }


  public SmartComponentWidgetDefinition filterType(SmartFilterType filterType) {
    
    this.filterType = filterType;
    return this;
  }

   /**
   * Get filterType
   * @return filterType
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SmartFilterType getFilterType() {
    return filterType;
  }


  @JsonProperty(FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterType(SmartFilterType filterType) {
    this.filterType = filterType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmartComponentWidgetDefinition smartComponentWidgetDefinition = (SmartComponentWidgetDefinition) o;
    return Objects.equals(this.type, smartComponentWidgetDefinition.type) &&
        Objects.equals(this.gridIdentifier, smartComponentWidgetDefinition.gridIdentifier) &&
        Objects.equals(this.filterExpressionFieldList, smartComponentWidgetDefinition.filterExpressionFieldList) &&
        Objects.equals(this.filterType, smartComponentWidgetDefinition.filterType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, gridIdentifier, filterExpressionFieldList, filterType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmartComponentWidgetDefinition {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    gridIdentifier: ").append(toIndentedString(gridIdentifier)).append("\n");
    sb.append("    filterExpressionFieldList: ").append(toIndentedString(filterExpressionFieldList)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

