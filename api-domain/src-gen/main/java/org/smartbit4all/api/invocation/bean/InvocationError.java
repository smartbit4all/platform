/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The error or exception can be saved into this object that occurred while executing an invocation. 
 */
@ApiModel(description = "The error or exception can be saved into this object that occurred while executing an invocation. ")
@JsonPropertyOrder({
  InvocationError.DEFINITION,
  InvocationError.MESSAGE,
  InvocationError.STACK_TRACE
})
@JsonTypeName("InvocationError")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InvocationError {
  public static final String DEFINITION = "definition";
  private String definition;

  public static final String MESSAGE = "message";
  private String message;

  public static final String STACK_TRACE = "stackTrace";
  private List<String> stackTrace = new ArrayList<>();

  public InvocationError() { 
  }

  public InvocationError definition(String definition) {
    
    this.definition = definition;
    return this;
  }

   /**
   * The error or exception typically defined in a programming language like java. The fully qualified name of this class is the definition of the error. 
   * @return definition
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "The error or exception typically defined in a programming language like java. The fully qualified name of this class is the definition of the error. ")
  @JsonProperty(DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDefinition() {
    return definition;
  }


  @JsonProperty(DEFINITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefinition(String definition) {
    this.definition = definition;
  }


  public InvocationError message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * The programmer defined message of exception that can help to identify the exact problem. 
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The programmer defined message of exception that can help to identify the exact problem. ")
  @JsonProperty(MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  @JsonProperty(MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(String message) {
    this.message = message;
  }


  public InvocationError stackTrace(List<String> stackTrace) {
    
    this.stackTrace = stackTrace;
    return this;
  }

  public InvocationError addStackTraceItem(String stackTraceItem) {
    this.stackTrace.add(stackTraceItem);
    return this;
  }

   /**
   * To be able to identify the original problem, the invocation can provide a deeper information about the exception. This ordered list contains the line of the stack trace if available. 
   * @return stackTrace
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "To be able to identify the original problem, the invocation can provide a deeper information about the exception. This ordered list contains the line of the stack trace if available. ")
  @JsonProperty(STACK_TRACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getStackTrace() {
    return stackTrace;
  }


  @JsonProperty(STACK_TRACE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStackTrace(List<String> stackTrace) {
    this.stackTrace = stackTrace;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvocationError invocationError = (InvocationError) o;
    return Objects.equals(this.definition, invocationError.definition) &&
        Objects.equals(this.message, invocationError.message) &&
        Objects.equals(this.stackTrace, invocationError.stackTrace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definition, message, stackTrace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvocationError {\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    stackTrace: ").append(toIndentedString(stackTrace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

