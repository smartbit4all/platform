/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.smartbit4all.api.invocation.bean.InvocationRequest;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This object is created when an object has any subscription to be called when the object is changed and has new version. The subscription is responsible for storing the invocation requests to be called. If the invocation results an Unsubscribe exception then the subscription is going to be removed. 
 */
@ApiModel(description = "This object is created when an object has any subscription to be called when the object is changed and has new version. The subscription is responsible for storing the invocation requests to be called. If the invocation results an Unsubscribe exception then the subscription is going to be removed. ")
@JsonPropertyOrder({
  ObjectSubscription.URI,
  ObjectSubscription.CHANNEL,
  ObjectSubscription.SUBSCRIPTIONS
})
@JsonTypeName("ObjectSubscription")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectSubscription {
  public static final String URI = "uri";
  private URI uri;

  public static final String CHANNEL = "channel";
  private String channel;

  public static final String SUBSCRIPTIONS = "subscriptions";
  private InvocationRequest subscriptions;

  public ObjectSubscription() { 
  }

  public ObjectSubscription uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public ObjectSubscription channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * The name of the channel handles the given invocation asynchronously. If it is empty then the subscription execute the invocations synchronously. 
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the channel handles the given invocation asynchronously. If it is empty then the subscription execute the invocations synchronously. ")
  @JsonProperty(CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChannel() {
    return channel;
  }


  @JsonProperty(CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannel(String channel) {
    this.channel = channel;
  }


  public ObjectSubscription subscriptions(InvocationRequest subscriptions) {
    
    this.subscriptions = subscriptions;
    return this;
  }

   /**
   * Get subscriptions
   * @return subscriptions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvocationRequest getSubscriptions() {
    return subscriptions;
  }


  @JsonProperty(SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptions(InvocationRequest subscriptions) {
    this.subscriptions = subscriptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectSubscription objectSubscription = (ObjectSubscription) o;
    return Objects.equals(this.uri, objectSubscription.uri) &&
        Objects.equals(this.channel, objectSubscription.channel) &&
        Objects.equals(this.subscriptions, objectSubscription.subscriptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, channel, subscriptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectSubscription {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

