/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.invocation.bean.InvocationRequest;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * A list of InvocationRequest that can be used for the InvocationApi functions. 
 */
@ApiModel(description = "A list of InvocationRequest that can be used for the InvocationApi functions. ")
@JsonPropertyOrder({
  InvocationBatchRequest.REQUESTS
})
@JsonTypeName("InvocationBatchRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class InvocationBatchRequest {
  public static final String REQUESTS = "requests";
  private List<InvocationRequest> requests = new ArrayList<>();

  public InvocationBatchRequest() { 
  }

  public InvocationBatchRequest requests(List<InvocationRequest> requests) {
    
    this.requests = requests;
    return this;
  }

  public InvocationBatchRequest addRequestsItem(InvocationRequest requestsItem) {
    this.requests.add(requestsItem);
    return this;
  }

   /**
   * The invocation requests included in the batch.
   * @return requests
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The invocation requests included in the batch.")
  @JsonProperty(REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<InvocationRequest> getRequests() {
    return requests;
  }


  @JsonProperty(REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequests(List<InvocationRequest> requests) {
    this.requests = requests;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvocationBatchRequest invocationBatchRequest = (InvocationBatchRequest) o;
    return Objects.equals(this.requests, invocationBatchRequest.requests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvocationBatchRequest {\n");
    sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

