/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * It contains and summarizes the list of objects objects interested in an api call. It can encapsulate the objects and the parameters of the call. This object can be saved into an object or can be initiated globally. This object can be used in many situation to save the objects that are interested in an event or an invocation call. It can be used directly as parameter for the InvocationApi to invoke... functions or event publishing also. 
 */
@ApiModel(description = "It contains and summarizes the list of objects objects interested in an api call. It can encapsulate the objects and the parameters of the call. This object can be saved into an object or can be initiated globally. This object can be used in many situation to save the objects that are interested in an event or an invocation call. It can be used directly as parameter for the InvocationApi to invoke... functions or event publishing also. ")
@JsonPropertyOrder({
  ObjectInvocationConfig.URI,
  ObjectInvocationConfig.OBJECT_URIS
})
@JsonTypeName("ObjectInvocationConfig")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ObjectInvocationConfig {
  public static final String URI = "uri";
  private URI uri;

  public static final String OBJECT_URIS = "objectUris";
  private List<URI> objectUris = new ArrayList<>();

  public ObjectInvocationConfig() { 
  }

  public ObjectInvocationConfig uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public ObjectInvocationConfig objectUris(List<URI> objectUris) {
    
    this.objectUris = objectUris;
    return this;
  }

  public ObjectInvocationConfig addObjectUrisItem(URI objectUrisItem) {
    this.objectUris.add(objectUrisItem);
    return this;
  }

   /**
   * The event codes the subscription is looking for. All these event are going to evaluated by this subsription object. 
   * @return objectUris
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The event codes the subscription is looking for. All these event are going to evaluated by this subsription object. ")
  @JsonProperty(OBJECT_URIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<URI> getObjectUris() {
    return objectUris;
  }


  @JsonProperty(OBJECT_URIS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjectUris(List<URI> objectUris) {
    this.objectUris = objectUris;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectInvocationConfig objectInvocationConfig = (ObjectInvocationConfig) o;
    return Objects.equals(this.uri, objectInvocationConfig.uri) &&
        Objects.equals(this.objectUris, objectInvocationConfig.objectUris);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, objectUris);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectInvocationConfig {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    objectUris: ").append(toIndentedString(objectUris)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

