/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * For every runtime it is the list of all the channels managed by the given runtime. The channels are managed by runtime refreshment implemented in the InvocationRegisterApi. 
 */
@ApiModel(description = "For every runtime it is the list of all the channels managed by the given runtime. The channels are managed by runtime refreshment implemented in the InvocationRegisterApi. ")
@JsonPropertyOrder({
  RuntimeAsyncChannelList.RUNTIME_URI,
  RuntimeAsyncChannelList.CHANNELS
})
@JsonTypeName("RuntimeAsyncChannelList")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RuntimeAsyncChannelList {
  public static final String RUNTIME_URI = "runtimeUri";
  private URI runtimeUri;

  public static final String CHANNELS = "channels";
  private Map<String, URI> channels = new HashMap<>();

  public RuntimeAsyncChannelList() { 
  }

  public RuntimeAsyncChannelList runtimeUri(URI runtimeUri) {
    
    this.runtimeUri = runtimeUri;
    return this;
  }

   /**
   * The URI of the appliocation runtime that is currently responsible for the givan invocation.
   * @return runtimeUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The URI of the appliocation runtime that is currently responsible for the givan invocation.")
  @JsonProperty(RUNTIME_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getRuntimeUri() {
    return runtimeUri;
  }


  @JsonProperty(RUNTIME_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuntimeUri(URI runtimeUri) {
    this.runtimeUri = runtimeUri;
  }


  public RuntimeAsyncChannelList channels(Map<String, URI> channels) {
    
    this.channels = channels;
    return this;
  }

  public RuntimeAsyncChannelList putChannelsItem(String key, URI channelsItem) {
    this.channels.put(key, channelsItem);
    return this;
  }

   /**
   * The list of the channel object uris managed by the given runtime.
   * @return channels
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The list of the channel object uris managed by the given runtime.")
  @JsonProperty(CHANNELS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, URI> getChannels() {
    return channels;
  }


  @JsonProperty(CHANNELS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChannels(Map<String, URI> channels) {
    this.channels = channels;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeAsyncChannelList runtimeAsyncChannelList = (RuntimeAsyncChannelList) o;
    return Objects.equals(this.runtimeUri, runtimeAsyncChannelList.runtimeUri) &&
        Objects.equals(this.channels, runtimeAsyncChannelList.channels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(runtimeUri, channels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeAsyncChannelList {\n");
    sb.append("    runtimeUri: ").append(toIndentedString(runtimeUri)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

