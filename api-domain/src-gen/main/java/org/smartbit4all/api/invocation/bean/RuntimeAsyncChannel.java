/*
 * invocation api
 * The invocation api is a generic possibility to call remote apis.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.invocation.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * If a runtime starts managing a given channel then this object hold all the invocation requests currently managed by the runtime. If the given runtime is stopped then the other runtimes will enqueue these lost invocation requests. 
 */
@ApiModel(description = "If a runtime starts managing a given channel then this object hold all the invocation requests currently managed by the runtime. If the given runtime is stopped then the other runtimes will enqueue these lost invocation requests. ")
@JsonPropertyOrder({
  RuntimeAsyncChannel.URI,
  RuntimeAsyncChannel.RUNTIME_URI,
  RuntimeAsyncChannel.INVOCATION_REQUESTS
})
@JsonTypeName("RuntimeAsyncChannel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RuntimeAsyncChannel {
  public static final String URI = "uri";
  private URI uri;

  public static final String RUNTIME_URI = "runtimeUri";
  private URI runtimeUri;

  public static final String INVOCATION_REQUESTS = "invocationRequests";
  private List<URI> invocationRequests = new ArrayList<>();

  public RuntimeAsyncChannel() { 
  }

  public RuntimeAsyncChannel uri(URI uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * The URI of the channel.
   * @return uri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The URI of the channel.")
  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getUri() {
    return uri;
  }


  @JsonProperty(URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(URI uri) {
    this.uri = uri;
  }


  public RuntimeAsyncChannel runtimeUri(URI runtimeUri) {
    
    this.runtimeUri = runtimeUri;
    return this;
  }

   /**
   * The URI of the appliocation runtime that is currently responsible for the givan invocation.
   * @return runtimeUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The URI of the appliocation runtime that is currently responsible for the givan invocation.")
  @JsonProperty(RUNTIME_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getRuntimeUri() {
    return runtimeUri;
  }


  @JsonProperty(RUNTIME_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRuntimeUri(URI runtimeUri) {
    this.runtimeUri = runtimeUri;
  }


  public RuntimeAsyncChannel invocationRequests(List<URI> invocationRequests) {
    
    this.invocationRequests = invocationRequests;
    return this;
  }

  public RuntimeAsyncChannel addInvocationRequestsItem(URI invocationRequestsItem) {
    this.invocationRequests.add(invocationRequestsItem);
    return this;
  }

   /**
   * The uri list of the AsyncInvocationRequests that are currently managed by the given runtime.
   * @return invocationRequests
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The uri list of the AsyncInvocationRequests that are currently managed by the given runtime.")
  @JsonProperty(INVOCATION_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<URI> getInvocationRequests() {
    return invocationRequests;
  }


  @JsonProperty(INVOCATION_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInvocationRequests(List<URI> invocationRequests) {
    this.invocationRequests = invocationRequests;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeAsyncChannel runtimeAsyncChannel = (RuntimeAsyncChannel) o;
    return Objects.equals(this.uri, runtimeAsyncChannel.uri) &&
        Objects.equals(this.runtimeUri, runtimeAsyncChannel.runtimeUri) &&
        Objects.equals(this.invocationRequests, runtimeAsyncChannel.invocationRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, runtimeUri, invocationRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeAsyncChannel {\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    runtimeUri: ").append(toIndentedString(runtimeUri)).append("\n");
    sb.append("    invocationRequests: ").append(toIndentedString(invocationRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

