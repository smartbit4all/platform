/*
 * Attachment api
 * The attachment api domain is strictly manages the BinaryContentData objects. They are responsible for a simple file with file name, location (represented by a dataUri) and a locationKind. The location defines the api that responsible for accessing the given content. It can be the storage inline but also any other document management system.  
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.api.attachment.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.smartbit4all.api.session.bean.UserActivityLog;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The binary content data represent a file with file name and other properties like size, mimetype and hash also. This can be used as contained inline object to have reference to a file (the dataUri) at a given location managed by the location handler api. 
 */
@ApiModel(description = "The binary content data represent a file with file name and other properties like size, mimetype and hash also. This can be used as contained inline object to have reference to a file (the dataUri) at a given location managed by the location handler api. ")
@JsonPropertyOrder({
  BinaryContentData.LOCATION,
  BinaryContentData.DATA_URI,
  BinaryContentData.FILE_NAME,
  BinaryContentData.CREATED,
  BinaryContentData.UPDATED,
  BinaryContentData.MIME_TYPE,
  BinaryContentData.EXTENSION,
  BinaryContentData.SIZE,
  BinaryContentData.CONTENT_HASH,
  BinaryContentData.FOLDER_URI
})
@JsonTypeName("BinaryContentData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BinaryContentData {
  public static final String LOCATION = "location";
  private String location;

  public static final String DATA_URI = "dataUri";
  private URI dataUri;

  public static final String FILE_NAME = "fileName";
  private String fileName;

  public static final String CREATED = "created";
  private UserActivityLog created = null;

  public static final String UPDATED = "updated";
  private UserActivityLog updated = null;

  public static final String MIME_TYPE = "mimeType";
  private String mimeType;

  public static final String EXTENSION = "extension";
  private String extension;

  public static final String SIZE = "size";
  private Long size;

  public static final String CONTENT_HASH = "contentHash";
  private String contentHash;

  public static final String FOLDER_URI = "folderUri";
  private URI folderUri;

  public BinaryContentData() { 
  }

  public BinaryContentData location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * The location is a type that can be managed by different APIs to access the given content.
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The location is a type that can be managed by different APIs to access the given content.")
  @JsonProperty(LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocation() {
    return location;
  }


  @JsonProperty(LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(String location) {
    this.location = location;
  }


  public BinaryContentData dataUri(URI dataUri) {
    
    this.dataUri = dataUri;
    return this;
  }

   /**
   * Get dataUri
   * @return dataUri
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(DATA_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getDataUri() {
    return dataUri;
  }


  @JsonProperty(DATA_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataUri(URI dataUri) {
    this.dataUri = dataUri;
  }


  public BinaryContentData fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @javax.annotation.Nonnull
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public BinaryContentData created(UserActivityLog created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserActivityLog getCreated() {
    return created;
  }


  @JsonProperty(CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(UserActivityLog created) {
    this.created = created;
  }


  public BinaryContentData updated(UserActivityLog updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserActivityLog getUpdated() {
    return updated;
  }


  @JsonProperty(UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdated(UserActivityLog updated) {
    this.updated = updated;
  }


  public BinaryContentData mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public BinaryContentData extension(String extension) {
    
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExtension() {
    return extension;
  }


  @JsonProperty(EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtension(String extension) {
    this.extension = extension;
  }


  public BinaryContentData size(Long size) {
    
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getSize() {
    return size;
  }


  @JsonProperty(SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(Long size) {
    this.size = size;
  }


  public BinaryContentData contentHash(String contentHash) {
    
    this.contentHash = contentHash;
    return this;
  }

   /**
   * Get contentHash
   * @return contentHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CONTENT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContentHash() {
    return contentHash;
  }


  @JsonProperty(CONTENT_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentHash(String contentHash) {
    this.contentHash = contentHash;
  }


  public BinaryContentData folderUri(URI folderUri) {
    
    this.folderUri = folderUri;
    return this;
  }

   /**
   * Get folderUri
   * @return folderUri
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(FOLDER_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getFolderUri() {
    return folderUri;
  }


  @JsonProperty(FOLDER_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolderUri(URI folderUri) {
    this.folderUri = folderUri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinaryContentData binaryContentData = (BinaryContentData) o;
    return Objects.equals(this.location, binaryContentData.location) &&
        Objects.equals(this.dataUri, binaryContentData.dataUri) &&
        Objects.equals(this.fileName, binaryContentData.fileName) &&
        Objects.equals(this.created, binaryContentData.created) &&
        Objects.equals(this.updated, binaryContentData.updated) &&
        Objects.equals(this.mimeType, binaryContentData.mimeType) &&
        Objects.equals(this.extension, binaryContentData.extension) &&
        Objects.equals(this.size, binaryContentData.size) &&
        Objects.equals(this.contentHash, binaryContentData.contentHash) &&
        Objects.equals(this.folderUri, binaryContentData.folderUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, dataUri, fileName, created, updated, mimeType, extension, size, contentHash, folderUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinaryContentData {\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    dataUri: ").append(toIndentedString(dataUri)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    contentHash: ").append(toIndentedString(contentHash)).append("\n");
    sb.append("    folderUri: ").append(toIndentedString(folderUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

