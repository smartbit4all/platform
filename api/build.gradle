plugins {
	id "org.openapi.generator" version "4.3.1"
}

dependencies {
	api project(':types')
	
	// its needed for the openApi spring codegen
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
    implementation 'io.swagger:swagger-annotations:1.5.22'
    implementation 'javax.validation:validation-api:2.0.1.Final'
}

ext {
	srcGenMainJava = "src-gen/main/java"
}

sourceSets {
   generated{
   		java.srcDir srcGenMainJava
    }
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/api/src/main/resources/descriptors/query-api.yaml".toString()
    outputDir = "${projectDir}/${srcGenMainJava}" 
    modelPackage = "org.smartbit4all.api.query.bean"
    systemProperties = [
    	models: "", // with this only the model files (the beans) will be generated
    	//apis: ""
    ]
    configOptions = [
        dateLibrary: "java8",
        unhandledException: 'true',
        hideGenerationTimestamp: 'true',
        useTags: 'true',
        sourceFolder: '', // without this the generatum is placed under 'src/main/java'
        interfaceOnly: 'true'
    ]
}

/*
openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/api/src/main/resources/descriptors/navigation-api.yaml".toString()
    outputDir = "${projectDir}/${srcGenMainJava}" 
    modelPackage = "org.smartbit4all.api.navigation.bean"
    systemProperties = [
    	models: "", // with this only the model files (the beans) will be generated
    	//apis: ""
    ]
    configOptions = [
        dateLibrary: "java8",
        unhandledException: 'true',
        hideGenerationTimestamp: 'true',
        useTags: 'true',
        sourceFolder: '', // without this the generatum is placed under 'src/main/java'
        interfaceOnly: 'true'
    ]
}*/

compileJava {
//	dependsOn(openApiGenerate)
    source    += sourceSets.generated.java
}

task deleteGenFolder(type: Delete) {
	delete "${srcGenMainJava}"
}