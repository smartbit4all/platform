openapi: 3.0.1
info:
  title: Dynamic Filter UI API
  description: Dynamic Filter UI API
  termsOfService: ''
  contact:
    email: info@it4all.hu
  version: 1.0.0
tags:
  - name: dynamic-filter
    description: Dynamic filter
paths:
  /nope:
    post:
      summary: Placeholder for generation
      responses:
        '200':
          description: nope
components:
  schemas:
    DynamicFilterConfigMode:
      type: string
      enum: [static, simple_dynamic, dynamic, research]
    DynamicFilterConfig:
      type: object
      properties:
        dynamicFilterMetas:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFilterMeta'
        dynamicFilterGroupMetas:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFilterGroupMeta'
        defaultFilterStyle:
          type: string
        defaultFilterGroupStyle:
          type: string
    DynamicFilterMeta:
      type: object
      description: "Descriptor of a possible filter field. This field doesn't have to correspond to an existing entity's property, it is simple a way of filtering."
      properties:
        name:
          type: string
          description: 'Name of the filterable field.'
        groupName:
          type: string
        style:
          type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFilterOperation'
    DynamicFilterGroupMeta:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        style:
          type: string
        type:
          $ref: '#/components/schemas/DynamicFilterGroupType'
    DynamicFilterOperation:
      type: object
      description: 'Defines a possible way of using a filter field. For example: exact match, like, sounds like, interval, etc.'
      properties:
        filterView:
          type: string
          description: 'Declarative name of a DynamicFilterOperationUI, which will handle this operation.'
        field1:
          type: string
        field2:
          type: string
        possibleValues:
          type: string
          format: uri
        code:
          type: string
        displayValue:
          type: string
        icon:
          type: string
    DynamicFilterGroupType:
      type: string
      enum: [
          AND, OR
        ]
    DynamicFilterGroup:
      type: object
      description: 'AND / OR group of filters / groups.'
      properties:
        name:
          type: string
          description: Name of the group.
        icon:
          type: string
        metaName:
          type: string
          description: Name of the referenced DynamicFilterGroupMeta, if this group is created from any. 
        type:
          $ref: '#/components/schemas/DynamicFilterGroupType'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFilter'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFilterGroup'
        isNegated:
          type: boolean
        isExpanded:
          type: boolean
    DynamicFilter:
      type: object
      properties:
        metaName:
          type: string
          description: Name of the referenced DynamicFilterMeta.
        operation:
          $ref: '#/components/schemas/DynamicFilterOperation'
        value1:
          type: string
        value2:
          type: string
        selectedValues:
          type: array
          items:
            type: string
            #$ref: 'value-api.yaml#/components/schemas/Value'
        included:
          type: boolean
        editable:
          type: boolean