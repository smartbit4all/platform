{"version":3,"file":"smartbit4all-smart-toolbar.mjs","sources":["../../../projects/smart-toolbar/src/lib/smart-toolbar.model.ts","../../../projects/smart-toolbar/src/lib/smart-toolbar.component.ts","../../../projects/smart-toolbar/src/lib/smart-toolbar.component.html","../../../projects/smart-toolbar/src/lib/smart-toolbar.module.ts","../../../projects/smart-toolbar/src/projects.ts","../../../projects/smart-toolbar/src/smartbit4all-smart-toolbar.ts"],"sourcesContent":["export interface SmartToolbarButton {\r\n    label: string;\r\n    icon?: string;\r\n    btnAction: Command;\r\n    style: ToolbarButtonStyle;\r\n    color?: ToolbarButtonColor;\r\n    disabled: boolean;\r\n    rounded?: boolean;\r\n}\r\n\r\nexport interface SmartToolbar {\r\n    direction?: ToolbarDirection;\r\n    buttons: SmartToolbarButton[];\r\n}\r\n\r\nexport enum ToolbarDirection {\r\n    COL,\r\n    ROW,\r\n}\r\n\r\nexport interface CommandParameter {\r\n    objectUri?: string;\r\n    url: string;\r\n}\r\n\r\nexport interface Command {\r\n    parameter?: CommandParameter;\r\n    execute: (args?: any[]) => void;\r\n}\r\n\r\nexport enum ToolbarButtonStyle {\r\n    MAT_RAISED_BUTTON = \"MAT_RAISED_BUTTON\",\r\n    MAT_BUTTON = \"MAT_BUTTON\",\r\n    MAT_STROKED_BUTTON = \"MAT_STROKED_BUTTON\",\r\n    MAT_FLAT_BUTTON = \"MAT_FLAT_BUTTON\",\r\n    MAT_ICON_BUTTON = \"MAT_ICON_BUTTON\",\r\n    MAT_FAB = \"MAT_FAB\",\r\n    MAT_MINI_FAB = \"MAT_MINI_FAB\"\r\n}\r\n\r\nexport enum ToolbarButtonColor {\r\n    PRIMARY = \"primary\",\r\n    ACCENT = \"accent\",\r\n    WARN = \"warn\",\r\n}","import {\r\n    Component,\r\n    Input,\r\n    OnInit\r\n} from \"@angular/core\";\r\nimport { SmartToolbar, ToolbarButtonStyle, ToolbarDirection } from \"./smart-toolbar.model\";\r\n\r\n@Component({\r\n    selector: \"smart-toolbar\",\r\n    templateUrl: \"./smart-toolbar.component.html\",\r\n    styleUrls: [\"./smart-toolbar.component.css\"],\r\n})\r\nexport class SmartToolbarComponent implements OnInit {\r\n    @Input() toolbar!: SmartToolbar;\r\n    toolbarDirection = ToolbarDirection;\r\n    ToolbarButtonStyle = ToolbarButtonStyle;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","<div\n  class=\"button-container\"\n  [ngClass]=\"toolbar.direction === toolbarDirection.ROW ? 'row' : 'col'\"\n>\n  <div *ngFor=\"let button of toolbar.buttons\">\n    <!-- MAT RAISED BUTTON -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_RAISED_BUTTON\"\n      mat-raised-button\n      [ngClass]=\"{ 'btn-round': button.rounded }\"\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      {{ button.label }} <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n    <!-- MAT BUTTON -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_BUTTON\"\n      mat-button\n      [ngClass]=\"{ 'btn-round': button.rounded }\"\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      {{ button.label }} <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n\n    <!-- MAT STROKED BUTTON -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_STROKED_BUTTON\"\n      mat-stroked-button\n      [ngClass]=\"{ 'btn-round': button.rounded }\"\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      {{ button.label }} <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n\n    <!-- MAT FLAT BUTTON -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_FLAT_BUTTON\"\n      mat-flat-button\n      [ngClass]=\"{ 'btn-round': button.rounded }\"\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      {{ button.label }} <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n\n    <!-- MAT ICON BUTTON -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_ICON_BUTTON\"\n      mat-icon-button\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n\n    <!-- MAT FAB -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_FAB\"\n      mat-fab\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n\n    <!-- MAT MINI FAB -->\n    <button\n      *ngIf=\"button.style === ToolbarButtonStyle.MAT_MINI_FAB\"\n      mat-mini-fab\n      color=\"{{ button.color }}\"\n      [disabled]=\"button.disabled\"\n      (click)=\"button.btnAction.execute()\"\n    >\n      <mat-icon>{{ button.icon }}</mat-icon>\n    </button>\n  </div>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { SmartToolbarComponent } from './smart-toolbar.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SmartToolbarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    MatButtonModule,\r\n    MatIconModule\r\n  ],\r\n  exports: [\r\n    SmartToolbarComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SmartToolbarModule { }\r\n","/*\n * Public API Surface of smart-toolbar\n */\n\nexport * from './lib/smart-toolbar.component';\nexport * from './lib/smart-toolbar.module';\nexport * from './lib/smart-toolbar.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './projects';\n"],"names":[],"mappings":"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"}
