import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/material/tabs";
import * as i3 from "@angular/common";
export class TabGroupComponent {
    constructor(router) {
        this.router = router;
        this.selectedTabIndex = 0;
    }
    ngOnInit() {
        this.getTabIndex();
    }
    navigateTabContent($event) {
        this.router.navigate([this.actualPath, this.tabTiles[$event.index].url], {
            queryParamsHandling: "preserve",
        });
    }
    getTabIndex() {
        const url = this.router.url.split("?")[0];
        this.selectedTabIndex = this.tabTiles.findIndex((t) => {
            return url.includes(t.url);
        });
    }
}
TabGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: TabGroupComponent, deps: [{ token: i1.Router }], target: i0.ɵɵFactoryTarget.Component });
TabGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: TabGroupComponent, selector: "smart-tab-group", inputs: { tabTiles: "tabTiles", actualPath: "actualPath" }, ngImport: i0, template: "<div class=\"sm-tab-group-container\">\n\t<mat-tab-group\n\t\tclass=\"sm-tab-group\"\n\t\t(selectedTabChange)=\"navigateTabContent($event)\"\n\t\t[(selectedIndex)]=\"selectedTabIndex\"\n\t>\n\t\t<mat-tab\n\t\t\tclass=\"sm-tab\"\n\t\t\tappearance=\"outline\"\n\t\t\t*ngFor=\"let tabTile of tabTiles\"\n\t\t\tlabel=\"{{ tabTile.tileName }}\"\n\t\t>\n\t\t</mat-tab>\n\t</mat-tab-group>\n\t<div class=\"sm-tab-content-container\">\n\t\t<ng-content></ng-content>\n\t</div>\n</div>\n", styles: [".sm-tab-group-container{margin:50px}.sm-tab-group ::ng-deep .mat-tab-label{background-color:#f9fafb;margin-left:10px;border-radius:10px;opacity:100!important}.mat-tab-body-content{border-radius:10px}.mat-tab-nav-bar,.mat-tab-header{border-bottom:0}.tab-content-container{padding:2em;border:1px solid #e6e6e6;box-shadow:0 4px 8px -4px #1a1a1a33;border-radius:4px;background-color:#fff}.mat-tab-label-active{background-color:#00a8da!important;opacity:1!important}\n"], components: [{ type: i2.MatTabGroup, selector: "mat-tab-group", inputs: ["color", "disableRipple"], exportAs: ["matTabGroup"] }, { type: i2.MatTab, selector: "mat-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby", "labelClass", "bodyClass"], exportAs: ["matTab"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: TabGroupComponent, decorators: [{
            type: Component,
            args: [{ selector: "smart-tab-group", template: "<div class=\"sm-tab-group-container\">\n\t<mat-tab-group\n\t\tclass=\"sm-tab-group\"\n\t\t(selectedTabChange)=\"navigateTabContent($event)\"\n\t\t[(selectedIndex)]=\"selectedTabIndex\"\n\t>\n\t\t<mat-tab\n\t\t\tclass=\"sm-tab\"\n\t\t\tappearance=\"outline\"\n\t\t\t*ngFor=\"let tabTile of tabTiles\"\n\t\t\tlabel=\"{{ tabTile.tileName }}\"\n\t\t>\n\t\t</mat-tab>\n\t</mat-tab-group>\n\t<div class=\"sm-tab-content-container\">\n\t\t<ng-content></ng-content>\n\t</div>\n</div>\n", styles: [".sm-tab-group-container{margin:50px}.sm-tab-group ::ng-deep .mat-tab-label{background-color:#f9fafb;margin-left:10px;border-radius:10px;opacity:100!important}.mat-tab-body-content{border-radius:10px}.mat-tab-nav-bar,.mat-tab-header{border-bottom:0}.tab-content-container{padding:2em;border:1px solid #e6e6e6;box-shadow:0 4px 8px -4px #1a1a1a33;border-radius:4px;background-color:#fff}.mat-tab-label-active{background-color:#00a8da!important;opacity:1!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Router }]; }, propDecorators: { tabTiles: [{
                type: Input
            }], actualPath: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnQtdGFiLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3NtYXJ0LXRhYi1ncm91cC9zcmMvbGliL3NtYXJ0LXRhYi1ncm91cC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zbWFydC10YWItZ3JvdXAvc3JjL2xpYi9zbWFydC10YWItZ3JvdXAuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBU3pELE1BQU0sT0FBTyxpQkFBaUI7SUFLMUIsWUFBb0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7UUFGbEMscUJBQWdCLEdBQVcsQ0FBQyxDQUFDO0lBRVEsQ0FBQztJQUV0QyxRQUFRO1FBQ0osSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxNQUFXO1FBQzFCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNyRSxtQkFBbUIsRUFBRSxVQUFVO1NBQ2xDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxXQUFXO1FBQ1AsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1lBQ2xELE9BQU8sR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDOzs4R0F0QlEsaUJBQWlCO2tHQUFqQixpQkFBaUIsbUhDVDlCLCtkQWtCQTsyRkRUYSxpQkFBaUI7a0JBTDdCLFNBQVM7K0JBQ0ksaUJBQWlCOzZGQUtsQixRQUFRO3NCQUFoQixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgVGFiVGlsZSB9IGZyb20gXCIuL3RhYlRpbGUubW9kZWxcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6IFwic21hcnQtdGFiLWdyb3VwXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9zbWFydC10YWItZ3JvdXAuY29tcG9uZW50Lmh0bWxcIixcbiAgICBzdHlsZVVybHM6IFtcIi4vc21hcnQtdGFiLWdyb3VwLmNvbXBvbmVudC5jc3NcIl0sXG59KVxuZXhwb3J0IGNsYXNzIFRhYkdyb3VwQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKSB0YWJUaWxlcyE6IFRhYlRpbGVbXTtcbiAgICBASW5wdXQoKSBhY3R1YWxQYXRoITogc3RyaW5nO1xuICAgIHNlbGVjdGVkVGFiSW5kZXg6IG51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJvdXRlcjogUm91dGVyKSB7fVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZ2V0VGFiSW5kZXgoKTtcbiAgICB9XG5cbiAgICBuYXZpZ2F0ZVRhYkNvbnRlbnQoJGV2ZW50OiBhbnkpIHtcbiAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW3RoaXMuYWN0dWFsUGF0aCwgdGhpcy50YWJUaWxlc1skZXZlbnQuaW5kZXhdLnVybF0sIHtcbiAgICAgICAgICAgIHF1ZXJ5UGFyYW1zSGFuZGxpbmc6IFwicHJlc2VydmVcIixcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0VGFiSW5kZXgoKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IHRoaXMucm91dGVyLnVybC5zcGxpdChcIj9cIilbMF07XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRUYWJJbmRleCA9IHRoaXMudGFiVGlsZXMuZmluZEluZGV4KCh0KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdXJsLmluY2x1ZGVzKHQudXJsKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInNtLXRhYi1ncm91cC1jb250YWluZXJcIj5cblx0PG1hdC10YWItZ3JvdXBcblx0XHRjbGFzcz1cInNtLXRhYi1ncm91cFwiXG5cdFx0KHNlbGVjdGVkVGFiQ2hhbmdlKT1cIm5hdmlnYXRlVGFiQ29udGVudCgkZXZlbnQpXCJcblx0XHRbKHNlbGVjdGVkSW5kZXgpXT1cInNlbGVjdGVkVGFiSW5kZXhcIlxuXHQ+XG5cdFx0PG1hdC10YWJcblx0XHRcdGNsYXNzPVwic20tdGFiXCJcblx0XHRcdGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcblx0XHRcdCpuZ0Zvcj1cImxldCB0YWJUaWxlIG9mIHRhYlRpbGVzXCJcblx0XHRcdGxhYmVsPVwie3sgdGFiVGlsZS50aWxlTmFtZSB9fVwiXG5cdFx0PlxuXHRcdDwvbWF0LXRhYj5cblx0PC9tYXQtdGFiLWdyb3VwPlxuXHQ8ZGl2IGNsYXNzPVwic20tdGFiLWNvbnRlbnQtY29udGFpbmVyXCI+XG5cdFx0PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXHQ8L2Rpdj5cbjwvZGl2PlxuIl19