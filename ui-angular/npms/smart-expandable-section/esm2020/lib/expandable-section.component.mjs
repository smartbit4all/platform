import { Component, Input, ViewChild, ViewContainerRef, ViewEncapsulation, } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@smartbit4all/component-factory-service";
import * as i2 from "@angular/material/expansion";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/common";
export class ExpandableSectionComponent {
    constructor(cfService) {
        this.cfService = cfService;
    }
    ngOnInit() { }
    ngAfterViewInit() {
        this.cfService.createComponent(this.vcRef, this.data.customComponent, new Map([[this.data.inputName ?? "", this.data.data]]));
    }
    action(button, event) {
        event.stopPropagation();
        button.onClick();
    }
}
ExpandableSectionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ExpandableSectionComponent, deps: [{ token: i1.ComponentFactoryService }], target: i0.ɵɵFactoryTarget.Component });
ExpandableSectionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: ExpandableSectionComponent, selector: "smart-expandable-section", inputs: { data: "data" }, viewQueries: [{ propertyName: "vcRef", first: true, predicate: ["renderComponent"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<div class=\"section-container\">\r\n  <mat-expansion-panel (opened)=\"(true)\" (closed)=\"(false)\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> {{ data.title }} </mat-panel-title>\r\n      <div class=\"btn-container\" *ngIf=\"data.button\">\r\n        <button\r\n          class=\"btn\"\r\n          (click)=\"action(data.button, $event)\"\r\n          mat-stroked-button\r\n        >\r\n          {{ data.button.label }}\r\n          <mat-icon>{{ data.button.icon }}</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-expansion-panel-header>\r\n    <ng-template #renderComponent></ng-template>\r\n  </mat-expansion-panel>\r\n</div>\r\n", styles: [".section-container{margin-bottom:50px}.mat-expansion-panel-header{background:var(--primary-lighter-color)!important}.mat-expansion-panel-header-title{color:var(--primary-color)}.btn-container{margin:1em 3em 1em 1em}.btn{border-radius:24px}\n"], components: [{ type: i2.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { type: i2.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }, { type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }], directives: [{ type: i2.MatExpansionPanelTitle, selector: "mat-panel-title" }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ExpandableSectionComponent, decorators: [{
            type: Component,
            args: [{ selector: "smart-expandable-section", encapsulation: ViewEncapsulation.None, template: "<div class=\"section-container\">\r\n  <mat-expansion-panel (opened)=\"(true)\" (closed)=\"(false)\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title> {{ data.title }} </mat-panel-title>\r\n      <div class=\"btn-container\" *ngIf=\"data.button\">\r\n        <button\r\n          class=\"btn\"\r\n          (click)=\"action(data.button, $event)\"\r\n          mat-stroked-button\r\n        >\r\n          {{ data.button.label }}\r\n          <mat-icon>{{ data.button.icon }}</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-expansion-panel-header>\r\n    <ng-template #renderComponent></ng-template>\r\n  </mat-expansion-panel>\r\n</div>\r\n", styles: [".section-container{margin-bottom:50px}.mat-expansion-panel-header{background:var(--primary-lighter-color)!important}.mat-expansion-panel-header-title{color:var(--primary-color)}.btn-container{margin:1em 3em 1em 1em}.btn{border-radius:24px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ComponentFactoryService }]; }, propDecorators: { data: [{
                type: Input
            }], vcRef: [{
                type: ViewChild,
                args: ["renderComponent", { read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kYWJsZS1zZWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3NtYXJ0LWV4cGFuZGFibGUtc2VjdGlvbi9zcmMvbGliL2V4cGFuZGFibGUtc2VjdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zbWFydC1leHBhbmRhYmxlLXNlY3Rpb24vc3JjL2xpYi9leHBhbmRhYmxlLXNlY3Rpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxLQUFLLEVBRUwsU0FBUyxFQUNULGdCQUFnQixFQUNoQixpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7QUFVdkIsTUFBTSxPQUFPLDBCQUEwQjtJQU1uQyxZQUFvQixTQUFrQztRQUFsQyxjQUFTLEdBQVQsU0FBUyxDQUF5QjtJQUFJLENBQUM7SUFFM0QsUUFBUSxLQUFXLENBQUM7SUFFcEIsZUFBZTtRQUNYLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUMxQixJQUFJLENBQUMsS0FBTSxFQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUN6QixJQUFJLEdBQUcsQ0FBYyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUN0RSxDQUFDO0lBQ04sQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUErQixFQUFFLEtBQVU7UUFDOUMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyQixDQUFDOzt1SEFyQlEsMEJBQTBCOzJHQUExQiwwQkFBMEIsK0tBR0csZ0JBQWdCLDZCQ3BCMUQsNnBCQWtCQTsyRkREYSwwQkFBMEI7a0JBTnRDLFNBQVM7K0JBQ0ksMEJBQTBCLGlCQUdyQixpQkFBaUIsQ0FBQyxJQUFJOzhHQUc1QixJQUFJO3NCQUFaLEtBQUs7Z0JBR04sS0FBSztzQkFESixTQUFTO3VCQUFDLGlCQUFpQixFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICAgIENvbXBvbmVudCxcclxuICAgIElucHV0LFxyXG4gICAgT25Jbml0LFxyXG4gICAgVmlld0NoaWxkLFxyXG4gICAgVmlld0NvbnRhaW5lclJlZixcclxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IENvbXBvbmVudEZhY3RvcnlTZXJ2aWNlIH0gZnJvbSBcIkBzbWFydGJpdDRhbGwvY29tcG9uZW50LWZhY3Rvcnktc2VydmljZVwiO1xyXG5pbXBvcnQgeyBFeHBhbmRhYmxlU2VjdGlvbiwgRXhwYW5kYWJsZVNlY3Rpb25CdXR0b24gfSBmcm9tIFwiLi9leHBhbmRhYmxlLXNlY3Rpb24ubW9kZWxcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwic21hcnQtZXhwYW5kYWJsZS1zZWN0aW9uXCIsXHJcbiAgICB0ZW1wbGF0ZVVybDogXCIuL2V4cGFuZGFibGUtc2VjdGlvbi5jb21wb25lbnQuaHRtbFwiLFxyXG4gICAgc3R5bGVVcmxzOiBbXCIuL2V4cGFuZGFibGUtc2VjdGlvbi5jb21wb25lbnQuY3NzXCJdLFxyXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcclxufSlcclxuZXhwb3J0IGNsYXNzIEV4cGFuZGFibGVTZWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBJbnB1dCgpIGRhdGEhOiBFeHBhbmRhYmxlU2VjdGlvbjxhbnk+O1xyXG5cclxuICAgIEBWaWV3Q2hpbGQoXCJyZW5kZXJDb21wb25lbnRcIiwgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pXHJcbiAgICB2Y1JlZj86IFZpZXdDb250YWluZXJSZWY7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBjZlNlcnZpY2U6IENvbXBvbmVudEZhY3RvcnlTZXJ2aWNlKSB7IH1cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHsgfVxyXG5cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgICAgICB0aGlzLmNmU2VydmljZS5jcmVhdGVDb21wb25lbnQoXHJcbiAgICAgICAgICAgIHRoaXMudmNSZWYhLFxyXG4gICAgICAgICAgICB0aGlzLmRhdGEuY3VzdG9tQ29tcG9uZW50LFxyXG4gICAgICAgICAgICBuZXcgTWFwPHN0cmluZywgYW55PihbW3RoaXMuZGF0YS5pbnB1dE5hbWUgPz8gXCJcIiwgdGhpcy5kYXRhLmRhdGFdXSlcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGFjdGlvbihidXR0b246IEV4cGFuZGFibGVTZWN0aW9uQnV0dG9uLCBldmVudDogYW55KSB7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgYnV0dG9uLm9uQ2xpY2soKTtcclxuICAgIH1cclxufVxyXG4iLCI8ZGl2IGNsYXNzPVwic2VjdGlvbi1jb250YWluZXJcIj5cclxuICA8bWF0LWV4cGFuc2lvbi1wYW5lbCAob3BlbmVkKT1cIih0cnVlKVwiIChjbG9zZWQpPVwiKGZhbHNlKVwiPlxyXG4gICAgPG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyPlxyXG4gICAgICA8bWF0LXBhbmVsLXRpdGxlPiB7eyBkYXRhLnRpdGxlIH19IDwvbWF0LXBhbmVsLXRpdGxlPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiYnRuLWNvbnRhaW5lclwiICpuZ0lmPVwiZGF0YS5idXR0b25cIj5cclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICBjbGFzcz1cImJ0blwiXHJcbiAgICAgICAgICAoY2xpY2spPVwiYWN0aW9uKGRhdGEuYnV0dG9uLCAkZXZlbnQpXCJcclxuICAgICAgICAgIG1hdC1zdHJva2VkLWJ1dHRvblxyXG4gICAgICAgID5cclxuICAgICAgICAgIHt7IGRhdGEuYnV0dG9uLmxhYmVsIH19XHJcbiAgICAgICAgICA8bWF0LWljb24+e3sgZGF0YS5idXR0b24uaWNvbiB9fTwvbWF0LWljb24+XHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cclxuICAgIDxuZy10ZW1wbGF0ZSAjcmVuZGVyQ29tcG9uZW50PjwvbmctdGVtcGxhdGU+XHJcbiAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsPlxyXG48L2Rpdj5cclxuIl19