import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/icon";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/common";
export class SmartfileuploaderComponent {
    constructor() {
        this.files = [];
        this.fileFormats = [];
        this.i18n = {
            addFile: 'dokumentum hozzáadása',
            browseOrDrag: 'tallózás vagy behúzás',
            maxSize: 'max. 25 MB',
            formats: 'PDF, docx, xls formátum'
        };
    }
    ngOnInit() {
        console.log(this.fileFormats);
    }
    getFile(event) {
        if (event.target.files && event.target.files.length) {
            this.files = [...this.files, ...event.target.files];
        }
    }
    remove(index) {
        this.files.splice(index, 1);
    }
    uploadFile() {
        this.uploadCallback(this.files);
    }
}
SmartfileuploaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmartfileuploaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SmartfileuploaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: SmartfileuploaderComponent, selector: "smartfileuploader", inputs: { uploadCallback: "uploadCallback", fileFormats: "fileFormats", i18n: "i18n" }, ngImport: i0, template: "<div class=\"container\">\n    <div class=\"fileContainer\">\n        <div class=\"fileInnerContainer\">\n            <input\n                id=\"addFile\"\n                placeholder=\"fileInput\"\n                type=\"file\"\n                (change)=\"getFile($event)\"\n                class=\"file\"\n                accept=\"{{ fileFormats.join(', ') }}\"\n                multiple\n            />\n            <div class=\"fileUploadContentContainer\">\n                <mat-label class=\"addFileButton\">\n                    <mat-icon color=\"primary\" class=\"addCircle\">add_circle</mat-icon>\n                </mat-label>\n                <mat-label class=\"label primary\"> {{ i18n.addFile }} </mat-label>\n                <mat-label class=\"label secondary\"> {{ i18n.browseOrDrag }} </mat-label>\n                <mat-label class=\"subLabel primary\"> {{ i18n.maxSize }} </mat-label>\n                <mat-label class=\"subLabel primary\"> {{ i18n.formats }} </mat-label>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"files.length\" class=\"uploadedFilesContainer\">\n        <div *ngFor=\"let file of files; let i = index\" class=\"uploadedFile\">\n            <mat-label class=\"fileNameLabel\"> {{ file.name }} </mat-label>\n            <button mat-icon-button (click)=\"remove(i)\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <button class=\"uploadButton\" mat-raised-button color=\"primary\" (click)=\"uploadFile()\">\n            Felt\u00F6lt\u00E9s\n        </button>\n    </div>\n</div>\n", styles: [".container{width:100%;height:max-content;margin:1em;border-radius:5px;border:2px dashed var(--light-gray-60)}.fileContainer,.uploadedFilesContainer{background-color:var(--primary-lighter-color)}.fileInnerContainer{min-height:250px}.uploadedFilesContainer{border-top:1px solid var(--light-gray-60);display:flex;flex-direction:column}.fileContainer{position:relative;height:250px}.uploadedFile{padding:1em;display:flex;flex-direction:row;color:var(--primary-color)}.fileNameLabel{flex:1;margin-top:auto;margin-bottom:auto}.label{font-size:small}.subLabel{font-size:smaller}.file{position:absolute;left:0;top:0;opacity:0;width:100%;height:100%;z-index:120;cursor:pointer}.addFileButton{z-index:150;cursor:pointer}.addCircle{font-size:50px;width:50px;height:50px}.fileUploadContentContainer{position:absolute;top:50%;left:0;transform:translateY(-50%);width:100%;display:flex;flex-direction:column;text-align:center}.fileUploadContentContainer .secondary{margin-bottom:1em}.inputLabel{flex:1}.uploadButton{margin-left:auto;margin-right:auto;margin-bottom:.5em}\n"], components: [{ type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i3.MatLabel, selector: "mat-label" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmartfileuploaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'smartfileuploader', template: "<div class=\"container\">\n    <div class=\"fileContainer\">\n        <div class=\"fileInnerContainer\">\n            <input\n                id=\"addFile\"\n                placeholder=\"fileInput\"\n                type=\"file\"\n                (change)=\"getFile($event)\"\n                class=\"file\"\n                accept=\"{{ fileFormats.join(', ') }}\"\n                multiple\n            />\n            <div class=\"fileUploadContentContainer\">\n                <mat-label class=\"addFileButton\">\n                    <mat-icon color=\"primary\" class=\"addCircle\">add_circle</mat-icon>\n                </mat-label>\n                <mat-label class=\"label primary\"> {{ i18n.addFile }} </mat-label>\n                <mat-label class=\"label secondary\"> {{ i18n.browseOrDrag }} </mat-label>\n                <mat-label class=\"subLabel primary\"> {{ i18n.maxSize }} </mat-label>\n                <mat-label class=\"subLabel primary\"> {{ i18n.formats }} </mat-label>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"files.length\" class=\"uploadedFilesContainer\">\n        <div *ngFor=\"let file of files; let i = index\" class=\"uploadedFile\">\n            <mat-label class=\"fileNameLabel\"> {{ file.name }} </mat-label>\n            <button mat-icon-button (click)=\"remove(i)\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </div>\n        <button class=\"uploadButton\" mat-raised-button color=\"primary\" (click)=\"uploadFile()\">\n            Felt\u00F6lt\u00E9s\n        </button>\n    </div>\n</div>\n", styles: [".container{width:100%;height:max-content;margin:1em;border-radius:5px;border:2px dashed var(--light-gray-60)}.fileContainer,.uploadedFilesContainer{background-color:var(--primary-lighter-color)}.fileInnerContainer{min-height:250px}.uploadedFilesContainer{border-top:1px solid var(--light-gray-60);display:flex;flex-direction:column}.fileContainer{position:relative;height:250px}.uploadedFile{padding:1em;display:flex;flex-direction:row;color:var(--primary-color)}.fileNameLabel{flex:1;margin-top:auto;margin-bottom:auto}.label{font-size:small}.subLabel{font-size:smaller}.file{position:absolute;left:0;top:0;opacity:0;width:100%;height:100%;z-index:120;cursor:pointer}.addFileButton{z-index:150;cursor:pointer}.addCircle{font-size:50px;width:50px;height:50px}.fileUploadContentContainer{position:absolute;top:50%;left:0;transform:translateY(-50%);width:100%;display:flex;flex-direction:column;text-align:center}.fileUploadContentContainer .secondary{margin-bottom:1em}.inputLabel{flex:1}.uploadButton{margin-left:auto;margin-right:auto;margin-bottom:.5em}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { uploadCallback: [{
                type: Input
            }], fileFormats: [{
                type: Input
            }], i18n: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc21hcnRmb3JtL3NyYy9saWIvc21hcnRmaWxldXBsb2FkZXIvc21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc21hcnRmb3JtL3NyYy9saWIvc21hcnRmaWxldXBsb2FkZXIvc21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVF6RCxNQUFNLE9BQU8sMEJBQTBCO0lBTXRDO1FBTEEsVUFBSyxHQUFVLEVBQUUsQ0FBQztRQUVULGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBSW5DLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDWCxPQUFPLEVBQUUsdUJBQXVCO1lBQ2hDLFlBQVksRUFBRSx1QkFBdUI7WUFDckMsT0FBTyxFQUFFLFlBQVk7WUFDckIsT0FBTyxFQUFFLHlCQUF5QjtTQUNsQyxDQUFDO0lBQ0gsQ0FBQztJQUVELFFBQVE7UUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsT0FBTyxDQUFDLEtBQVU7UUFDakIsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEQsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEQ7SUFDRixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWE7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxVQUFVO1FBQ1QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7dUhBL0JXLDBCQUEwQjsyR0FBMUIsMEJBQTBCLGlKQ1J2QyxrakRBbUNBOzJGRDNCYSwwQkFBMEI7a0JBTHRDLFNBQVM7K0JBQ0MsbUJBQW1COzBFQU1wQixjQUFjO3NCQUF0QixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTbWFydEZpbGVVcGxvYWRlckkxOG4gfSBmcm9tICcuL3NtYXJ0ZmlsZXVwbG9hZGVyLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnc21hcnRmaWxldXBsb2FkZXInLFxuXHR0ZW1wbGF0ZVVybDogJy4vc21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9zbWFydGZpbGV1cGxvYWRlci5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU21hcnRmaWxldXBsb2FkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXHRmaWxlczogYW55W10gPSBbXTtcblx0QElucHV0KCkgdXBsb2FkQ2FsbGJhY2shOiAoZmlsZXM6IGFueVtdKSA9PiB2b2lkO1xuXHRASW5wdXQoKSBmaWxlRm9ybWF0czogc3RyaW5nW10gPSBbXTtcblx0QElucHV0KCkgaTE4biE6IFNtYXJ0RmlsZVVwbG9hZGVySTE4bjtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmkxOG4gPSB7XG5cdFx0XHRhZGRGaWxlOiAnZG9rdW1lbnR1bSBob3p6w6FhZMOhc2EnLFxuXHRcdFx0YnJvd3NlT3JEcmFnOiAndGFsbMOzesOhcyB2YWd5IGJlaMO6esOhcycsXG5cdFx0XHRtYXhTaXplOiAnbWF4LiAyNSBNQicsXG5cdFx0XHRmb3JtYXRzOiAnUERGLCBkb2N4LCB4bHMgZm9ybcOhdHVtJ1xuXHRcdH07XG5cdH1cblxuXHRuZ09uSW5pdCgpOiB2b2lkIHtcblx0XHRjb25zb2xlLmxvZyh0aGlzLmZpbGVGb3JtYXRzKTtcblx0fVxuXG5cdGdldEZpbGUoZXZlbnQ6IGFueSk6IHZvaWQge1xuXHRcdGlmIChldmVudC50YXJnZXQuZmlsZXMgJiYgZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aCkge1xuXHRcdFx0dGhpcy5maWxlcyA9IFsuLi50aGlzLmZpbGVzLCAuLi5ldmVudC50YXJnZXQuZmlsZXNdO1xuXHRcdH1cblx0fVxuXG5cdHJlbW92ZShpbmRleDogbnVtYmVyKTogdm9pZCB7XG5cdFx0dGhpcy5maWxlcy5zcGxpY2UoaW5kZXgsIDEpO1xuXHR9XG5cblx0dXBsb2FkRmlsZSgpOiB2b2lkIHtcblx0XHR0aGlzLnVwbG9hZENhbGxiYWNrKHRoaXMuZmlsZXMpO1xuXHR9XG59XG4iLCI8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImZpbGVDb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZpbGVJbm5lckNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgaWQ9XCJhZGRGaWxlXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cImZpbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICAgICAgICAgIChjaGFuZ2UpPVwiZ2V0RmlsZSgkZXZlbnQpXCJcbiAgICAgICAgICAgICAgICBjbGFzcz1cImZpbGVcIlxuICAgICAgICAgICAgICAgIGFjY2VwdD1cInt7IGZpbGVGb3JtYXRzLmpvaW4oJywgJykgfX1cIlxuICAgICAgICAgICAgICAgIG11bHRpcGxlXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpbGVVcGxvYWRDb250ZW50Q29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImFkZEZpbGVCdXR0b25cIj5cbiAgICAgICAgICAgICAgICAgICAgPG1hdC1pY29uIGNvbG9yPVwicHJpbWFyeVwiIGNsYXNzPVwiYWRkQ2lyY2xlXCI+YWRkX2NpcmNsZTwvbWF0LWljb24+XG4gICAgICAgICAgICAgICAgPC9tYXQtbGFiZWw+XG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImxhYmVsIHByaW1hcnlcIj4ge3sgaTE4bi5hZGRGaWxlIH19IDwvbWF0LWxhYmVsPlxuICAgICAgICAgICAgICAgIDxtYXQtbGFiZWwgY2xhc3M9XCJsYWJlbCBzZWNvbmRhcnlcIj4ge3sgaTE4bi5icm93c2VPckRyYWcgfX0gPC9tYXQtbGFiZWw+XG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cInN1YkxhYmVsIHByaW1hcnlcIj4ge3sgaTE4bi5tYXhTaXplIH19IDwvbWF0LWxhYmVsPlxuICAgICAgICAgICAgICAgIDxtYXQtbGFiZWwgY2xhc3M9XCJzdWJMYWJlbCBwcmltYXJ5XCI+IHt7IGkxOG4uZm9ybWF0cyB9fSA8L21hdC1sYWJlbD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2ICpuZ0lmPVwiZmlsZXMubGVuZ3RoXCIgY2xhc3M9XCJ1cGxvYWRlZEZpbGVzQ29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IGZpbGUgb2YgZmlsZXM7IGxldCBpID0gaW5kZXhcIiBjbGFzcz1cInVwbG9hZGVkRmlsZVwiPlxuICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImZpbGVOYW1lTGFiZWxcIj4ge3sgZmlsZS5uYW1lIH19IDwvbWF0LWxhYmVsPlxuICAgICAgICAgICAgPGJ1dHRvbiBtYXQtaWNvbi1idXR0b24gKGNsaWNrKT1cInJlbW92ZShpKVwiPlxuICAgICAgICAgICAgICAgIDxtYXQtaWNvbj5jbG9zZTwvbWF0LWljb24+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b24gY2xhc3M9XCJ1cGxvYWRCdXR0b25cIiBtYXQtcmFpc2VkLWJ1dHRvbiBjb2xvcj1cInByaW1hcnlcIiAoY2xpY2spPVwidXBsb2FkRmlsZSgpXCI+XG4gICAgICAgICAgICBGZWx0w7ZsdMOpc1xuICAgICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuIl19