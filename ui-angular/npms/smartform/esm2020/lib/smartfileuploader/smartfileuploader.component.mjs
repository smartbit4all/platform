import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/icon";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/common";
export class SmartfileuploaderComponent {
    constructor() {
        this.files = [];
        this.fileFormats = [];
        this.i18n = {
            addFile: 'dokumentum hozzáadása',
            browseOrDrag: 'tallózás vagy behúzás',
            maxSize: 'max. 25 MB',
            formats: 'PDF, docx, xls formátum'
        };
    }
    ngOnInit() {
        console.log(this.fileFormats);
    }
    getFile(event) {
        if (event.target.files && event.target.files.length) {
            this.files = [...this.files, ...event.target.files];
        }
    }
    remove(index) {
        this.files.splice(index, 1);
    }
    uploadFile() {
        this.uploadCallback(this.files);
    }
}
SmartfileuploaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmartfileuploaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SmartfileuploaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: SmartfileuploaderComponent, selector: "smartfileuploader", inputs: { uploadCallback: "uploadCallback", fileFormats: "fileFormats", i18n: "i18n" }, ngImport: i0, template: "<div class=\"container\">\r\n    <div class=\"fileContainer\">\r\n        <div class=\"fileInnerContainer\">\r\n            <input\r\n                id=\"addFile\"\r\n                placeholder=\"fileInput\"\r\n                type=\"file\"\r\n                (change)=\"getFile($event)\"\r\n                class=\"file\"\r\n                accept=\"{{ fileFormats.join(', ') }}\"\r\n                multiple\r\n            />\r\n            <div class=\"fileUploadContentContainer\">\r\n                <mat-label class=\"addFileButton\">\r\n                    <mat-icon color=\"primary\" class=\"addCircle\">add_circle</mat-icon>\r\n                </mat-label>\r\n                <mat-label class=\"label primary\"> {{ i18n.addFile }} </mat-label>\r\n                <mat-label class=\"label secondary\"> {{ i18n.browseOrDrag }} </mat-label>\r\n                <mat-label class=\"subLabel primary\"> {{ i18n.maxSize }} </mat-label>\r\n                <mat-label class=\"subLabel primary\"> {{ i18n.formats }} </mat-label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"files.length\" class=\"uploadedFilesContainer\">\r\n        <div *ngFor=\"let file of files; let i = index\" class=\"uploadedFile\">\r\n            <mat-label class=\"fileNameLabel\"> {{ file.name }} </mat-label>\r\n            <button mat-icon-button (click)=\"remove(i)\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </div>\r\n        <button class=\"uploadButton\" mat-raised-button color=\"primary\" (click)=\"uploadFile()\">\r\n            Felt\u00F6lt\u00E9s\r\n        </button>\r\n    </div>\r\n</div>\r\n", styles: [".container{width:100%;height:max-content;margin:1em;border-radius:5px;border:2px dashed var(--light-gray-60)}.fileContainer,.uploadedFilesContainer{background-color:var(--primary-lighter-color)}.fileInnerContainer{min-height:250px}.uploadedFilesContainer{border-top:1px solid var(--light-gray-60);display:flex;flex-direction:column}.fileContainer{position:relative;height:250px}.uploadedFile{padding:1em;display:flex;flex-direction:row;color:var(--primary-color)}.fileNameLabel{flex:1;margin-top:auto;margin-bottom:auto}.label{font-size:small}.subLabel{font-size:smaller}.file{position:absolute;left:0;top:0;opacity:0;width:100%;height:100%;z-index:120;cursor:pointer}.addFileButton{z-index:150;cursor:pointer}.addCircle{font-size:50px;width:50px;height:50px}.fileUploadContentContainer{position:absolute;top:50%;left:0;transform:translateY(-50%);width:100%;display:flex;flex-direction:column;text-align:center}.fileUploadContentContainer .secondary{margin-bottom:1em}.inputLabel{flex:1}.uploadButton{margin-left:auto;margin-right:auto;margin-bottom:.5em}\n"], components: [{ type: i1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i3.MatLabel, selector: "mat-label" }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmartfileuploaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'smartfileuploader', template: "<div class=\"container\">\r\n    <div class=\"fileContainer\">\r\n        <div class=\"fileInnerContainer\">\r\n            <input\r\n                id=\"addFile\"\r\n                placeholder=\"fileInput\"\r\n                type=\"file\"\r\n                (change)=\"getFile($event)\"\r\n                class=\"file\"\r\n                accept=\"{{ fileFormats.join(', ') }}\"\r\n                multiple\r\n            />\r\n            <div class=\"fileUploadContentContainer\">\r\n                <mat-label class=\"addFileButton\">\r\n                    <mat-icon color=\"primary\" class=\"addCircle\">add_circle</mat-icon>\r\n                </mat-label>\r\n                <mat-label class=\"label primary\"> {{ i18n.addFile }} </mat-label>\r\n                <mat-label class=\"label secondary\"> {{ i18n.browseOrDrag }} </mat-label>\r\n                <mat-label class=\"subLabel primary\"> {{ i18n.maxSize }} </mat-label>\r\n                <mat-label class=\"subLabel primary\"> {{ i18n.formats }} </mat-label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"files.length\" class=\"uploadedFilesContainer\">\r\n        <div *ngFor=\"let file of files; let i = index\" class=\"uploadedFile\">\r\n            <mat-label class=\"fileNameLabel\"> {{ file.name }} </mat-label>\r\n            <button mat-icon-button (click)=\"remove(i)\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </div>\r\n        <button class=\"uploadButton\" mat-raised-button color=\"primary\" (click)=\"uploadFile()\">\r\n            Felt\u00F6lt\u00E9s\r\n        </button>\r\n    </div>\r\n</div>\r\n", styles: [".container{width:100%;height:max-content;margin:1em;border-radius:5px;border:2px dashed var(--light-gray-60)}.fileContainer,.uploadedFilesContainer{background-color:var(--primary-lighter-color)}.fileInnerContainer{min-height:250px}.uploadedFilesContainer{border-top:1px solid var(--light-gray-60);display:flex;flex-direction:column}.fileContainer{position:relative;height:250px}.uploadedFile{padding:1em;display:flex;flex-direction:row;color:var(--primary-color)}.fileNameLabel{flex:1;margin-top:auto;margin-bottom:auto}.label{font-size:small}.subLabel{font-size:smaller}.file{position:absolute;left:0;top:0;opacity:0;width:100%;height:100%;z-index:120;cursor:pointer}.addFileButton{z-index:150;cursor:pointer}.addCircle{font-size:50px;width:50px;height:50px}.fileUploadContentContainer{position:absolute;top:50%;left:0;transform:translateY(-50%);width:100%;display:flex;flex-direction:column;text-align:center}.fileUploadContentContainer .secondary{margin-bottom:1em}.inputLabel{flex:1}.uploadButton{margin-left:auto;margin-right:auto;margin-bottom:.5em}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { uploadCallback: [{
                type: Input
            }], fileFormats: [{
                type: Input
            }], i18n: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc21hcnRmb3JtL3NyYy9saWIvc21hcnRmaWxldXBsb2FkZXIvc21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc21hcnRmb3JtL3NyYy9saWIvc21hcnRmaWxldXBsb2FkZXIvc21hcnRmaWxldXBsb2FkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVF6RCxNQUFNLE9BQU8sMEJBQTBCO0lBTXRDO1FBTEEsVUFBSyxHQUFVLEVBQUUsQ0FBQztRQUVULGdCQUFXLEdBQWEsRUFBRSxDQUFDO1FBSW5DLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDWCxPQUFPLEVBQUUsdUJBQXVCO1lBQ2hDLFlBQVksRUFBRSx1QkFBdUI7WUFDckMsT0FBTyxFQUFFLFlBQVk7WUFDckIsT0FBTyxFQUFFLHlCQUF5QjtTQUNsQyxDQUFDO0lBQ0gsQ0FBQztJQUVELFFBQVE7UUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsT0FBTyxDQUFDLEtBQVU7UUFDakIsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEQsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDcEQ7SUFDRixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQWE7UUFDbkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxVQUFVO1FBQ1QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7dUhBL0JXLDBCQUEwQjsyR0FBMUIsMEJBQTBCLGlKQ1J2Qyx3bkRBbUNBOzJGRDNCYSwwQkFBMEI7a0JBTHRDLFNBQVM7K0JBQ0MsbUJBQW1COzBFQU1wQixjQUFjO3NCQUF0QixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNtYXJ0RmlsZVVwbG9hZGVySTE4biB9IGZyb20gJy4vc21hcnRmaWxldXBsb2FkZXIubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6ICdzbWFydGZpbGV1cGxvYWRlcicsXHJcblx0dGVtcGxhdGVVcmw6ICcuL3NtYXJ0ZmlsZXVwbG9hZGVyLmNvbXBvbmVudC5odG1sJyxcclxuXHRzdHlsZVVybHM6IFsnLi9zbWFydGZpbGV1cGxvYWRlci5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNtYXJ0ZmlsZXVwbG9hZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRmaWxlczogYW55W10gPSBbXTtcclxuXHRASW5wdXQoKSB1cGxvYWRDYWxsYmFjayE6IChmaWxlczogYW55W10pID0+IHZvaWQ7XHJcblx0QElucHV0KCkgZmlsZUZvcm1hdHM6IHN0cmluZ1tdID0gW107XHJcblx0QElucHV0KCkgaTE4biE6IFNtYXJ0RmlsZVVwbG9hZGVySTE4bjtcclxuXHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHR0aGlzLmkxOG4gPSB7XHJcblx0XHRcdGFkZEZpbGU6ICdkb2t1bWVudHVtIGhvenrDoWFkw6FzYScsXHJcblx0XHRcdGJyb3dzZU9yRHJhZzogJ3RhbGzDs3rDoXMgdmFneSBiZWjDunrDoXMnLFxyXG5cdFx0XHRtYXhTaXplOiAnbWF4LiAyNSBNQicsXHJcblx0XHRcdGZvcm1hdHM6ICdQREYsIGRvY3gsIHhscyBmb3Jtw6F0dW0nXHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKTogdm9pZCB7XHJcblx0XHRjb25zb2xlLmxvZyh0aGlzLmZpbGVGb3JtYXRzKTtcclxuXHR9XHJcblxyXG5cdGdldEZpbGUoZXZlbnQ6IGFueSk6IHZvaWQge1xyXG5cdFx0aWYgKGV2ZW50LnRhcmdldC5maWxlcyAmJiBldmVudC50YXJnZXQuZmlsZXMubGVuZ3RoKSB7XHJcblx0XHRcdHRoaXMuZmlsZXMgPSBbLi4udGhpcy5maWxlcywgLi4uZXZlbnQudGFyZ2V0LmZpbGVzXTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJlbW92ZShpbmRleDogbnVtYmVyKTogdm9pZCB7XHJcblx0XHR0aGlzLmZpbGVzLnNwbGljZShpbmRleCwgMSk7XHJcblx0fVxyXG5cclxuXHR1cGxvYWRGaWxlKCk6IHZvaWQge1xyXG5cdFx0dGhpcy51cGxvYWRDYWxsYmFjayh0aGlzLmZpbGVzKTtcclxuXHR9XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImZpbGVDb250YWluZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmlsZUlubmVyQ29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgaWQ9XCJhZGRGaWxlXCJcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZmlsZUlucHV0XCJcclxuICAgICAgICAgICAgICAgIHR5cGU9XCJmaWxlXCJcclxuICAgICAgICAgICAgICAgIChjaGFuZ2UpPVwiZ2V0RmlsZSgkZXZlbnQpXCJcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwiZmlsZVwiXHJcbiAgICAgICAgICAgICAgICBhY2NlcHQ9XCJ7eyBmaWxlRm9ybWF0cy5qb2luKCcsICcpIH19XCJcclxuICAgICAgICAgICAgICAgIG11bHRpcGxlXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmaWxlVXBsb2FkQ29udGVudENvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImFkZEZpbGVCdXR0b25cIj5cclxuICAgICAgICAgICAgICAgICAgICA8bWF0LWljb24gY29sb3I9XCJwcmltYXJ5XCIgY2xhc3M9XCJhZGRDaXJjbGVcIj5hZGRfY2lyY2xlPC9tYXQtaWNvbj5cclxuICAgICAgICAgICAgICAgIDwvbWF0LWxhYmVsPlxyXG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImxhYmVsIHByaW1hcnlcIj4ge3sgaTE4bi5hZGRGaWxlIH19IDwvbWF0LWxhYmVsPlxyXG4gICAgICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImxhYmVsIHNlY29uZGFyeVwiPiB7eyBpMThuLmJyb3dzZU9yRHJhZyB9fSA8L21hdC1sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxtYXQtbGFiZWwgY2xhc3M9XCJzdWJMYWJlbCBwcmltYXJ5XCI+IHt7IGkxOG4ubWF4U2l6ZSB9fSA8L21hdC1sYWJlbD5cclxuICAgICAgICAgICAgICAgIDxtYXQtbGFiZWwgY2xhc3M9XCJzdWJMYWJlbCBwcmltYXJ5XCI+IHt7IGkxOG4uZm9ybWF0cyB9fSA8L21hdC1sYWJlbD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXYgKm5nSWY9XCJmaWxlcy5sZW5ndGhcIiBjbGFzcz1cInVwbG9hZGVkRmlsZXNDb250YWluZXJcIj5cclxuICAgICAgICA8ZGl2ICpuZ0Zvcj1cImxldCBmaWxlIG9mIGZpbGVzOyBsZXQgaSA9IGluZGV4XCIgY2xhc3M9XCJ1cGxvYWRlZEZpbGVcIj5cclxuICAgICAgICAgICAgPG1hdC1sYWJlbCBjbGFzcz1cImZpbGVOYW1lTGFiZWxcIj4ge3sgZmlsZS5uYW1lIH19IDwvbWF0LWxhYmVsPlxyXG4gICAgICAgICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiAoY2xpY2spPVwicmVtb3ZlKGkpXCI+XHJcbiAgICAgICAgICAgICAgICA8bWF0LWljb24+Y2xvc2U8L21hdC1pY29uPlxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwidXBsb2FkQnV0dG9uXCIgbWF0LXJhaXNlZC1idXR0b24gY29sb3I9XCJwcmltYXJ5XCIgKGNsaWNrKT1cInVwbG9hZEZpbGUoKVwiPlxyXG4gICAgICAgICAgICBGZWx0w7ZsdMOpc1xyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG4iXX0=