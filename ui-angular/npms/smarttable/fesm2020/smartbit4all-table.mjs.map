{"version":3,"file":"smartbit4all-table.mjs","sources":["../../../projects/smarttable/src/lib/smarttable.service.ts","../../../projects/smarttable/src/lib/smarttable.model.ts","../../../projects/smarttable/src/lib/smarttable.component.ts","../../../projects/smarttable/src/lib/smarttable.component.html","../../../projects/smarttable/src/lib/smarttable.module.ts","../../../projects/smarttable/src/public-api.ts","../../../projects/smarttable/src/smartbit4all-table.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmarttableService {\r\n\r\n  constructor() { }\r\n}\r\n","import { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\nexport enum SmartTableType {\r\n    INHERITED,\r\n    CHECK_BOX,\r\n}\r\n\r\nexport interface SmartTableOption {\r\n    label: string;\r\n    icon?: string;\r\n    callback: (id: string) => any;\r\n}\r\n\r\nexport interface SmartTableHeader {\r\n    propertyName: string;\r\n    label: string;\r\n    isHidden?: boolean;\r\n}\r\n\r\nexport interface SmartTableButton {\r\n    lable: string;\r\n    icon?: string;\r\n    onClick?: (args?: any[]) => void;\r\n}\r\n\r\nexport interface SmartTableInterface<T> {\r\n    title?: string;\r\n    tableHeaders: string[];\r\n    customSmartTableHeaders?: SmartTableHeader[];\r\n    customTableHeaders: string[];\r\n    tableRows: T[];\r\n    tableType: SmartTableType;\r\n    options?: SmartTableOption[];\r\n}\r\n\r\nexport class SmartTable<T> implements SmartTableInterface<T> {\r\n    title?: string | undefined;\r\n    tableHeaders: string[];\r\n    customSmartTableHeaders?: SmartTableHeader[];\r\n    customTableHeaders!: string[];\r\n    tableRows: T[];\r\n    tableType: SmartTableType;\r\n    selection?: SelectionModel<T>;\r\n    isMultiple?: boolean;\r\n    options?: SmartTableOption[];\r\n\r\n    constructor(\r\n        tableRows: T[],\r\n        tableType: SmartTableType,\r\n        customSmartTableHeaders?: SmartTableHeader[],\r\n        title?: string,\r\n        isMultiple?: boolean,\r\n        options?: SmartTableOption[]\r\n    ) {\r\n        this.tableHeaders = Object.getOwnPropertyNames(tableRows[0]);\r\n        this.customSmartTableHeaders = customSmartTableHeaders;\r\n\r\n        this.setTableHeaders();\r\n\r\n        this.tableRows = tableRows;\r\n        this.tableType = tableType;\r\n        this.title = title;\r\n        this.isMultiple = isMultiple;\r\n        this.options = options;\r\n\r\n        this.pushOptions();\r\n        this.setTableSelectionType(tableType);\r\n    }\r\n\r\n    setTableSelectionType(tableType: SmartTableType): void {\r\n        if (tableType !== SmartTableType.INHERITED) {\r\n            this.tableHeaders = [\"select\"].concat(this.tableHeaders);\r\n            this.customTableHeaders = [\"select\"].concat(this.customTableHeaders);\r\n            this.selection = new SelectionModel<T>(this.isMultiple, []);\r\n        }\r\n    }\r\n\r\n    pushOptions(): void {\r\n        if (this.options && this.options.length) {\r\n            this.tableHeaders.push(\"options\");\r\n        }\r\n    }\r\n\r\n    setTableHeaders(): void {\r\n        if (this.customSmartTableHeaders && this.customSmartTableHeaders.length) {\r\n            let originalHeaders = this.tableHeaders;\r\n            this.tableHeaders = [];\r\n            this.customTableHeaders = [];\r\n            this.customSmartTableHeaders.forEach((tableHeader) => {\r\n                if (originalHeaders.includes(tableHeader.propertyName) && !tableHeader.isHidden) {\r\n                    this.tableHeaders.push(tableHeader.propertyName);\r\n                    this.customTableHeaders.push(tableHeader.label);\r\n                }\r\n            });\r\n        } else {\r\n            this.customTableHeaders = this.tableHeaders;\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SmartTable, SmartTableType } from './smarttable.model';\r\n\r\n@Component({\r\n\tselector: 'smarttable',\r\n\ttemplateUrl: './smarttable.component.html',\r\n\tstyleUrls: ['./smarttable.component.css']\r\n})\r\nexport class SmarttableComponent implements OnInit {\r\n\t@Input() smartTable!: SmartTable<any>;\r\n\ttableType = SmartTableType;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit(): void {}\r\n\r\n\tisAllSelected() {\r\n\t\tconst numSelected = this.smartTable.selection!.selected.length;\r\n\t\tconst numRows = this.smartTable.tableRows.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/** Selects all rows if they are not all selected; otherwise clear selection. */\r\n\ttoggleAllRows() {\r\n\t\tif (this.isAllSelected()) {\r\n\t\t\tthis.smartTable.selection!.clear();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.smartTable.selection!.select(...this.smartTable.tableRows);\r\n\t}\r\n\r\n\t/** The label for the checkbox on the passed row */\r\n\tcheckboxLabel(row?: any): string {\r\n\t\tif (!row) {\r\n\t\t\treturn `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n\t\t}\r\n\t\treturn `${this.smartTable.selection!.isSelected(row) ? 'deselect' : 'select'} row ${\r\n\t\t\trow.position + 1\r\n\t\t}`;\r\n\t}\r\n}\r\n","<table mat-table [dataSource]=\"smartTable.tableRows\" class=\"full-width\">\r\n  <!--- Note that these columns can be defined in any order.\r\n            The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n  <!-- Column Descriptor -->\r\n  <div *ngIf=\"smartTable.tableType === tableType.INHERITED\">\r\n    <ng-container\r\n      *ngFor=\"let header of smartTable.tableHeaders; let i = index\"\r\n      matColumnDef=\"{{ header }}\"\r\n    >\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <div\r\n          *ngIf=\"\r\n            header === 'icon' ||\r\n            header === 'img' ||\r\n            header === 'options' ||\r\n            header === 'button'\r\n          \"\r\n        ></div>\r\n        <div\r\n          *ngIf=\"\r\n            header !== 'icon' &&\r\n            header !== 'img' &&\r\n            header !== 'options' &&\r\n            header !== 'button'\r\n          \"\r\n        >\r\n          {{ smartTable.customTableHeaders[i] }}\r\n        </div>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <mat-icon *ngIf=\"header === 'icon'\"> {{ element[header] }} </mat-icon>\r\n        <img\r\n          *ngIf=\"header === 'img'\"\r\n          [src]=\"element[header]\"\r\n          alt=\"\"\r\n          class=\"smarttableImg\"\r\n        />\r\n        <div *ngIf=\"header === 'options'\">\r\n          <button\r\n            mat-icon-button\r\n            [matMenuTriggerFor]=\"menu\"\r\n            aria-label=\"options\"\r\n          >\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button\r\n              *ngFor=\"let option of smartTable.options\"\r\n              mat-menu-item\r\n              (click)=\"option.callback(element)\"\r\n            >\r\n              <mat-icon *ngIf=\"option.icon\">\r\n                {{ option.icon }}\r\n              </mat-icon>\r\n              <span>\r\n                {{ option.label }}\r\n              </span>\r\n            </button>\r\n          </mat-menu>\r\n        </div>\r\n        <div\r\n          *ngIf=\"\r\n            header !== 'icon' &&\r\n            header !== 'img' &&\r\n            header !== 'option' &&\r\n            header !== 'button'\r\n          \"\r\n        >\r\n          {{ element[header] }}\r\n        </div>\r\n        <div *ngIf=\"header === 'button'\">\r\n          <!-- <button (click)=\"element[header].onClick()\" mat-raised-button>\r\n            {{ element[header].label }}\r\n            <mat-icon>{{ element[header].icon }}</mat-icon>\r\n          </button> -->\r\n          <smart-toolbar [toolbar]=\"element[header]\"></smart-toolbar>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"smartTable.tableHeaders; sticky: true\"\r\n    ></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: smartTable.tableHeaders\"></tr>\r\n  </div>\r\n  <div *ngIf=\"smartTable.tableType !== tableType.INHERITED\">\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox\r\n          (change)=\"$event ? toggleAllRows() : null\"\r\n          [checked]=\"smartTable.selection!.hasValue() && isAllSelected()\"\r\n          [indeterminate]=\"smartTable.selection!.hasValue() && !isAllSelected()\"\r\n          [aria-label]=\"checkboxLabel()\"\r\n        >\r\n        </mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox\r\n          (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? smartTable.selection!.toggle(row) : null\"\r\n          [checked]=\"smartTable.selection!.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"\r\n        >\r\n        </mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Column Descriptor -->\r\n    <div *ngFor=\"let header of smartTable.tableHeaders; let i = index\">\r\n      <ng-container *ngIf=\"header !== 'select'\" matColumnDef=\"{{ header }}\">\r\n        <th mat-header-cell *matHeaderCellDef>\r\n          <div\r\n            *ngIf=\"\r\n              header === 'icon' || header === 'img' || header === 'options'\r\n            \"\r\n          ></div>\r\n          <div\r\n            *ngIf=\"\r\n              header !== 'icon' && header !== 'img' && header !== 'options'\r\n            \"\r\n          >\r\n            {{ smartTable.customTableHeaders[i] }}\r\n          </div>\r\n        </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <mat-icon *ngIf=\"header === 'icon'\"> {{ element[header] }} </mat-icon>\r\n          <img\r\n            *ngIf=\"header === 'img'\"\r\n            [src]=\"element[header]\"\r\n            alt=\"\"\r\n            class=\"smarttableImg\"\r\n          />\r\n          <div *ngIf=\"header === 'options'\">\r\n            <button\r\n              mat-icon-button\r\n              [matMenuTriggerFor]=\"menu\"\r\n              aria-label=\"options\"\r\n            >\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n              <button\r\n                *ngFor=\"let option of smartTable.options\"\r\n                mat-menu-item\r\n                (click)=\"option.callback(element)\"\r\n              >\r\n                <mat-icon *ngIf=\"option.icon\">\r\n                  {{ option.icon }}\r\n                </mat-icon>\r\n                <span>\r\n                  {{ option.label }}\r\n                </span>\r\n              </button>\r\n            </mat-menu>\r\n          </div>\r\n          <div *ngIf=\"header !== 'icon' && header !== 'img'\">\r\n            {{ element[header] }}\r\n          </div>\r\n        </td>\r\n        <!-- <td mat-cell *matCellDef=\"let element\">{{ element[header] }}</td> -->\r\n      </ng-container>\r\n    </div>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: smartTable.tableHeaders\"\r\n      (click)=\"smartTable.selection!.toggle(row)\"\r\n    ></tr>\r\n  </div>\r\n</table>\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { SmarttableComponent } from \"./smarttable.component\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatCommonModule } from \"@angular/material/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { SmartToolbarModule } from \"@smartbit4all/smart-toolbar\";\r\n\r\n@NgModule({\r\n    declarations: [SmarttableComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        MatCommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatCheckboxModule,\r\n        MatButtonModule,\r\n        MatTableModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        SmartToolbarModule\r\n    ],\r\n    exports: [SmarttableComponent],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SmarttableModule { }\r\n","/*\r\n * Public API Surface of smarttable\r\n */\r\n\r\nexport * from \"./lib/smarttable.service\";\r\nexport * from \"./lib/smarttable.component\";\r\nexport * from \"./lib/smarttable.module\";\r\nexport * from \"./lib/smarttable.model\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}