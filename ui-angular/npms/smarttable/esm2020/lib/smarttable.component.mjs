import { Component, Input } from '@angular/core';
import { SmartTableType } from './smarttable.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/table";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/menu";
import * as i5 from "@angular/material/checkbox";
import * as i6 from "@angular/common";
export class SmarttableComponent {
    constructor() {
        this.tableType = SmartTableType;
    }
    ngOnInit() { }
    isAllSelected() {
        const numSelected = this.smartTable.selection.selected.length;
        const numRows = this.smartTable.tableRows.length;
        return numSelected === numRows;
    }
    /** Selects all rows if they are not all selected; otherwise clear selection. */
    toggleAllRows() {
        if (this.isAllSelected()) {
            this.smartTable.selection.clear();
            return;
        }
        this.smartTable.selection.select(...this.smartTable.tableRows);
    }
    /** The label for the checkbox on the passed row */
    checkboxLabel(row) {
        if (!row) {
            return `${this.isAllSelected() ? 'deselect' : 'select'} all`;
        }
        return `${this.smartTable.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;
    }
}
SmarttableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmarttableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SmarttableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: SmarttableComponent, selector: "smarttable", inputs: { smartTable: "smartTable" }, ngImport: i0, template: "<table mat-table [dataSource]=\"smartTable.tableRows\" class=\"full-width\">\n\t<!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n\t<!-- Column Descriptor -->\n\t<div *ngIf=\"smartTable.tableType === tableType.INHERITED\">\n\t\t<ng-container\n\t\t\t*ngFor=\"let header of smartTable.tableHeaders; let i = index\"\n\t\t\tmatColumnDef=\"{{ header }}\"\n\t\t>\n\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t<div *ngIf=\"header === 'icon' || header === 'options'\"></div>\n\t\t\t\t<div *ngIf=\"header !== 'icon' && header !== 'options'\">\n\t\t\t\t\t{{ smartTable.customTableHeaders[i] }}\n\t\t\t\t</div>\n\t\t\t</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t<mat-icon *ngIf=\"header === 'icon'\"> {{ element[header] }} </mat-icon>\n\t\t\t\t<div *ngIf=\"header === 'options'\">\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"options\">\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t*ngFor=\"let option of smartTable.options\"\n\t\t\t\t\t\t\tmat-menu-item\n\t\t\t\t\t\t\t(click)=\"option.callback(element)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<mat-icon *ngIf=\"option.icon\">\n\t\t\t\t\t\t\t\t{{ option.icon }}\n\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ option.label }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</mat-menu>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"header !== 'icon'\">\n\t\t\t\t\t{{ element[header] }}\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders; sticky: true\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: smartTable.tableHeaders\"></tr>\n\t</div>\n\t<div *ngIf=\"smartTable.tableType !== tableType.INHERITED\">\n\t\t<!-- Checkbox Column -->\n\t\t<ng-container matColumnDef=\"select\">\n\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(change)=\"$event ? toggleAllRows() : null\"\n\t\t\t\t\t[checked]=\"smartTable.selection!.hasValue() && isAllSelected()\"\n\t\t\t\t\t[indeterminate]=\"smartTable.selection!.hasValue() && !isAllSelected()\"\n\t\t\t\t\t[aria-label]=\"checkboxLabel()\"\n\t\t\t\t>\n\t\t\t\t</mat-checkbox>\n\t\t\t</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t(change)=\"$event ? smartTable.selection!.toggle(row) : null\"\n\t\t\t\t\t[checked]=\"smartTable.selection!.isSelected(row)\"\n\t\t\t\t\t[aria-label]=\"checkboxLabel(row)\"\n\t\t\t\t>\n\t\t\t\t</mat-checkbox>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<!-- Column Descriptor -->\n\t\t<div *ngFor=\"let header of smartTable.tableHeaders\">\n\t\t\t<ng-container *ngIf=\"header !== 'select'\" matColumnDef=\"{{ header }}\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\t{{ header }}\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element[header] }}</td>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders\"></tr>\n\t\t<tr\n\t\t\tmat-row\n\t\t\t*matRowDef=\"let row; columns: smartTable.tableHeaders\"\n\t\t\t(click)=\"smartTable.selection!.toggle(row)\"\n\t\t></tr>\n\t</div>\n</table>\n", styles: [".full-width{width:100%}\n"], components: [{ type: i1.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i4.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { type: i4.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { type: i1.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { type: i1.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { type: i5.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { type: i1.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { type: i1.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { type: i1.MatCellDef, selector: "[matCellDef]" }, { type: i1.MatCell, selector: "mat-cell, td[mat-cell]" }, { type: i4.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { type: i1.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { type: i1.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: SmarttableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'smarttable', template: "<table mat-table [dataSource]=\"smartTable.tableRows\" class=\"full-width\">\n\t<!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n\t<!-- Column Descriptor -->\n\t<div *ngIf=\"smartTable.tableType === tableType.INHERITED\">\n\t\t<ng-container\n\t\t\t*ngFor=\"let header of smartTable.tableHeaders; let i = index\"\n\t\t\tmatColumnDef=\"{{ header }}\"\n\t\t>\n\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t<div *ngIf=\"header === 'icon' || header === 'options'\"></div>\n\t\t\t\t<div *ngIf=\"header !== 'icon' && header !== 'options'\">\n\t\t\t\t\t{{ smartTable.customTableHeaders[i] }}\n\t\t\t\t</div>\n\t\t\t</th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t<mat-icon *ngIf=\"header === 'icon'\"> {{ element[header] }} </mat-icon>\n\t\t\t\t<div *ngIf=\"header === 'options'\">\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"options\">\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t*ngFor=\"let option of smartTable.options\"\n\t\t\t\t\t\t\tmat-menu-item\n\t\t\t\t\t\t\t(click)=\"option.callback(element)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<mat-icon *ngIf=\"option.icon\">\n\t\t\t\t\t\t\t\t{{ option.icon }}\n\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ option.label }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</mat-menu>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"header !== 'icon'\">\n\t\t\t\t\t{{ element[header] }}\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders; sticky: true\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: smartTable.tableHeaders\"></tr>\n\t</div>\n\t<div *ngIf=\"smartTable.tableType !== tableType.INHERITED\">\n\t\t<!-- Checkbox Column -->\n\t\t<ng-container matColumnDef=\"select\">\n\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(change)=\"$event ? toggleAllRows() : null\"\n\t\t\t\t\t[checked]=\"smartTable.selection!.hasValue() && isAllSelected()\"\n\t\t\t\t\t[indeterminate]=\"smartTable.selection!.hasValue() && !isAllSelected()\"\n\t\t\t\t\t[aria-label]=\"checkboxLabel()\"\n\t\t\t\t>\n\t\t\t\t</mat-checkbox>\n\t\t\t</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t(change)=\"$event ? smartTable.selection!.toggle(row) : null\"\n\t\t\t\t\t[checked]=\"smartTable.selection!.isSelected(row)\"\n\t\t\t\t\t[aria-label]=\"checkboxLabel(row)\"\n\t\t\t\t>\n\t\t\t\t</mat-checkbox>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<!-- Column Descriptor -->\n\t\t<div *ngFor=\"let header of smartTable.tableHeaders\">\n\t\t\t<ng-container *ngIf=\"header !== 'select'\" matColumnDef=\"{{ header }}\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>\n\t\t\t\t\t{{ header }}\n\t\t\t\t</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\">{{ element[header] }}</td>\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders\"></tr>\n\t\t<tr\n\t\t\tmat-row\n\t\t\t*matRowDef=\"let row; columns: smartTable.tableHeaders\"\n\t\t\t(click)=\"smartTable.selection!.toggle(row)\"\n\t\t></tr>\n\t</div>\n</table>\n", styles: [".full-width{width:100%}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { smartTable: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnR0YWJsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zbWFydHRhYmxlL3NyYy9saWIvc21hcnR0YWJsZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zbWFydHRhYmxlL3NyYy9saWIvc21hcnR0YWJsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQWMsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7Ozs7O0FBT2hFLE1BQU0sT0FBTyxtQkFBbUI7SUFJL0I7UUFGQSxjQUFTLEdBQUcsY0FBYyxDQUFDO0lBRVosQ0FBQztJQUVoQixRQUFRLEtBQVUsQ0FBQztJQUVuQixhQUFhO1FBQ1osTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUMvRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7UUFDakQsT0FBTyxXQUFXLEtBQUssT0FBTyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxnRkFBZ0Y7SUFDaEYsYUFBYTtRQUNaLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBVSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ25DLE9BQU87U0FDUDtRQUVELElBQUksQ0FBQyxVQUFVLENBQUMsU0FBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVELG1EQUFtRDtJQUNuRCxhQUFhLENBQUMsR0FBUztRQUN0QixJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1QsT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxRQUFRLE1BQU0sQ0FBQztTQUM3RDtRQUNELE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsUUFBUSxRQUMzRSxHQUFHLENBQUMsUUFBUSxHQUFHLENBQ2hCLEVBQUUsQ0FBQztJQUNKLENBQUM7O2dIQWhDVyxtQkFBbUI7b0dBQW5CLG1CQUFtQix3RkNSaEMsZ3hHQXVGQTsyRkQvRWEsbUJBQW1CO2tCQUwvQixTQUFTOytCQUNDLFlBQVk7MEVBS2IsVUFBVTtzQkFBbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU21hcnRUYWJsZSwgU21hcnRUYWJsZVR5cGUgfSBmcm9tICcuL3NtYXJ0dGFibGUubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdzbWFydHRhYmxlJyxcblx0dGVtcGxhdGVVcmw6ICcuL3NtYXJ0dGFibGUuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9zbWFydHRhYmxlLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBTbWFydHRhYmxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblx0QElucHV0KCkgc21hcnRUYWJsZSE6IFNtYXJ0VGFibGU8YW55Pjtcblx0dGFibGVUeXBlID0gU21hcnRUYWJsZVR5cGU7XG5cblx0Y29uc3RydWN0b3IoKSB7fVxuXG5cdG5nT25Jbml0KCk6IHZvaWQge31cblxuXHRpc0FsbFNlbGVjdGVkKCkge1xuXHRcdGNvbnN0IG51bVNlbGVjdGVkID0gdGhpcy5zbWFydFRhYmxlLnNlbGVjdGlvbiEuc2VsZWN0ZWQubGVuZ3RoO1xuXHRcdGNvbnN0IG51bVJvd3MgPSB0aGlzLnNtYXJ0VGFibGUudGFibGVSb3dzLmxlbmd0aDtcblx0XHRyZXR1cm4gbnVtU2VsZWN0ZWQgPT09IG51bVJvd3M7XG5cdH1cblxuXHQvKiogU2VsZWN0cyBhbGwgcm93cyBpZiB0aGV5IGFyZSBub3QgYWxsIHNlbGVjdGVkOyBvdGhlcndpc2UgY2xlYXIgc2VsZWN0aW9uLiAqL1xuXHR0b2dnbGVBbGxSb3dzKCkge1xuXHRcdGlmICh0aGlzLmlzQWxsU2VsZWN0ZWQoKSkge1xuXHRcdFx0dGhpcy5zbWFydFRhYmxlLnNlbGVjdGlvbiEuY2xlYXIoKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLnNtYXJ0VGFibGUuc2VsZWN0aW9uIS5zZWxlY3QoLi4udGhpcy5zbWFydFRhYmxlLnRhYmxlUm93cyk7XG5cdH1cblxuXHQvKiogVGhlIGxhYmVsIGZvciB0aGUgY2hlY2tib3ggb24gdGhlIHBhc3NlZCByb3cgKi9cblx0Y2hlY2tib3hMYWJlbChyb3c/OiBhbnkpOiBzdHJpbmcge1xuXHRcdGlmICghcm93KSB7XG5cdFx0XHRyZXR1cm4gYCR7dGhpcy5pc0FsbFNlbGVjdGVkKCkgPyAnZGVzZWxlY3QnIDogJ3NlbGVjdCd9IGFsbGA7XG5cdFx0fVxuXHRcdHJldHVybiBgJHt0aGlzLnNtYXJ0VGFibGUuc2VsZWN0aW9uIS5pc1NlbGVjdGVkKHJvdykgPyAnZGVzZWxlY3QnIDogJ3NlbGVjdCd9IHJvdyAke1xuXHRcdFx0cm93LnBvc2l0aW9uICsgMVxuXHRcdH1gO1xuXHR9XG59XG4iLCI8dGFibGUgbWF0LXRhYmxlIFtkYXRhU291cmNlXT1cInNtYXJ0VGFibGUudGFibGVSb3dzXCIgY2xhc3M9XCJmdWxsLXdpZHRoXCI+XG5cdDwhLS0tIE5vdGUgdGhhdCB0aGVzZSBjb2x1bW5zIGNhbiBiZSBkZWZpbmVkIGluIGFueSBvcmRlci5cbiAgICAgICAgICBUaGUgYWN0dWFsIHJlbmRlcmVkIGNvbHVtbnMgYXJlIHNldCBhcyBhIHByb3BlcnR5IG9uIHRoZSByb3cgZGVmaW5pdGlvblwiIC0tPlxuXG5cdDwhLS0gQ29sdW1uIERlc2NyaXB0b3IgLS0+XG5cdDxkaXYgKm5nSWY9XCJzbWFydFRhYmxlLnRhYmxlVHlwZSA9PT0gdGFibGVUeXBlLklOSEVSSVRFRFwiPlxuXHRcdDxuZy1jb250YWluZXJcblx0XHRcdCpuZ0Zvcj1cImxldCBoZWFkZXIgb2Ygc21hcnRUYWJsZS50YWJsZUhlYWRlcnM7IGxldCBpID0gaW5kZXhcIlxuXHRcdFx0bWF0Q29sdW1uRGVmPVwie3sgaGVhZGVyIH19XCJcblx0XHQ+XG5cdFx0XHQ8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPlxuXHRcdFx0XHQ8ZGl2ICpuZ0lmPVwiaGVhZGVyID09PSAnaWNvbicgfHwgaGVhZGVyID09PSAnb3B0aW9ucydcIj48L2Rpdj5cblx0XHRcdFx0PGRpdiAqbmdJZj1cImhlYWRlciAhPT0gJ2ljb24nICYmIGhlYWRlciAhPT0gJ29wdGlvbnMnXCI+XG5cdFx0XHRcdFx0e3sgc21hcnRUYWJsZS5jdXN0b21UYWJsZUhlYWRlcnNbaV0gfX1cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L3RoPlxuXHRcdFx0PHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnRcIj5cblx0XHRcdFx0PG1hdC1pY29uICpuZ0lmPVwiaGVhZGVyID09PSAnaWNvbidcIj4ge3sgZWxlbWVudFtoZWFkZXJdIH19IDwvbWF0LWljb24+XG5cdFx0XHRcdDxkaXYgKm5nSWY9XCJoZWFkZXIgPT09ICdvcHRpb25zJ1wiPlxuXHRcdFx0XHRcdDxidXR0b24gbWF0LWljb24tYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCIgYXJpYS1sYWJlbD1cIm9wdGlvbnNcIj5cblx0XHRcdFx0XHRcdDxtYXQtaWNvbj5tb3JlX3ZlcnQ8L21hdC1pY29uPlxuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRcdDxtYXQtbWVudSAjbWVudT1cIm1hdE1lbnVcIj5cblx0XHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdFx0Km5nRm9yPVwibGV0IG9wdGlvbiBvZiBzbWFydFRhYmxlLm9wdGlvbnNcIlxuXHRcdFx0XHRcdFx0XHRtYXQtbWVudS1pdGVtXG5cdFx0XHRcdFx0XHRcdChjbGljayk9XCJvcHRpb24uY2FsbGJhY2soZWxlbWVudClcIlxuXHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHQ8bWF0LWljb24gKm5nSWY9XCJvcHRpb24uaWNvblwiPlxuXHRcdFx0XHRcdFx0XHRcdHt7IG9wdGlvbi5pY29uIH19XG5cdFx0XHRcdFx0XHRcdDwvbWF0LWljb24+XG5cdFx0XHRcdFx0XHRcdDxzcGFuPlxuXHRcdFx0XHRcdFx0XHRcdHt7IG9wdGlvbi5sYWJlbCB9fVxuXHRcdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0XHQ8L21hdC1tZW51PlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PGRpdiAqbmdJZj1cImhlYWRlciAhPT0gJ2ljb24nXCI+XG5cdFx0XHRcdFx0e3sgZWxlbWVudFtoZWFkZXJdIH19XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC90ZD5cblx0XHQ8L25nLWNvbnRhaW5lcj5cblxuXHRcdDx0ciBtYXQtaGVhZGVyLXJvdyAqbWF0SGVhZGVyUm93RGVmPVwic21hcnRUYWJsZS50YWJsZUhlYWRlcnM7IHN0aWNreTogdHJ1ZVwiPjwvdHI+XG5cdFx0PHRyIG1hdC1yb3cgKm1hdFJvd0RlZj1cImxldCByb3c7IGNvbHVtbnM6IHNtYXJ0VGFibGUudGFibGVIZWFkZXJzXCI+PC90cj5cblx0PC9kaXY+XG5cdDxkaXYgKm5nSWY9XCJzbWFydFRhYmxlLnRhYmxlVHlwZSAhPT0gdGFibGVUeXBlLklOSEVSSVRFRFwiPlxuXHRcdDwhLS0gQ2hlY2tib3ggQ29sdW1uIC0tPlxuXHRcdDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwic2VsZWN0XCI+XG5cdFx0XHQ8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPlxuXHRcdFx0XHQ8bWF0LWNoZWNrYm94XG5cdFx0XHRcdFx0KGNoYW5nZSk9XCIkZXZlbnQgPyB0b2dnbGVBbGxSb3dzKCkgOiBudWxsXCJcblx0XHRcdFx0XHRbY2hlY2tlZF09XCJzbWFydFRhYmxlLnNlbGVjdGlvbiEuaGFzVmFsdWUoKSAmJiBpc0FsbFNlbGVjdGVkKClcIlxuXHRcdFx0XHRcdFtpbmRldGVybWluYXRlXT1cInNtYXJ0VGFibGUuc2VsZWN0aW9uIS5oYXNWYWx1ZSgpICYmICFpc0FsbFNlbGVjdGVkKClcIlxuXHRcdFx0XHRcdFthcmlhLWxhYmVsXT1cImNoZWNrYm94TGFiZWwoKVwiXG5cdFx0XHRcdD5cblx0XHRcdFx0PC9tYXQtY2hlY2tib3g+XG5cdFx0XHQ8L3RoPlxuXHRcdFx0PHRkIG1hdC1jZWxsICptYXRDZWxsRGVmPVwibGV0IHJvd1wiPlxuXHRcdFx0XHQ8bWF0LWNoZWNrYm94XG5cdFx0XHRcdFx0KGNsaWNrKT1cIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiXG5cdFx0XHRcdFx0KGNoYW5nZSk9XCIkZXZlbnQgPyBzbWFydFRhYmxlLnNlbGVjdGlvbiEudG9nZ2xlKHJvdykgOiBudWxsXCJcblx0XHRcdFx0XHRbY2hlY2tlZF09XCJzbWFydFRhYmxlLnNlbGVjdGlvbiEuaXNTZWxlY3RlZChyb3cpXCJcblx0XHRcdFx0XHRbYXJpYS1sYWJlbF09XCJjaGVja2JveExhYmVsKHJvdylcIlxuXHRcdFx0XHQ+XG5cdFx0XHRcdDwvbWF0LWNoZWNrYm94PlxuXHRcdFx0PC90ZD5cblx0XHQ8L25nLWNvbnRhaW5lcj5cblxuXHRcdDwhLS0gQ29sdW1uIERlc2NyaXB0b3IgLS0+XG5cdFx0PGRpdiAqbmdGb3I9XCJsZXQgaGVhZGVyIG9mIHNtYXJ0VGFibGUudGFibGVIZWFkZXJzXCI+XG5cdFx0XHQ8bmctY29udGFpbmVyICpuZ0lmPVwiaGVhZGVyICE9PSAnc2VsZWN0J1wiIG1hdENvbHVtbkRlZj1cInt7IGhlYWRlciB9fVwiPlxuXHRcdFx0XHQ8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPlxuXHRcdFx0XHRcdHt7IGhlYWRlciB9fVxuXHRcdFx0XHQ8L3RoPlxuXHRcdFx0XHQ8dGQgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudFwiPnt7IGVsZW1lbnRbaGVhZGVyXSB9fTwvdGQ+XG5cdFx0XHQ8L25nLWNvbnRhaW5lcj5cblx0XHQ8L2Rpdj5cblxuXHRcdDx0ciBtYXQtaGVhZGVyLXJvdyAqbWF0SGVhZGVyUm93RGVmPVwic21hcnRUYWJsZS50YWJsZUhlYWRlcnNcIj48L3RyPlxuXHRcdDx0clxuXHRcdFx0bWF0LXJvd1xuXHRcdFx0Km1hdFJvd0RlZj1cImxldCByb3c7IGNvbHVtbnM6IHNtYXJ0VGFibGUudGFibGVIZWFkZXJzXCJcblx0XHRcdChjbGljayk9XCJzbWFydFRhYmxlLnNlbGVjdGlvbiEudG9nZ2xlKHJvdylcIlxuXHRcdD48L3RyPlxuXHQ8L2Rpdj5cbjwvdGFibGU+XG4iXX0=