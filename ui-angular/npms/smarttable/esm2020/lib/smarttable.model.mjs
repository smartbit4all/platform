import { SelectionModel } from "@angular/cdk/collections";
export var SmartTableType;
(function (SmartTableType) {
    SmartTableType[SmartTableType["INHERITED"] = 0] = "INHERITED";
    SmartTableType[SmartTableType["CHECK_BOX"] = 1] = "CHECK_BOX";
})(SmartTableType || (SmartTableType = {}));
export class SmartTable {
    constructor(tableRows, tableType, customSmartTableHeaders, title, isMultiple, options) {
        this.tableHeaders = Object.getOwnPropertyNames(tableRows[0]);
        this.customSmartTableHeaders = customSmartTableHeaders;
        this.setTableHeaders();
        this.tableRows = tableRows;
        this.tableType = tableType;
        this.title = title;
        this.isMultiple = isMultiple;
        this.options = options;
        this.pushOptions();
        this.setTableSelectionType(tableType);
    }
    setTableSelectionType(tableType) {
        if (tableType !== SmartTableType.INHERITED) {
            this.tableHeaders = ["select"].concat(this.tableHeaders);
            this.customTableHeaders = ["select"].concat(this.customTableHeaders);
            this.selection = new SelectionModel(this.isMultiple, []);
        }
    }
    pushOptions() {
        if (this.options && this.options.length) {
            this.tableHeaders.push("options");
        }
    }
    setTableHeaders() {
        if (this.customSmartTableHeaders && this.customSmartTableHeaders.length) {
            let originalHeaders = this.tableHeaders;
            this.tableHeaders = [];
            this.customTableHeaders = [];
            this.customSmartTableHeaders.forEach((tableHeader) => {
                if (originalHeaders.includes(tableHeader.propertyName) && !tableHeader.isHidden) {
                    this.tableHeaders.push(tableHeader.propertyName);
                    this.customTableHeaders.push(tableHeader.label);
                }
            });
        }
        else {
            this.customTableHeaders = this.tableHeaders;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnR0YWJsZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3NtYXJ0dGFibGUvc3JjL2xpYi9zbWFydHRhYmxlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUUxRCxNQUFNLENBQU4sSUFBWSxjQUdYO0FBSEQsV0FBWSxjQUFjO0lBQ3RCLDZEQUFTLENBQUE7SUFDVCw2REFBUyxDQUFBO0FBQ2IsQ0FBQyxFQUhXLGNBQWMsS0FBZCxjQUFjLFFBR3pCO0FBOEJELE1BQU0sT0FBTyxVQUFVO0lBV25CLFlBQ0ksU0FBYyxFQUNkLFNBQXlCLEVBQ3pCLHVCQUE0QyxFQUM1QyxLQUFjLEVBQ2QsVUFBb0IsRUFDcEIsT0FBNEI7UUFFNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLHVCQUF1QixHQUFHLHVCQUF1QixDQUFDO1FBRXZELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUV2QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUV2QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxTQUF5QjtRQUMzQyxJQUFJLFNBQVMsS0FBSyxjQUFjLENBQUMsU0FBUyxFQUFFO1lBQ3hDLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3pELElBQUksQ0FBQyxrQkFBa0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztZQUNyRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksY0FBYyxDQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNQLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUNyQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNyQztJQUNMLENBQUM7SUFFRCxlQUFlO1FBQ1gsSUFBSSxJQUFJLENBQUMsdUJBQXVCLElBQUksSUFBSSxDQUFDLHVCQUF1QixDQUFDLE1BQU0sRUFBRTtZQUNyRSxJQUFJLGVBQWUsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3hDLElBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUM7WUFDN0IsSUFBSSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFO2dCQUNqRCxJQUFJLGVBQWUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtvQkFDN0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO29CQUNqRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDbkQ7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO2FBQU07WUFDSCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUMvQztJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlbGVjdGlvbk1vZGVsIH0gZnJvbSBcIkBhbmd1bGFyL2Nkay9jb2xsZWN0aW9uc1wiO1xuXG5leHBvcnQgZW51bSBTbWFydFRhYmxlVHlwZSB7XG4gICAgSU5IRVJJVEVELFxuICAgIENIRUNLX0JPWCxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTbWFydFRhYmxlT3B0aW9uIHtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGljb24/OiBzdHJpbmc7XG4gICAgY2FsbGJhY2s6IChpZDogc3RyaW5nKSA9PiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU21hcnRUYWJsZUhlYWRlciB7XG4gICAgcHJvcGVydHlOYW1lOiBzdHJpbmc7XG4gICAgbGFiZWw6IHN0cmluZztcbiAgICBpc0hpZGRlbj86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU21hcnRUYWJsZUJ1dHRvbiB7XG4gICAgbGFibGU6IHN0cmluZztcbiAgICBpY29uPzogc3RyaW5nO1xuICAgIG9uQ2xpY2s/OiAoYXJncz86IGFueVtdKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNtYXJ0VGFibGVJbnRlcmZhY2U8VD4ge1xuICAgIHRpdGxlPzogc3RyaW5nO1xuICAgIHRhYmxlSGVhZGVyczogc3RyaW5nW107XG4gICAgY3VzdG9tU21hcnRUYWJsZUhlYWRlcnM/OiBTbWFydFRhYmxlSGVhZGVyW107XG4gICAgY3VzdG9tVGFibGVIZWFkZXJzOiBzdHJpbmdbXTtcbiAgICB0YWJsZVJvd3M6IFRbXTtcbiAgICB0YWJsZVR5cGU6IFNtYXJ0VGFibGVUeXBlO1xuICAgIG9wdGlvbnM/OiBTbWFydFRhYmxlT3B0aW9uW107XG59XG5cbmV4cG9ydCBjbGFzcyBTbWFydFRhYmxlPFQ+IGltcGxlbWVudHMgU21hcnRUYWJsZUludGVyZmFjZTxUPiB7XG4gICAgdGl0bGU/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgdGFibGVIZWFkZXJzOiBzdHJpbmdbXTtcbiAgICBjdXN0b21TbWFydFRhYmxlSGVhZGVycz86IFNtYXJ0VGFibGVIZWFkZXJbXTtcbiAgICBjdXN0b21UYWJsZUhlYWRlcnMhOiBzdHJpbmdbXTtcbiAgICB0YWJsZVJvd3M6IFRbXTtcbiAgICB0YWJsZVR5cGU6IFNtYXJ0VGFibGVUeXBlO1xuICAgIHNlbGVjdGlvbj86IFNlbGVjdGlvbk1vZGVsPFQ+O1xuICAgIGlzTXVsdGlwbGU/OiBib29sZWFuO1xuICAgIG9wdGlvbnM/OiBTbWFydFRhYmxlT3B0aW9uW107XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgdGFibGVSb3dzOiBUW10sXG4gICAgICAgIHRhYmxlVHlwZTogU21hcnRUYWJsZVR5cGUsXG4gICAgICAgIGN1c3RvbVNtYXJ0VGFibGVIZWFkZXJzPzogU21hcnRUYWJsZUhlYWRlcltdLFxuICAgICAgICB0aXRsZT86IHN0cmluZyxcbiAgICAgICAgaXNNdWx0aXBsZT86IGJvb2xlYW4sXG4gICAgICAgIG9wdGlvbnM/OiBTbWFydFRhYmxlT3B0aW9uW11cbiAgICApIHtcbiAgICAgICAgdGhpcy50YWJsZUhlYWRlcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0YWJsZVJvd3NbMF0pO1xuICAgICAgICB0aGlzLmN1c3RvbVNtYXJ0VGFibGVIZWFkZXJzID0gY3VzdG9tU21hcnRUYWJsZUhlYWRlcnM7XG5cbiAgICAgICAgdGhpcy5zZXRUYWJsZUhlYWRlcnMoKTtcblxuICAgICAgICB0aGlzLnRhYmxlUm93cyA9IHRhYmxlUm93cztcbiAgICAgICAgdGhpcy50YWJsZVR5cGUgPSB0YWJsZVR5cGU7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5pc011bHRpcGxlID0gaXNNdWx0aXBsZTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgICAgICB0aGlzLnB1c2hPcHRpb25zKCk7XG4gICAgICAgIHRoaXMuc2V0VGFibGVTZWxlY3Rpb25UeXBlKHRhYmxlVHlwZSk7XG4gICAgfVxuXG4gICAgc2V0VGFibGVTZWxlY3Rpb25UeXBlKHRhYmxlVHlwZTogU21hcnRUYWJsZVR5cGUpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRhYmxlVHlwZSAhPT0gU21hcnRUYWJsZVR5cGUuSU5IRVJJVEVEKSB7XG4gICAgICAgICAgICB0aGlzLnRhYmxlSGVhZGVycyA9IFtcInNlbGVjdFwiXS5jb25jYXQodGhpcy50YWJsZUhlYWRlcnMpO1xuICAgICAgICAgICAgdGhpcy5jdXN0b21UYWJsZUhlYWRlcnMgPSBbXCJzZWxlY3RcIl0uY29uY2F0KHRoaXMuY3VzdG9tVGFibGVIZWFkZXJzKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9uID0gbmV3IFNlbGVjdGlvbk1vZGVsPFQ+KHRoaXMuaXNNdWx0aXBsZSwgW10pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVzaE9wdGlvbnMoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy50YWJsZUhlYWRlcnMucHVzaChcIm9wdGlvbnNcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXRUYWJsZUhlYWRlcnMoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmN1c3RvbVNtYXJ0VGFibGVIZWFkZXJzICYmIHRoaXMuY3VzdG9tU21hcnRUYWJsZUhlYWRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBsZXQgb3JpZ2luYWxIZWFkZXJzID0gdGhpcy50YWJsZUhlYWRlcnM7XG4gICAgICAgICAgICB0aGlzLnRhYmxlSGVhZGVycyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5jdXN0b21UYWJsZUhlYWRlcnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuY3VzdG9tU21hcnRUYWJsZUhlYWRlcnMuZm9yRWFjaCgodGFibGVIZWFkZXIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAob3JpZ2luYWxIZWFkZXJzLmluY2x1ZGVzKHRhYmxlSGVhZGVyLnByb3BlcnR5TmFtZSkgJiYgIXRhYmxlSGVhZGVyLmlzSGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGVIZWFkZXJzLnB1c2godGFibGVIZWFkZXIucHJvcGVydHlOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXN0b21UYWJsZUhlYWRlcnMucHVzaCh0YWJsZUhlYWRlci5sYWJlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmN1c3RvbVRhYmxlSGVhZGVycyA9IHRoaXMudGFibGVIZWFkZXJzO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19