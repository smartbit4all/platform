import { SelectionModel } from '@angular/cdk/collections';
export var SmartTableType;
(function (SmartTableType) {
    SmartTableType[SmartTableType["INHERITED"] = 0] = "INHERITED";
    SmartTableType[SmartTableType["CHECK_BOX"] = 1] = "CHECK_BOX";
})(SmartTableType || (SmartTableType = {}));
export class SmartTable {
    constructor(tableRows, tableType, customTableHeaders, title, hideCols, isMultiple, options) {
        this.tableHeaders = Object.getOwnPropertyNames(tableRows[0]);
        if (customTableHeaders) {
            this.customTableHeaders = customTableHeaders;
        }
        else {
            this.customTableHeaders = this.tableHeaders;
        }
        this.tableRows = tableRows;
        this.tableType = tableType;
        this.title = title;
        this.hideCols = hideCols;
        this.isMultiple = isMultiple;
        this.options = options;
        if (this.options && this.options.length) {
            this.tableHeaders.push('options');
        }
        if (this.hideCols !== undefined && this.hideCols.length > 0) {
            this.hideCols.forEach((hideCol, index) => {
                hideCol -= index;
                this.tableHeaders.splice(hideCol, 1);
            });
        }
        if (tableType !== SmartTableType.INHERITED) {
            this.tableHeaders = ['select'].concat(this.tableHeaders);
            this.selection = new SelectionModel(this.isMultiple, []);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnR0YWJsZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3NtYXJ0dGFibGUvc3JjL2xpYi9zbWFydHRhYmxlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUUxRCxNQUFNLENBQU4sSUFBWSxjQUdYO0FBSEQsV0FBWSxjQUFjO0lBQ3pCLDZEQUFTLENBQUE7SUFDVCw2REFBUyxDQUFBO0FBQ1YsQ0FBQyxFQUhXLGNBQWMsS0FBZCxjQUFjLFFBR3pCO0FBa0JELE1BQU0sT0FBTyxVQUFVO0lBV3RCLFlBQ0MsU0FBYyxFQUNkLFNBQXlCLEVBQ3pCLGtCQUE2QixFQUM3QixLQUFjLEVBQ2QsUUFBbUIsRUFDbkIsVUFBb0IsRUFDcEIsT0FBNEI7UUFFNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0QsSUFBSSxrQkFBa0IsRUFBRTtZQUN2QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7U0FDN0M7YUFBTTtZQUNOLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1NBQzVDO1FBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7UUFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFdkIsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQ3hDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2xDO1FBRUQsSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLFNBQVMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDNUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUU7Z0JBQ3hDLE9BQU8sSUFBSSxLQUFLLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN0QyxDQUFDLENBQUMsQ0FBQztTQUNIO1FBRUQsSUFBSSxTQUFTLEtBQUssY0FBYyxDQUFDLFNBQVMsRUFBRTtZQUMzQyxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUN6RCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksY0FBYyxDQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7U0FDNUQ7SUFDRixDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZWxlY3Rpb25Nb2RlbCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2xsZWN0aW9ucyc7XG5cbmV4cG9ydCBlbnVtIFNtYXJ0VGFibGVUeXBlIHtcblx0SU5IRVJJVEVELFxuXHRDSEVDS19CT1hcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTbWFydFRhYmxlT3B0aW9uIHtcblx0bGFiZWw6IHN0cmluZztcblx0aWNvbj86IHN0cmluZztcblx0Y2FsbGJhY2s6IChpZDogc3RyaW5nKSA9PiBhbnk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU21hcnRUYWJsZUludGVyZmFjZTxUPiB7XG5cdHRpdGxlPzogc3RyaW5nO1xuXHR0YWJsZUhlYWRlcnM6IHN0cmluZ1tdO1xuXHRjdXN0b21UYWJsZUhlYWRlcnM6IHN0cmluZ1tdO1xuXHR0YWJsZVJvd3M6IFRbXTtcblx0dGFibGVUeXBlOiBTbWFydFRhYmxlVHlwZTtcblx0aGlkZUNvbHM/OiBudW1iZXJbXTtcblx0b3B0aW9ucz86IFNtYXJ0VGFibGVPcHRpb25bXTtcbn1cblxuZXhwb3J0IGNsYXNzIFNtYXJ0VGFibGU8VD4gaW1wbGVtZW50cyBTbWFydFRhYmxlSW50ZXJmYWNlPFQ+IHtcblx0dGl0bGU/OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG5cdHRhYmxlSGVhZGVyczogc3RyaW5nW107XG5cdGN1c3RvbVRhYmxlSGVhZGVyczogc3RyaW5nW107XG5cdHRhYmxlUm93czogVFtdO1xuXHR0YWJsZVR5cGU6IFNtYXJ0VGFibGVUeXBlO1xuXHRoaWRlQ29scz86IG51bWJlcltdIHwgdW5kZWZpbmVkO1xuXHRzZWxlY3Rpb24/OiBTZWxlY3Rpb25Nb2RlbDxUPjtcblx0aXNNdWx0aXBsZT86IGJvb2xlYW47XG5cdG9wdGlvbnM/OiBTbWFydFRhYmxlT3B0aW9uW107XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0dGFibGVSb3dzOiBUW10sXG5cdFx0dGFibGVUeXBlOiBTbWFydFRhYmxlVHlwZSxcblx0XHRjdXN0b21UYWJsZUhlYWRlcnM/OiBzdHJpbmdbXSxcblx0XHR0aXRsZT86IHN0cmluZyxcblx0XHRoaWRlQ29scz86IG51bWJlcltdLFxuXHRcdGlzTXVsdGlwbGU/OiBib29sZWFuLFxuXHRcdG9wdGlvbnM/OiBTbWFydFRhYmxlT3B0aW9uW11cblx0KSB7XG5cdFx0dGhpcy50YWJsZUhlYWRlcnMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0YWJsZVJvd3NbMF0pO1xuXHRcdGlmIChjdXN0b21UYWJsZUhlYWRlcnMpIHtcblx0XHRcdHRoaXMuY3VzdG9tVGFibGVIZWFkZXJzID0gY3VzdG9tVGFibGVIZWFkZXJzO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmN1c3RvbVRhYmxlSGVhZGVycyA9IHRoaXMudGFibGVIZWFkZXJzO1xuXHRcdH1cblx0XHR0aGlzLnRhYmxlUm93cyA9IHRhYmxlUm93cztcblx0XHR0aGlzLnRhYmxlVHlwZSA9IHRhYmxlVHlwZTtcblx0XHR0aGlzLnRpdGxlID0gdGl0bGU7XG5cdFx0dGhpcy5oaWRlQ29scyA9IGhpZGVDb2xzO1xuXHRcdHRoaXMuaXNNdWx0aXBsZSA9IGlzTXVsdGlwbGU7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuXHRcdGlmICh0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmxlbmd0aCkge1xuXHRcdFx0dGhpcy50YWJsZUhlYWRlcnMucHVzaCgnb3B0aW9ucycpO1xuXHRcdH1cblxuXHRcdGlmICh0aGlzLmhpZGVDb2xzICE9PSB1bmRlZmluZWQgJiYgdGhpcy5oaWRlQ29scy5sZW5ndGggPiAwKSB7XG5cdFx0XHR0aGlzLmhpZGVDb2xzLmZvckVhY2goKGhpZGVDb2wsIGluZGV4KSA9PiB7XG5cdFx0XHRcdGhpZGVDb2wgLT0gaW5kZXg7XG5cdFx0XHRcdHRoaXMudGFibGVIZWFkZXJzLnNwbGljZShoaWRlQ29sLCAxKTtcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGlmICh0YWJsZVR5cGUgIT09IFNtYXJ0VGFibGVUeXBlLklOSEVSSVRFRCkge1xuXHRcdFx0dGhpcy50YWJsZUhlYWRlcnMgPSBbJ3NlbGVjdCddLmNvbmNhdCh0aGlzLnRhYmxlSGVhZGVycyk7XG5cdFx0XHR0aGlzLnNlbGVjdGlvbiA9IG5ldyBTZWxlY3Rpb25Nb2RlbDxUPih0aGlzLmlzTXVsdGlwbGUsIFtdKTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==