{"version":3,"file":"smartbit4all-table.mjs","sources":["../../../projects/smarttable/src/lib/smarttable.service.ts","../../../projects/smarttable/src/lib/smarttable.model.ts","../../../projects/smarttable/src/lib/smarttable.component.ts","../../../projects/smarttable/src/lib/smarttable.component.html","../../../projects/smarttable/src/lib/smarttable.module.ts","../../../projects/smarttable/src/public-api.ts","../../../projects/smarttable/src/smartbit4all-table.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmarttableService {\n\n  constructor() { }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\n\nexport enum SmartTableType {\n\tINHERITED,\n\tCHECK_BOX\n}\n\nexport interface SmartTableOption {\n\tlabel: string;\n\ticon?: string;\n\tcallback: (id: string) => any;\n}\n\nexport interface SmartTableInterface<T> {\n\ttitle?: string;\n\ttableHeaders: string[];\n\tcustomTableHeaders: string[];\n\ttableRows: T[];\n\ttableType: SmartTableType;\n\thideCols?: number[];\n\toptions?: SmartTableOption[];\n}\n\nexport class SmartTable<T> implements SmartTableInterface<T> {\n\ttitle?: string | undefined;\n\ttableHeaders: string[];\n\tcustomTableHeaders: string[];\n\ttableRows: T[];\n\ttableType: SmartTableType;\n\thideCols?: number[] | undefined;\n\tselection?: SelectionModel<T>;\n\tisMultiple?: boolean;\n\toptions?: SmartTableOption[];\n\n\tconstructor(\n\t\ttableRows: T[],\n\t\ttableType: SmartTableType,\n\t\tcustomTableHeaders?: string[],\n\t\ttitle?: string,\n\t\thideCols?: number[],\n\t\tisMultiple?: boolean,\n\t\toptions?: SmartTableOption[]\n\t) {\n\t\tthis.tableHeaders = Object.getOwnPropertyNames(tableRows[0]);\n\t\tif (customTableHeaders) {\n\t\t\tthis.customTableHeaders = customTableHeaders;\n\t\t} else {\n\t\t\tthis.customTableHeaders = this.tableHeaders;\n\t\t}\n\t\tthis.tableRows = tableRows;\n\t\tthis.tableType = tableType;\n\t\tthis.title = title;\n\t\tthis.hideCols = hideCols;\n\t\tthis.isMultiple = isMultiple;\n\t\tthis.options = options;\n\n\t\tif (this.options && this.options.length) {\n\t\t\tthis.tableHeaders.push('options');\n\t\t}\n\n\t\tif (this.hideCols !== undefined && this.hideCols.length > 0) {\n\t\t\tthis.hideCols.forEach((hideCol, index) => {\n\t\t\t\thideCol -= index;\n\t\t\t\tthis.tableHeaders.splice(hideCol, 1);\n\t\t\t});\n\t\t}\n\n\t\tif (tableType !== SmartTableType.INHERITED) {\n\t\t\tthis.tableHeaders = ['select'].concat(this.tableHeaders);\n\t\t\tthis.selection = new SelectionModel<T>(this.isMultiple, []);\n\t\t}\n\t}\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SmartTable, SmartTableType } from './smarttable.model';\n\n@Component({\n\tselector: 'smarttable',\n\ttemplateUrl: './smarttable.component.html',\n\tstyleUrls: ['./smarttable.component.css']\n})\nexport class SmarttableComponent implements OnInit {\n\t@Input() smartTable!: SmartTable<any>;\n\ttableType = SmartTableType;\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n\n\tisAllSelected() {\n\t\tconst numSelected = this.smartTable.selection!.selected.length;\n\t\tconst numRows = this.smartTable.tableRows.length;\n\t\treturn numSelected === numRows;\n\t}\n\n\t/** Selects all rows if they are not all selected; otherwise clear selection. */\n\ttoggleAllRows() {\n\t\tif (this.isAllSelected()) {\n\t\t\tthis.smartTable.selection!.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.smartTable.selection!.select(...this.smartTable.tableRows);\n\t}\n\n\t/** The label for the checkbox on the passed row */\n\tcheckboxLabel(row?: any): string {\n\t\tif (!row) {\n\t\t\treturn `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n\t\t}\n\t\treturn `${this.smartTable.selection!.isSelected(row) ? 'deselect' : 'select'} row ${\n\t\t\trow.position + 1\n\t\t}`;\n\t}\n}\n","<table mat-table [dataSource]=\"smartTable.tableRows\" class=\"full-width\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Column Descriptor -->\n    <div *ngIf=\"smartTable.tableType === tableType.INHERITED\">\n        <ng-container\n            *ngFor=\"let header of smartTable.tableHeaders; let i = index\"\n            matColumnDef=\"{{ header }}\"\n        >\n            <th mat-header-cell *matHeaderCellDef>\n                <div *ngIf=\"header === 'icon' || header === 'options'\"></div>\n                <div *ngIf=\"header !== 'icon' && header !== 'options'\">\n                    {{ smartTable.customTableHeaders[i] }}\n                </div>\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-icon *ngIf=\"header === 'icon'\"> {{ element[header] }} </mat-icon>\n                <div *ngIf=\"header === 'options'\">\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"options\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            *ngFor=\"let option of smartTable.options\"\n                            mat-menu-item\n                            (click)=\"option.callback(element)\"\n                        >\n                            <mat-icon *ngIf=\"option.icon\">\n                                {{ option.icon }}\n                            </mat-icon>\n                            <span>\n                                {{ option.label }}\n                            </span>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div *ngIf=\"header !== 'icon'\">\n                    {{ element[header] }}\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: smartTable.tableHeaders\"></tr>\n    </div>\n    <div *ngIf=\"smartTable.tableType !== tableType.INHERITED\">\n        <!-- Checkbox Column -->\n        <ng-container matColumnDef=\"select\">\n            <th mat-header-cell *matHeaderCellDef>\n                <mat-checkbox\n                    (change)=\"$event ? toggleAllRows() : null\"\n                    [checked]=\"smartTable.selection!.hasValue() && isAllSelected()\"\n                    [indeterminate]=\"smartTable.selection!.hasValue() && !isAllSelected()\"\n                    [aria-label]=\"checkboxLabel()\"\n                >\n                </mat-checkbox>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox\n                    (click)=\"$event.stopPropagation()\"\n                    (change)=\"$event ? smartTable.selection!.toggle(row) : null\"\n                    [checked]=\"smartTable.selection!.isSelected(row)\"\n                    [aria-label]=\"checkboxLabel(row)\"\n                >\n                </mat-checkbox>\n            </td>\n        </ng-container>\n\n        <!-- Column Descriptor -->\n        <div *ngFor=\"let header of smartTable.tableHeaders\">\n            <ng-container *ngIf=\"header !== 'select'\" matColumnDef=\"{{ header }}\">\n                <th mat-header-cell *matHeaderCellDef>\n                    {{ header }}\n                </th>\n                <td mat-cell *matCellDef=\"let element\">{{ element[header] }}</td>\n            </ng-container>\n        </div>\n\n        <tr mat-header-row *matHeaderRowDef=\"smartTable.tableHeaders\"></tr>\n        <tr\n            mat-row\n            *matRowDef=\"let row; columns: smartTable.tableHeaders\"\n            (click)=\"smartTable.selection!.toggle(row)\"\n        ></tr>\n    </div>\n</table>\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from \"@angular/core\";\nimport { SmarttableComponent } from \"./smarttable.component\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatCommonModule } from \"@angular/material/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\n@NgModule({\n    declarations: [SmarttableComponent],\n    imports: [\n        BrowserModule,\n        MatCommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatTableModule,\n        MatIconModule,\n        MatMenuModule,\n    ],\n    exports: [SmarttableComponent],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SmarttableModule {}\n","/*\n * Public API Surface of smarttable\n */\n\nexport * from \"./lib/smarttable.service\";\nexport * from \"./lib/smarttable.component\";\nexport * from \"./lib/smarttable.module\";\nexport * from \"./lib/smarttable.model\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;MAKa,iBAAiB,CAAA;AAE5B,IAAA,WAAA,GAAA,GAAiB;;8GAFN,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACFW,IAAA,eAGX;AAHD,CAAA,UAAY,cAAc,EAAA;IACzB,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS,CAAA;IACT,cAAA,CAAA,cAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAS,CAAA;AACV,CAAC,EAHW,cAAc,KAAd,cAAc,GAGzB,EAAA,CAAA,CAAA,CAAA;MAkBY,UAAU,CAAA;AAWtB,IAAA,WAAA,CACC,SAAc,EACd,SAAyB,EACzB,kBAA6B,EAC7B,KAAc,EACd,QAAmB,EACnB,UAAoB,EACpB,OAA4B,EAAA;AAE5B,QAAA,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,QAAA,IAAI,kBAAkB,EAAE;AACvB,YAAA,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAC7C,SAAA;AAAM,aAAA;AACN,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC;AAC5C,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACxC,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClC,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,KAAI;gBACxC,OAAO,IAAI,KAAK,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACtC,aAAC,CAAC,CAAC;AACH,SAAA;AAED,QAAA,IAAI,SAAS,KAAK,cAAc,CAAC,SAAS,EAAE;AAC3C,YAAA,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAI,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AAC5D,SAAA;KACD;AACD;;MChEY,mBAAmB,CAAA;AAI/B,IAAA,WAAA,GAAA;AAFA,QAAA,IAAS,CAAA,SAAA,GAAG,cAAc,CAAC;KAEX;AAEhB,IAAA,QAAQ,MAAW;IAEnB,aAAa,GAAA;QACZ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC;QACjD,OAAO,WAAW,KAAK,OAAO,CAAC;KAC/B;;IAGD,aAAa,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACzB,YAAA,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,KAAK,EAAE,CAAC;YACnC,OAAO;AACP,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAChE;;AAGD,IAAA,aAAa,CAAC,GAAS,EAAA;QACtB,IAAI,CAAC,GAAG,EAAE;AACT,YAAA,OAAO,CAAG,EAAA,IAAI,CAAC,aAAa,EAAE,GAAG,UAAU,GAAG,QAAQ,MAAM,CAAC;AAC7D,SAAA;QACD,OAAO,CAAA,EAAG,IAAI,CAAC,UAAU,CAAC,SAAU,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAA,KAAA,EAC3E,GAAG,CAAC,QAAQ,GAAG,CAChB,CAAA,CAAE,CAAC;KACH;;gHAhCW,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,wFCRhC,83HAuFA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,eAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD/Ea,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACC,YAAY,EAAA,QAAA,EAAA,83HAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;0EAKb,UAAU,EAAA,CAAA;sBAAlB,KAAK;;;MEoBM,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAhBV,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAE9B,aAAa;QACb,eAAe;QACf,WAAW;QACX,mBAAmB;QACnB,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,cAAc;QACd,aAAa;QACb,aAAa,aAEP,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAGpB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAfhB,OAAA,EAAA,CAAA;YACL,aAAa;YACb,eAAe;YACf,WAAW;YACX,mBAAmB;YACnB,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,cAAc;YACd,aAAa;YACb,aAAa;SAChB,CAAA,EAAA,CAAA,CAAA;2FAIQ,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAjB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,YAAY,EAAE,CAAC,mBAAmB,CAAC;AACnC,oBAAA,OAAO,EAAE;wBACL,aAAa;wBACb,eAAe;wBACf,WAAW;wBACX,mBAAmB;wBACnB,kBAAkB;wBAClB,iBAAiB;wBACjB,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,aAAa;AAChB,qBAAA;oBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBACpC,CAAA;;;AC5BD;;AAEG;;ACFH;;AAEG;;;;"}