/*
 * Group selector api
 * Group selector ui api.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.bff.api.groupselector.bean;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.org.bean.Group;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * GroupEditingModel
 */
@JsonPropertyOrder({
  GroupEditingModel.GROUP,
  GroupEditingModel.POSSIBLE_GROUPS,
  GroupEditingModel.CHILD_GROUPS
})
@JsonTypeName("GroupEditingModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GroupEditingModel {
  public static final String GROUP = "group";
  private Group group = null;

  public static final String POSSIBLE_GROUPS = "possibleGroups";
  private List<Group> possibleGroups = null;

  public static final String CHILD_GROUPS = "childGroups";
  private List<URI> childGroups = null;

  public GroupEditingModel() { 
  }

  public GroupEditingModel group(Group group) {
    
    this.group = group;
    return this;
  }

   /**
   * The copy of the group object to edit
   * @return group
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The copy of the group object to edit")
  @JsonProperty(GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Group getGroup() {
    return group;
  }


  @JsonProperty(GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroup(Group group) {
    this.group = group;
  }


  public GroupEditingModel possibleGroups(List<Group> possibleGroups) {
    
    this.possibleGroups = possibleGroups;
    return this;
  }

  public GroupEditingModel addPossibleGroupsItem(Group possibleGroupsItem) {
    if (this.possibleGroups == null) {
      this.possibleGroups = new ArrayList<>();
    }
    this.possibleGroups.add(possibleGroupsItem);
    return this;
  }

   /**
   * The list of groups that exist within the current app. 
   * @return possibleGroups
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The list of groups that exist within the current app. ")
  @JsonProperty(POSSIBLE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Group> getPossibleGroups() {
    return possibleGroups;
  }


  @JsonProperty(POSSIBLE_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPossibleGroups(List<Group> possibleGroups) {
    this.possibleGroups = possibleGroups;
  }


  public GroupEditingModel childGroups(List<URI> childGroups) {
    
    this.childGroups = childGroups;
    return this;
  }

  public GroupEditingModel addChildGroupsItem(URI childGroupsItem) {
    if (this.childGroups == null) {
      this.childGroups = new ArrayList<>();
    }
    this.childGroups.add(childGroupsItem);
    return this;
  }

   /**
   * The list of groups that are considered child groups of the group. 
   * @return childGroups
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "The list of groups that are considered child groups of the group. ")
  @JsonProperty(CHILD_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<URI> getChildGroups() {
    return childGroups;
  }


  @JsonProperty(CHILD_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildGroups(List<URI> childGroups) {
    this.childGroups = childGroups;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupEditingModel groupEditingModel = (GroupEditingModel) o;
    return Objects.equals(this.group, groupEditingModel.group) &&
        Objects.equals(this.possibleGroups, groupEditingModel.possibleGroups) &&
        Objects.equals(this.childGroups, groupEditingModel.childGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(group, possibleGroups, childGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupEditingModel {\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    possibleGroups: ").append(toIndentedString(possibleGroups)).append("\n");
    sb.append("    childGroups: ").append(toIndentedString(childGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

