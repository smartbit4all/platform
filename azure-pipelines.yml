# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop

schedules:
- cron: "0 2 * * *"
  displayName: Daily midnight build
  always: true
  branches:
    include:
      - develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
- task: Cache@2
  inputs:
    key: 'gradle | "$(Agent.OS)" | **/build.gradle' # Swap build.gradle.kts for build.gradle when using Groovy
    restoreKeys: |
      gradle | "$(Agent.OS)"
      gradle
    path: $(GRADLE_USER_HOME)
  displayName: Configure gradle caching
- task: Gradle@2
  inputs:
    workingDirectory: 'platform'
    gradleWrapperFile: 'platform/gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean test --info'
    options: '--build-cache'
- script: |   
    # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
    ./platform/gradlew --stop    
  displayName: Build
