/*
 * Tree domain objects
 * Tree domain objects
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.tree.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.ui.api.tree.model.TreeNodeKind;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * TreeNode
 */
@JsonPropertyOrder({
  TreeNode.KIND,
  TreeNode.IDENTIFIER,
  TreeNode.CAPTION,
  TreeNode.SHORT_DESCRIPTION,
  TreeNode.ICON,
  TreeNode.ACTIONS,
  TreeNode.STYLES,
  TreeNode.CHILDREN_NODES,
  TreeNode.HAS_CHILDREN,
  TreeNode.EXPANDED,
  TreeNode.SELECTED,
  TreeNode.CHILDREN_NODES_LOADED,
  TreeNode.NAVIGATION_TARGET,
  TreeNode.LEVEL
})
@JsonTypeName("TreeNode")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TreeNode {
  public static final String KIND = "kind";
  private TreeNodeKind kind;

  public static final String IDENTIFIER = "identifier";
  private String identifier;

  public static final String CAPTION = "caption";
  private String caption;

  public static final String SHORT_DESCRIPTION = "shortDescription";
  private String shortDescription;

  public static final String ICON = "icon";
  private String icon;

  public static final String ACTIONS = "actions";
  private List<URI> actions = null;

  public static final String STYLES = "styles";
  private List<String> styles = null;

  public static final String CHILDREN_NODES = "childrenNodes";
  private List<TreeNode> childrenNodes = new ArrayList<>();

  public static final String HAS_CHILDREN = "hasChildren";
  private Boolean hasChildren = false;

  public static final String EXPANDED = "expanded";
  private Boolean expanded = false;

  public static final String SELECTED = "selected";
  private Boolean selected = false;

  public static final String CHILDREN_NODES_LOADED = "childrenNodesLoaded";
  private Boolean childrenNodesLoaded = false;

  public static final String NAVIGATION_TARGET = "navigationTarget";
  private org.smartbit4all.ui.api.navigation.model.NavigationTarget navigationTarget = null;

  public static final String LEVEL = "level";
  private Integer level;


  public TreeNode kind(TreeNodeKind kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TreeNodeKind getKind() {
    return kind;
  }


  @JsonProperty(KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKind(TreeNodeKind kind) {
    this.kind = kind;
  }


  public TreeNode identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public TreeNode caption(String caption) {
    
    this.caption = caption;
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCaption() {
    return caption;
  }


  @JsonProperty(CAPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaption(String caption) {
    this.caption = caption;
  }


  public TreeNode shortDescription(String shortDescription) {
    
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Get shortDescription
   * @return shortDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortDescription() {
    return shortDescription;
  }


  @JsonProperty(SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public TreeNode icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIcon() {
    return icon;
  }


  @JsonProperty(ICON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIcon(String icon) {
    this.icon = icon;
  }


  public TreeNode actions(List<URI> actions) {
    
    this.actions = actions;
    return this;
  }

  public TreeNode addActionsItem(URI actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<URI> getActions() {
    return actions;
  }


  @JsonProperty(ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActions(List<URI> actions) {
    this.actions = actions;
  }


  public TreeNode styles(List<String> styles) {
    
    this.styles = styles;
    return this;
  }

  public TreeNode addStylesItem(String stylesItem) {
    if (this.styles == null) {
      this.styles = new ArrayList<>();
    }
    this.styles.add(stylesItem);
    return this;
  }

   /**
   * Get styles
   * @return styles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getStyles() {
    return styles;
  }


  @JsonProperty(STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyles(List<String> styles) {
    this.styles = styles;
  }


  public TreeNode childrenNodes(List<TreeNode> childrenNodes) {
    
    this.childrenNodes = childrenNodes;
    return this;
  }

  public TreeNode addChildrenNodesItem(TreeNode childrenNodesItem) {
    this.childrenNodes.add(childrenNodesItem);
    return this;
  }

   /**
   * Get childrenNodes
   * @return childrenNodes
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(CHILDREN_NODES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TreeNode> getChildrenNodes() {
    return childrenNodes;
  }


  @JsonProperty(CHILDREN_NODES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildrenNodes(List<TreeNode> childrenNodes) {
    this.childrenNodes = childrenNodes;
  }


  public TreeNode hasChildren(Boolean hasChildren) {
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * Get hasChildren
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasChildren() {
    return hasChildren;
  }


  @JsonProperty(HAS_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public TreeNode expanded(Boolean expanded) {
    
    this.expanded = expanded;
    return this;
  }

   /**
   * Get expanded
   * @return expanded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpanded() {
    return expanded;
  }


  @JsonProperty(EXPANDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpanded(Boolean expanded) {
    this.expanded = expanded;
  }


  public TreeNode selected(Boolean selected) {
    
    this.selected = selected;
    return this;
  }

   /**
   * Get selected
   * @return selected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSelected() {
    return selected;
  }


  @JsonProperty(SELECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelected(Boolean selected) {
    this.selected = selected;
  }


  public TreeNode childrenNodesLoaded(Boolean childrenNodesLoaded) {
    
    this.childrenNodesLoaded = childrenNodesLoaded;
    return this;
  }

   /**
   * Get childrenNodesLoaded
   * @return childrenNodesLoaded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CHILDREN_NODES_LOADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChildrenNodesLoaded() {
    return childrenNodesLoaded;
  }


  @JsonProperty(CHILDREN_NODES_LOADED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildrenNodesLoaded(Boolean childrenNodesLoaded) {
    this.childrenNodesLoaded = childrenNodesLoaded;
  }


  public TreeNode navigationTarget(org.smartbit4all.ui.api.navigation.model.NavigationTarget navigationTarget) {
    
    this.navigationTarget = navigationTarget;
    return this;
  }

   /**
   * Get navigationTarget
   * @return navigationTarget
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(NAVIGATION_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.smartbit4all.ui.api.navigation.model.NavigationTarget getNavigationTarget() {
    return navigationTarget;
  }


  @JsonProperty(NAVIGATION_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigationTarget(org.smartbit4all.ui.api.navigation.model.NavigationTarget navigationTarget) {
    this.navigationTarget = navigationTarget;
  }


  public TreeNode level(Integer level) {
    
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLevel() {
    return level;
  }


  @JsonProperty(LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevel(Integer level) {
    this.level = level;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TreeNode treeNode = (TreeNode) o;
    return Objects.equals(this.kind, treeNode.kind) &&
        Objects.equals(this.identifier, treeNode.identifier) &&
        Objects.equals(this.caption, treeNode.caption) &&
        Objects.equals(this.shortDescription, treeNode.shortDescription) &&
        Objects.equals(this.icon, treeNode.icon) &&
        Objects.equals(this.actions, treeNode.actions) &&
        Objects.equals(this.styles, treeNode.styles) &&
        Objects.equals(this.childrenNodes, treeNode.childrenNodes) &&
        Objects.equals(this.hasChildren, treeNode.hasChildren) &&
        Objects.equals(this.expanded, treeNode.expanded) &&
        Objects.equals(this.selected, treeNode.selected) &&
        Objects.equals(this.childrenNodesLoaded, treeNode.childrenNodesLoaded) &&
        Objects.equals(this.navigationTarget, treeNode.navigationTarget) &&
        Objects.equals(this.level, treeNode.level);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, identifier, caption, shortDescription, icon, actions, styles, childrenNodes, hasChildren, expanded, selected, childrenNodesLoaded, navigationTarget, level);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TreeNode {\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    styles: ").append(toIndentedString(styles)).append("\n");
    sb.append("    childrenNodes: ").append(toIndentedString(childrenNodes)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    expanded: ").append(toIndentedString(expanded)).append("\n");
    sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
    sb.append("    childrenNodesLoaded: ").append(toIndentedString(childrenNodesLoaded)).append("\n");
    sb.append("    navigationTarget: ").append(toIndentedString(navigationTarget)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

