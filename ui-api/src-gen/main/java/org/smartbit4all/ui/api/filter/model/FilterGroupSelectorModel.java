/*
 * Filter API
 * Filter API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.filter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.ui.api.filter.model.FilterFieldSelectorModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * FilterGroupSelectorModel
 */
@JsonPropertyOrder({
  FilterGroupSelectorModel.LABEL_CODE,
  FilterGroupSelectorModel.ICON_CODE,
  FilterGroupSelectorModel.GROUP_TYPE,
  FilterGroupSelectorModel.FILTERS,
  FilterGroupSelectorModel.CLOSEABLE,
  FilterGroupSelectorModel.VISIBLE,
  FilterGroupSelectorModel.CURRENT_GROUP_ID
})
@JsonTypeName("FilterGroupSelectorModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterGroupSelectorModel {
  public static final String LABEL_CODE = "labelCode";
  private String labelCode;

  public static final String ICON_CODE = "iconCode";
  private String iconCode;

  public static final String GROUP_TYPE = "groupType";
  private org.smartbit4all.api.filter.bean.FilterGroupType groupType = null;

  public static final String FILTERS = "filters";
  private List<FilterFieldSelectorModel> filters = new ArrayList<>();

  public static final String CLOSEABLE = "closeable";
  private Boolean closeable;

  public static final String VISIBLE = "visible";
  private Boolean visible;

  public static final String CURRENT_GROUP_ID = "currentGroupId";
  private String currentGroupId;


  public FilterGroupSelectorModel labelCode(String labelCode) {
    
    this.labelCode = labelCode;
    return this;
  }

   /**
   * Get labelCode
   * @return labelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(LABEL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabelCode() {
    return labelCode;
  }


  @JsonProperty(LABEL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabelCode(String labelCode) {
    this.labelCode = labelCode;
  }


  public FilterGroupSelectorModel iconCode(String iconCode) {
    
    this.iconCode = iconCode;
    return this;
  }

   /**
   * Get iconCode
   * @return iconCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ICON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconCode() {
    return iconCode;
  }


  @JsonProperty(ICON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconCode(String iconCode) {
    this.iconCode = iconCode;
  }


  public FilterGroupSelectorModel groupType(org.smartbit4all.api.filter.bean.FilterGroupType groupType) {
    
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.smartbit4all.api.filter.bean.FilterGroupType getGroupType() {
    return groupType;
  }


  @JsonProperty(GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupType(org.smartbit4all.api.filter.bean.FilterGroupType groupType) {
    this.groupType = groupType;
  }


  public FilterGroupSelectorModel filters(List<FilterFieldSelectorModel> filters) {
    
    this.filters = filters;
    return this;
  }

  public FilterGroupSelectorModel addFiltersItem(FilterFieldSelectorModel filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(FILTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FilterFieldSelectorModel> getFilters() {
    return filters;
  }


  @JsonProperty(FILTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilters(List<FilterFieldSelectorModel> filters) {
    this.filters = filters;
  }


  public FilterGroupSelectorModel closeable(Boolean closeable) {
    
    this.closeable = closeable;
    return this;
  }

   /**
   * Get closeable
   * @return closeable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloseable() {
    return closeable;
  }


  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloseable(Boolean closeable) {
    this.closeable = closeable;
  }


  public FilterGroupSelectorModel visible(Boolean visible) {
    
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  @JsonProperty(VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  public FilterGroupSelectorModel currentGroupId(String currentGroupId) {
    
    this.currentGroupId = currentGroupId;
    return this;
  }

   /**
   * Get currentGroupId
   * @return currentGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CURRENT_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentGroupId() {
    return currentGroupId;
  }


  @JsonProperty(CURRENT_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentGroupId(String currentGroupId) {
    this.currentGroupId = currentGroupId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterGroupSelectorModel filterGroupSelectorModel = (FilterGroupSelectorModel) o;
    return Objects.equals(this.labelCode, filterGroupSelectorModel.labelCode) &&
        Objects.equals(this.iconCode, filterGroupSelectorModel.iconCode) &&
        Objects.equals(this.groupType, filterGroupSelectorModel.groupType) &&
        Objects.equals(this.filters, filterGroupSelectorModel.filters) &&
        Objects.equals(this.closeable, filterGroupSelectorModel.closeable) &&
        Objects.equals(this.visible, filterGroupSelectorModel.visible) &&
        Objects.equals(this.currentGroupId, filterGroupSelectorModel.currentGroupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(labelCode, iconCode, groupType, filters, closeable, visible, currentGroupId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterGroupSelectorModel {\n");
    sb.append("    labelCode: ").append(toIndentedString(labelCode)).append("\n");
    sb.append("    iconCode: ").append(toIndentedString(iconCode)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    closeable: ").append(toIndentedString(closeable)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    currentGroupId: ").append(toIndentedString(currentGroupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

