/*
 * Navigation API
 * Navigation API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.navigation.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.smartbit4all.ui.api.navigation.model.MessageResult;
import org.smartbit4all.ui.api.navigation.model.MessageType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Message
 */
@JsonPropertyOrder({
  Message.UUID,
  Message.VIEW_MODEL_UUID,
  Message.TYPE,
  Message.HEADER,
  Message.TEXT,
  Message.POSSIBLE_RESULTS,
  Message.SELECT_RESULT
})
@JsonTypeName("Message")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Message {
  public static final String UUID = "uuid";
  private UUID uuid;

  public static final String VIEW_MODEL_UUID = "viewModelUuid";
  private UUID viewModelUuid;

  public static final String TYPE = "type";
  private MessageType type;

  public static final String HEADER = "header";
  private String header;

  public static final String TEXT = "text";
  private String text;

  public static final String POSSIBLE_RESULTS = "possibleResults";
  private List<MessageResult> possibleResults = new ArrayList<>();

  public static final String SELECT_RESULT = "selectResult";
  private MessageResult selectResult;


  public Message uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique identifier of message. Will be generated if left empty.
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "Unique identifier of message. Will be generated if left empty.")
  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public Message viewModelUuid(UUID viewModelUuid) {
    
    this.viewModelUuid = viewModelUuid;
    return this;
  }

   /**
   * Identifier of viewModel to refresh after message is answered.
   * @return viewModelUuid
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "Identifier of viewModel to refresh after message is answered.")
  @JsonProperty(VIEW_MODEL_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getViewModelUuid() {
    return viewModelUuid;
  }


  @JsonProperty(VIEW_MODEL_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewModelUuid(UUID viewModelUuid) {
    this.viewModelUuid = viewModelUuid;
  }


  public Message type(MessageType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MessageType getType() {
    return type;
  }


  @JsonProperty(TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(MessageType type) {
    this.type = type;
  }


  public Message header(String header) {
    
    this.header = header;
    return this;
  }

   /**
   * Get header
   * @return header
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHeader() {
    return header;
  }


  @JsonProperty(HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeader(String header) {
    this.header = header;
  }


  public Message text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public Message possibleResults(List<MessageResult> possibleResults) {
    
    this.possibleResults = possibleResults;
    return this;
  }

  public Message addPossibleResultsItem(MessageResult possibleResultsItem) {
    this.possibleResults.add(possibleResultsItem);
    return this;
  }

   /**
   * Get possibleResults
   * @return possibleResults
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(POSSIBLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<MessageResult> getPossibleResults() {
    return possibleResults;
  }


  @JsonProperty(POSSIBLE_RESULTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPossibleResults(List<MessageResult> possibleResults) {
    this.possibleResults = possibleResults;
  }


  public Message selectResult(MessageResult selectResult) {
    
    this.selectResult = selectResult;
    return this;
  }

   /**
   * Get selectResult
   * @return selectResult
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SELECT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessageResult getSelectResult() {
    return selectResult;
  }


  @JsonProperty(SELECT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectResult(MessageResult selectResult) {
    this.selectResult = selectResult;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Message message = (Message) o;
    return Objects.equals(this.uuid, message.uuid) &&
        Objects.equals(this.viewModelUuid, message.viewModelUuid) &&
        Objects.equals(this.type, message.type) &&
        Objects.equals(this.header, message.header) &&
        Objects.equals(this.text, message.text) &&
        Objects.equals(this.possibleResults, message.possibleResults) &&
        Objects.equals(this.selectResult, message.selectResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, viewModelUuid, type, header, text, possibleResults, selectResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Message {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    viewModelUuid: ").append(toIndentedString(viewModelUuid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    possibleResults: ").append(toIndentedString(possibleResults)).append("\n");
    sb.append("    selectResult: ").append(toIndentedString(selectResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

