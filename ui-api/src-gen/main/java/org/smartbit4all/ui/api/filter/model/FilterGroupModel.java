/*
 * Filter API
 * Filter API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.filter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.ui.api.filter.model.FilterFieldModel;
import org.smartbit4all.ui.api.filter.model.FilterGroupLabel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * FilterGroupModel
 */
@JsonPropertyOrder({
  FilterGroupModel.ID,
  FilterGroupModel.GROUP_TYPE,
  FilterGroupModel.LABEL,
  FilterGroupModel.CLOSEABLE,
  FilterGroupModel.ROOT,
  FilterGroupModel.VISIBLE,
  FilterGroupModel.ACTIVE,
  FilterGroupModel.CHILD_GROUP_ALLOWED,
  FilterGroupModel.GROUP_TYPE_CHANGE_ENABLED,
  FilterGroupModel.NEGATED,
  FilterGroupModel.GROUPS,
  FilterGroupModel.FILTERS,
  FilterGroupModel.ENABLED
})
@JsonTypeName("FilterGroupModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterGroupModel {
  public static final String ID = "id";
  private String id;

  public static final String GROUP_TYPE = "groupType";
  private org.smartbit4all.api.filter.bean.FilterGroupType groupType = null;

  public static final String LABEL = "label";
  private FilterGroupLabel label;

  public static final String CLOSEABLE = "closeable";
  private Boolean closeable = false;

  public static final String ROOT = "root";
  private Boolean root = false;

  public static final String VISIBLE = "visible";
  private Boolean visible = true;

  public static final String ACTIVE = "active";
  private Boolean active = false;

  public static final String CHILD_GROUP_ALLOWED = "childGroupAllowed";
  private Boolean childGroupAllowed = false;

  public static final String GROUP_TYPE_CHANGE_ENABLED = "groupTypeChangeEnabled";
  private Boolean groupTypeChangeEnabled = false;

  public static final String NEGATED = "negated";
  private Boolean negated = false;

  public static final String GROUPS = "groups";
  private List<FilterGroupModel> groups = new ArrayList<>();

  public static final String FILTERS = "filters";
  private List<FilterFieldModel> filters = new ArrayList<>();

  public static final String ENABLED = "enabled";
  private Boolean enabled = true;


  public FilterGroupModel id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public FilterGroupModel groupType(org.smartbit4all.api.filter.bean.FilterGroupType groupType) {
    
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public org.smartbit4all.api.filter.bean.FilterGroupType getGroupType() {
    return groupType;
  }


  @JsonProperty(GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupType(org.smartbit4all.api.filter.bean.FilterGroupType groupType) {
    this.groupType = groupType;
  }


  public FilterGroupModel label(FilterGroupLabel label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterGroupLabel getLabel() {
    return label;
  }


  @JsonProperty(LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(FilterGroupLabel label) {
    this.label = label;
  }


  public FilterGroupModel closeable(Boolean closeable) {
    
    this.closeable = closeable;
    return this;
  }

   /**
   * Get closeable
   * @return closeable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloseable() {
    return closeable;
  }


  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloseable(Boolean closeable) {
    this.closeable = closeable;
  }


  public FilterGroupModel root(Boolean root) {
    
    this.root = root;
    return this;
  }

   /**
   * Get root
   * @return root
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRoot() {
    return root;
  }


  @JsonProperty(ROOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoot(Boolean root) {
    this.root = root;
  }


  public FilterGroupModel visible(Boolean visible) {
    
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisible() {
    return visible;
  }


  @JsonProperty(VISIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  public FilterGroupModel active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public FilterGroupModel childGroupAllowed(Boolean childGroupAllowed) {
    
    this.childGroupAllowed = childGroupAllowed;
    return this;
  }

   /**
   * Get childGroupAllowed
   * @return childGroupAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CHILD_GROUP_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getChildGroupAllowed() {
    return childGroupAllowed;
  }


  @JsonProperty(CHILD_GROUP_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildGroupAllowed(Boolean childGroupAllowed) {
    this.childGroupAllowed = childGroupAllowed;
  }


  public FilterGroupModel groupTypeChangeEnabled(Boolean groupTypeChangeEnabled) {
    
    this.groupTypeChangeEnabled = groupTypeChangeEnabled;
    return this;
  }

   /**
   * Get groupTypeChangeEnabled
   * @return groupTypeChangeEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(GROUP_TYPE_CHANGE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGroupTypeChangeEnabled() {
    return groupTypeChangeEnabled;
  }


  @JsonProperty(GROUP_TYPE_CHANGE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupTypeChangeEnabled(Boolean groupTypeChangeEnabled) {
    this.groupTypeChangeEnabled = groupTypeChangeEnabled;
  }


  public FilterGroupModel negated(Boolean negated) {
    
    this.negated = negated;
    return this;
  }

   /**
   * Get negated
   * @return negated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(NEGATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNegated() {
    return negated;
  }


  @JsonProperty(NEGATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegated(Boolean negated) {
    this.negated = negated;
  }


  public FilterGroupModel groups(List<FilterGroupModel> groups) {
    
    this.groups = groups;
    return this;
  }

  public FilterGroupModel addGroupsItem(FilterGroupModel groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FilterGroupModel> getGroups() {
    return groups;
  }


  @JsonProperty(GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroups(List<FilterGroupModel> groups) {
    this.groups = groups;
  }


  public FilterGroupModel filters(List<FilterFieldModel> filters) {
    
    this.filters = filters;
    return this;
  }

  public FilterGroupModel addFiltersItem(FilterFieldModel filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(FILTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FilterFieldModel> getFilters() {
    return filters;
  }


  @JsonProperty(FILTERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilters(List<FilterFieldModel> filters) {
    this.filters = filters;
  }


  public FilterGroupModel enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterGroupModel filterGroupModel = (FilterGroupModel) o;
    return Objects.equals(this.id, filterGroupModel.id) &&
        Objects.equals(this.groupType, filterGroupModel.groupType) &&
        Objects.equals(this.label, filterGroupModel.label) &&
        Objects.equals(this.closeable, filterGroupModel.closeable) &&
        Objects.equals(this.root, filterGroupModel.root) &&
        Objects.equals(this.visible, filterGroupModel.visible) &&
        Objects.equals(this.active, filterGroupModel.active) &&
        Objects.equals(this.childGroupAllowed, filterGroupModel.childGroupAllowed) &&
        Objects.equals(this.groupTypeChangeEnabled, filterGroupModel.groupTypeChangeEnabled) &&
        Objects.equals(this.negated, filterGroupModel.negated) &&
        Objects.equals(this.groups, filterGroupModel.groups) &&
        Objects.equals(this.filters, filterGroupModel.filters) &&
        Objects.equals(this.enabled, filterGroupModel.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, groupType, label, closeable, root, visible, active, childGroupAllowed, groupTypeChangeEnabled, negated, groups, filters, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterGroupModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    closeable: ").append(toIndentedString(closeable)).append("\n");
    sb.append("    root: ").append(toIndentedString(root)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    childGroupAllowed: ").append(toIndentedString(childGroupAllowed)).append("\n");
    sb.append("    groupTypeChangeEnabled: ").append(toIndentedString(groupTypeChangeEnabled)).append("\n");
    sb.append("    negated: ").append(toIndentedString(negated)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

