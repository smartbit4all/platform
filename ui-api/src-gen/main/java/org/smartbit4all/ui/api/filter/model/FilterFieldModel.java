/*
 * Filter API
 * Filter API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.filter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.smartbit4all.api.filter.bean.FilterOperation;
import org.smartbit4all.api.value.bean.Value;
import org.smartbit4all.ui.api.filter.model.FilterFieldLabel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * FilterFieldModel
 */
@JsonPropertyOrder({
  FilterFieldModel.SELECTOR_ID,
  FilterFieldModel.LABEL,
  FilterFieldModel.CLOSEABLE,
  FilterFieldModel.DRAGGABLE,
  FilterFieldModel.SELECTED_OPERATION,
  FilterFieldModel.OPERATIONS,
  FilterFieldModel.POSSIBLE_VALUES,
  FilterFieldModel.SELECTED_VALUES,
  FilterFieldModel.SELECTED_VALUE,
  FilterFieldModel.VALUE1,
  FilterFieldModel.VALUE2,
  FilterFieldModel.VALUE3,
  FilterFieldModel.VALUE4,
  FilterFieldModel.ENABLED
})
@JsonTypeName("FilterFieldModel")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FilterFieldModel {
  public static final String SELECTOR_ID = "selectorId";
  private String selectorId;

  public static final String LABEL = "label";
  private FilterFieldLabel label;

  public static final String CLOSEABLE = "closeable";
  private Boolean closeable;

  public static final String DRAGGABLE = "draggable";
  private Boolean draggable;

  public static final String SELECTED_OPERATION = "selectedOperation";
  private FilterOperation selectedOperation = null;

  public static final String OPERATIONS = "operations";
  private List<FilterOperation> operations = new ArrayList<>();

  public static final String POSSIBLE_VALUES = "possibleValues";
  private List<Value> possibleValues = new ArrayList<>();

  public static final String SELECTED_VALUES = "selectedValues";
  private List<Value> selectedValues = new ArrayList<>();

  public static final String SELECTED_VALUE = "selectedValue";
  private Value selectedValue = null;

  public static final String VALUE1 = "value1";
  private String value1;

  public static final String VALUE2 = "value2";
  private String value2;

  public static final String VALUE3 = "value3";
  private String value3;

  public static final String VALUE4 = "value4";
  private String value4;

  public static final String ENABLED = "enabled";
  private Boolean enabled = true;

  public FilterFieldModel() { 
  }

  public FilterFieldModel selectorId(String selectorId) {
    
    this.selectorId = selectorId;
    return this;
  }

   /**
   * Get selectorId
   * @return selectorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelectorId() {
    return selectorId;
  }


  @JsonProperty(SELECTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectorId(String selectorId) {
    this.selectorId = selectorId;
  }


  public FilterFieldModel label(FilterFieldLabel label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterFieldLabel getLabel() {
    return label;
  }


  @JsonProperty(LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(FilterFieldLabel label) {
    this.label = label;
  }


  public FilterFieldModel closeable(Boolean closeable) {
    
    this.closeable = closeable;
    return this;
  }

   /**
   * Get closeable
   * @return closeable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getCloseable() {
    return closeable;
  }


  @JsonProperty(CLOSEABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloseable(Boolean closeable) {
    this.closeable = closeable;
  }


  public FilterFieldModel draggable(Boolean draggable) {
    
    this.draggable = draggable;
    return this;
  }

   /**
   * Get draggable
   * @return draggable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(DRAGGABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDraggable() {
    return draggable;
  }


  @JsonProperty(DRAGGABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDraggable(Boolean draggable) {
    this.draggable = draggable;
  }


  public FilterFieldModel selectedOperation(FilterOperation selectedOperation) {
    
    this.selectedOperation = selectedOperation;
    return this;
  }

   /**
   * Get selectedOperation
   * @return selectedOperation
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterOperation getSelectedOperation() {
    return selectedOperation;
  }


  @JsonProperty(SELECTED_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedOperation(FilterOperation selectedOperation) {
    this.selectedOperation = selectedOperation;
  }


  public FilterFieldModel operations(List<FilterOperation> operations) {
    
    this.operations = operations;
    return this;
  }

  public FilterFieldModel addOperationsItem(FilterOperation operationsItem) {
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FilterOperation> getOperations() {
    return operations;
  }


  @JsonProperty(OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperations(List<FilterOperation> operations) {
    this.operations = operations;
  }


  public FilterFieldModel possibleValues(List<Value> possibleValues) {
    
    this.possibleValues = possibleValues;
    return this;
  }

  public FilterFieldModel addPossibleValuesItem(Value possibleValuesItem) {
    this.possibleValues.add(possibleValuesItem);
    return this;
  }

   /**
   * Get possibleValues
   * @return possibleValues
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(POSSIBLE_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Value> getPossibleValues() {
    return possibleValues;
  }


  @JsonProperty(POSSIBLE_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPossibleValues(List<Value> possibleValues) {
    this.possibleValues = possibleValues;
  }


  public FilterFieldModel selectedValues(List<Value> selectedValues) {
    
    this.selectedValues = selectedValues;
    return this;
  }

  public FilterFieldModel addSelectedValuesItem(Value selectedValuesItem) {
    this.selectedValues.add(selectedValuesItem);
    return this;
  }

   /**
   * Get selectedValues
   * @return selectedValues
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(SELECTED_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Value> getSelectedValues() {
    return selectedValues;
  }


  @JsonProperty(SELECTED_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelectedValues(List<Value> selectedValues) {
    this.selectedValues = selectedValues;
  }


  public FilterFieldModel selectedValue(Value selectedValue) {
    
    this.selectedValue = selectedValue;
    return this;
  }

   /**
   * Get selectedValue
   * @return selectedValue
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(SELECTED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Value getSelectedValue() {
    return selectedValue;
  }


  @JsonProperty(SELECTED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelectedValue(Value selectedValue) {
    this.selectedValue = selectedValue;
  }


  public FilterFieldModel value1(String value1) {
    
    this.value1 = value1;
    return this;
  }

   /**
   * Get value1
   * @return value1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VALUE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue1() {
    return value1;
  }


  @JsonProperty(VALUE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue1(String value1) {
    this.value1 = value1;
  }


  public FilterFieldModel value2(String value2) {
    
    this.value2 = value2;
    return this;
  }

   /**
   * Get value2
   * @return value2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VALUE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue2() {
    return value2;
  }


  @JsonProperty(VALUE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue2(String value2) {
    this.value2 = value2;
  }


  public FilterFieldModel value3(String value3) {
    
    this.value3 = value3;
    return this;
  }

   /**
   * Get value3
   * @return value3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VALUE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue3() {
    return value3;
  }


  @JsonProperty(VALUE3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue3(String value3) {
    this.value3 = value3;
  }


  public FilterFieldModel value4(String value4) {
    
    this.value4 = value4;
    return this;
  }

   /**
   * Get value4
   * @return value4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(VALUE4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue4() {
    return value4;
  }


  @JsonProperty(VALUE4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue4(String value4) {
    this.value4 = value4;
  }


  public FilterFieldModel enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterFieldModel filterFieldModel = (FilterFieldModel) o;
    return Objects.equals(this.selectorId, filterFieldModel.selectorId) &&
        Objects.equals(this.label, filterFieldModel.label) &&
        Objects.equals(this.closeable, filterFieldModel.closeable) &&
        Objects.equals(this.draggable, filterFieldModel.draggable) &&
        Objects.equals(this.selectedOperation, filterFieldModel.selectedOperation) &&
        Objects.equals(this.operations, filterFieldModel.operations) &&
        Objects.equals(this.possibleValues, filterFieldModel.possibleValues) &&
        Objects.equals(this.selectedValues, filterFieldModel.selectedValues) &&
        Objects.equals(this.selectedValue, filterFieldModel.selectedValue) &&
        Objects.equals(this.value1, filterFieldModel.value1) &&
        Objects.equals(this.value2, filterFieldModel.value2) &&
        Objects.equals(this.value3, filterFieldModel.value3) &&
        Objects.equals(this.value4, filterFieldModel.value4) &&
        Objects.equals(this.enabled, filterFieldModel.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(selectorId, label, closeable, draggable, selectedOperation, operations, possibleValues, selectedValues, selectedValue, value1, value2, value3, value4, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterFieldModel {\n");
    sb.append("    selectorId: ").append(toIndentedString(selectorId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    closeable: ").append(toIndentedString(closeable)).append("\n");
    sb.append("    draggable: ").append(toIndentedString(draggable)).append("\n");
    sb.append("    selectedOperation: ").append(toIndentedString(selectedOperation)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    possibleValues: ").append(toIndentedString(possibleValues)).append("\n");
    sb.append("    selectedValues: ").append(toIndentedString(selectedValues)).append("\n");
    sb.append("    selectedValue: ").append(toIndentedString(selectedValue)).append("\n");
    sb.append("    value1: ").append(toIndentedString(value1)).append("\n");
    sb.append("    value2: ").append(toIndentedString(value2)).append("\n");
    sb.append("    value3: ").append(toIndentedString(value3)).append("\n");
    sb.append("    value4: ").append(toIndentedString(value4)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

