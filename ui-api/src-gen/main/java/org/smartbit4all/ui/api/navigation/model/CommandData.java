/*
 * Navigation API
 * Navigation API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.navigation.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * CommandData
 */
@JsonPropertyOrder({
  CommandData.MODEL,
  CommandData.COMMAND_PATH,
  CommandData.COMMAND_CODE,
  CommandData.PARAMS
})
@JsonTypeName("CommandData")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommandData {
  public static final String MODEL = "model";
  private Object model;

  public static final String COMMAND_PATH = "commandPath";
  private String commandPath;

  public static final String COMMAND_CODE = "commandCode";
  private String commandCode;

  public static final String PARAMS = "params";
  private List<Object> params = null;

  public CommandData() { 
  }

  public CommandData model(Object model) {
    
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getModel() {
    return model;
  }


  @JsonProperty(MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModel(Object model) {
    this.model = model;
  }


  public CommandData commandPath(String commandPath) {
    
    this.commandPath = commandPath;
    return this;
  }

   /**
   * Get commandPath
   * @return commandPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(COMMAND_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandPath() {
    return commandPath;
  }


  @JsonProperty(COMMAND_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandPath(String commandPath) {
    this.commandPath = commandPath;
  }


  public CommandData commandCode(String commandCode) {
    
    this.commandCode = commandCode;
    return this;
  }

   /**
   * Get commandCode
   * @return commandCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(COMMAND_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandCode() {
    return commandCode;
  }


  @JsonProperty(COMMAND_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandCode(String commandCode) {
    this.commandCode = commandCode;
  }


  public CommandData params(List<Object> params) {
    
    this.params = params;
    return this;
  }

  public CommandData addParamsItem(Object paramsItem) {
    if (this.params == null) {
      this.params = new ArrayList<>();
    }
    this.params.add(paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getParams() {
    return params;
  }


  @JsonProperty(PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParams(List<Object> params) {
    this.params = params;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandData commandData = (CommandData) o;
    return Objects.equals(this.model, commandData.model) &&
        Objects.equals(this.commandPath, commandData.commandPath) &&
        Objects.equals(this.commandCode, commandData.commandCode) &&
        Objects.equals(this.params, commandData.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(model, commandPath, commandCode, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandData {\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    commandPath: ").append(toIndentedString(commandPath)).append("\n");
    sb.append("    commandCode: ").append(toIndentedString(commandCode)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

