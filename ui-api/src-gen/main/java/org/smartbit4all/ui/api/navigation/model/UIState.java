/*
 * Navigation API
 * Navigation API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@it4all.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.smartbit4all.ui.api.navigation.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.smartbit4all.ui.api.navigation.model.Message;
import org.smartbit4all.ui.api.navigation.model.NavigationTarget;
import org.smartbit4all.ui.api.navigation.model.ViewModelData;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * UIState
 */
@JsonPropertyOrder({
  UIState.UUID,
  UIState.UI_TO_OPEN,
  UIState.MESSAGE_TO_OPEN,
  UIState.VIEWS
})
@JsonTypeName("UIState")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UIState {
  public static final String UUID = "uuid";
  private UUID uuid;

  public static final String UI_TO_OPEN = "uiToOpen";
  private NavigationTarget uiToOpen;

  public static final String MESSAGE_TO_OPEN = "messageToOpen";
  private Message messageToOpen;

  public static final String VIEWS = "views";
  private List<ViewModelData> views = new ArrayList<>();

  public UIState() { 
  }

  public UIState uuid(UUID uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }


  @JsonProperty(UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  public UIState uiToOpen(NavigationTarget uiToOpen) {
    
    this.uiToOpen = uiToOpen;
    return this;
  }

   /**
   * Get uiToOpen
   * @return uiToOpen
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(UI_TO_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NavigationTarget getUiToOpen() {
    return uiToOpen;
  }


  @JsonProperty(UI_TO_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUiToOpen(NavigationTarget uiToOpen) {
    this.uiToOpen = uiToOpen;
  }


  public UIState messageToOpen(Message messageToOpen) {
    
    this.messageToOpen = messageToOpen;
    return this;
  }

   /**
   * Get messageToOpen
   * @return messageToOpen
  **/
  @javax.annotation.Nullable
  @Valid
  @ApiModelProperty(value = "")
  @JsonProperty(MESSAGE_TO_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Message getMessageToOpen() {
    return messageToOpen;
  }


  @JsonProperty(MESSAGE_TO_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessageToOpen(Message messageToOpen) {
    this.messageToOpen = messageToOpen;
  }


  public UIState views(List<ViewModelData> views) {
    
    this.views = views;
    return this;
  }

  public UIState addViewsItem(ViewModelData viewsItem) {
    this.views.add(viewsItem);
    return this;
  }

   /**
   * Get views
   * @return views
  **/
  @javax.annotation.Nonnull
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(VIEWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ViewModelData> getViews() {
    return views;
  }


  @JsonProperty(VIEWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setViews(List<ViewModelData> views) {
    this.views = views;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UIState uiState = (UIState) o;
    return Objects.equals(this.uuid, uiState.uuid) &&
        Objects.equals(this.uiToOpen, uiState.uiToOpen) &&
        Objects.equals(this.messageToOpen, uiState.messageToOpen) &&
        Objects.equals(this.views, uiState.views);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, uiToOpen, messageToOpen, views);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UIState {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    uiToOpen: ").append(toIndentedString(uiToOpen)).append("\n");
    sb.append("    messageToOpen: ").append(toIndentedString(messageToOpen)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

